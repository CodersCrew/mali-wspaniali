# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ReturnedStatusDTO {
  status: Boolean!
}

type RedactorDTO {
  avatarUrl: String
  firstName: String!
  lastName: String
  profession: String
  biography: String
}

type ArticleDTO {
  _id: ID!
  category: String!
  contentHTML: String!
  description: String!
  pictureUrl: String!
  redactor: RedactorDTO!
  tags: [String!]!
  title: String!
  isDeleted: Boolean
  isPublished: Boolean
  videoUrl: String
  createdAt: DateTime
  deletedAt: DateTime
  modifiedAt: DateTime
  publishedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PaginatedArticlesDTO {
  articles: [ArticleDTO!]!
  count: Int!
  hasNext: Boolean!
}

type AgreementDTO {
  _id: ID!
  date: DateTime!
  text: String!
  isSigned: Boolean!
}

type KindergartenDTO {
  _id: ID!
  date: DateTime!
  number: Int!
  name: String!
  city: String!
  address: String!
  children: [ChildDTO!]!
}

type NotificationDTO {
  _id: ID!
  date: DateTime!
  user: String!
  templateId: String!
  values: [String!]!
  isRead: Boolean!
}

type ChildResultDTO {
  _id: ID!
  date: DateTime!
  test: JSONObject!
  rootResultId: String
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type ChildDTO {
  _id: ID!
  date: DateTime!
  firstname: String!
  lastname: String!
  birthYear: Int!
  birthQuarter: Int!
  sex: String!
  results: [ChildResultDTO!]!
  kindergarten: KindergartenDTO!
  isDeleted: Boolean!
  currentParams: ChildCurrentParamsDTO!
}

type UserDTO {
  _id: ID!
  date: DateTime!
  mail: String!
  role: String!
  notifications: [NotificationDTO!]
  children: [ChildDTO!]
  agreements: [AgreementDTO!]!
}

type KindergartenWithUsersDTO {
  _id: ID!
  date: DateTime!
  number: Int!
  name: String!
  city: String!
  address: String!
  users: [UserDTO!]!
}

type PartialChildResult {
  _id: ID
  childId: ID
  kindergartenId: ID
  assessmentId: ID
  firstMeasurementRunDate: DateTime
  lastMeasurementRunDate: DateTime
  firstMeasurementPendelumRunDate: DateTime
  lastMeasurementPendelumRunDate: DateTime
  firstMeasurementThrowDate: DateTime
  lastMeasurementThrowDate: DateTime
  firstMeasurementJumpDate: DateTime
  lastMeasurementJumpDate: DateTime
  firstMeasurementNote: String
  lastMeasurementNote: String
  firstMeasurementKindergarten: ID
  lastMeasurementKindergarten: ID
  firstMeasurementInstructor: ID
  lastMeasurementInstructor: ID
  firstMeasurementRunResult: Float
  lastMeasurementRunResult: Float
  firstMeasurementPendelumRunResult: Float
  lastMeasurementPendelumRunResult: Float
  firstMeasurementThrowResult: Float
  lastMeasurementThrowResult: Float
  firstMeasurementJumpResult: Float
  lastMeasurementJumpResult: Float
}

type ReturnedTokenDTO {
  token: String!
}

type ParamsDTO {
  sex: String!
  age: Int!
  a: Float!
  b: Float!
  lowerLimit: Float!
  lowerLimitPoints: Float!
  upperLimit: Float!
  upperLimitPoints: Float!
  badStageLimit: Float!
  weakStageLimit: Float!
  middleStageLimit: Float!
  goodStageLimit: Float!
  veryGoodStageLimit: Float!
}

type ChildCurrentParamsDTO {
  run: ParamsDTO
  pendelumRun: ParamsDTO
  throw: ParamsDTO
  jump: ParamsDTO
}

type CreateKeyCodeDTO {
  id: ID!
  date: DateTime!
  createdBy: String!
  keyCode: String!
  series: String!
  target: String!
}

type KeyCodeSeriesDTO {
  date: DateTime!
  createdBy: String!
  keyCode: String!
  series: String!
  target: String!
  count: Int!
}

type NewsletterDTO {
  _id: ID!
  message: String!
  recipients: [String!]!
  date: DateTime!
  title: String!
  type: String!
  isDone: Boolean!
}

type KindergartenWithInstructorDTO {
  kindergarten: KindergartenDTO
  instructor: UserDTO
}

type AssessmentDTO {
  _id: ID!
  isOutdated: Boolean!
  isDeleted: Boolean!
  title: String!
  startDate: String!
  endDate: String!
  firstMeasurementStartDate: String!
  firstMeasurementEndDate: String!
  lastMeasurementStartDate: String!
  lastMeasurementEndDate: String!
  status: String!
  firstMeasurementStatus: String!
  lastMeasurementStatus: String!
  kindergartens: [KindergartenWithInstructorDTO!]!
}

type Query {
  paginatedArticles(perPage: Int, category: String, page: Int!): PaginatedArticlesDTO!
  lastArticles(count: Int!): [ArticleDTO!]!
  article(id: String!): ArticleDTO!
  agreements: [AgreementDTO!]!
  kindergartens: [KindergartenDTO!]!
  kindergartenWithUsers(ids: [String!]!): [KindergartenWithUsersDTO!]!
  me: UserDTO!
  user(id: String!): UserDTO!
  users(role: String): [UserDTO!]!
  allChildren: [ChildDTO!]!
  kindergartenResults(kindergartenId: String!, assessmentId: String!): [PartialChildResult!]!
  keyCodes(series: String!): [CreateKeyCodeDTO!]!
  keyCodeSeries: [KeyCodeSeriesDTO!]!
  newsletters: [NewsletterDTO!]!
  assessments: [AssessmentDTO!]!
  assessment(id: String!): AssessmentDTO!
}

type Mutation {
  createArticle(article: CreateArticleInput!): ReturnedStatusDTO!
  createAgreement(agreement: String!): ReturnedStatusDTO!
  createKindergarten(kindergarten: KindergartenInput!): KindergartenDTO!
  updateKindergarten(kindergarten: UpdatedKindergartenInput!, id: String!): KindergartenDTO!
  deleteKindergarten(id: String!): ReturnedStatusDTO!
  anonymizeUser(id: String!): ReturnedStatusDTO!
  readNotification(id: String!): NotificationDTO!
  createUser(user: UserInput!): ReturnedStatusDTO!
  login(user: LoginInput!): ReturnedTokenDTO!
  resetPassword(mail: String!): ReturnedStatusDTO!
  changePassword(password: String!, jwt: String!): ReturnedStatusDTO!
  signAgreement(agreementId: String!): AgreementDTO!
  addChild(child: ChildInput!): ChildDTO!
  editChild(child: UpdatedChildInput!): ReturnedStatusDTO!
  addResult(rootResultId: String, result: ResultInput!, childId: String!): ReturnedStatusDTO!
  createAssessmentResult(result: PartialChildResultInput!): PartialChildResult!
  updateAssessmentResult(result: PartialUpdateChildResultInput!): PartialChildResult!
  createKeyCode(target: String!): CreateKeyCodeDTO!
  createKeyCodeBulk(amount: Int!, target: String!): [CreateKeyCodeDTO!]!
  createNewsletter(newsletter: NewsletterInput!): ReturnedStatusDTO!
  createKindergartenNewsletter(newsletter: NewsletterKindergartenInput!): ReturnedStatusDTO!
  createParentNewsletter(newsletter: NewsletterKindergartenInput!): ReturnedStatusDTO!
  createAssessment(assessment: AssessmentInput!): AssessmentDTO!
  updateAssessment(assessment: UpdatedAssessmentInput!, id: String!): AssessmentDTO!
}

input CreateArticleInput {
  category: String!
  contentHTML: String!
  description: String!
  pictureUrl: String!
  redactor: RedactorInput!
  tags: [String!]!
  title: String!
  videoUrl: String
}

input RedactorInput {
  firstName: String!
  lastName: String!
  avatarUrl: String
  profession: String
  biography: String
  shortDescription: String
}

input KindergartenInput {
  number: Int!
  name: String!
  address: String!
  city: String!
}

input UpdatedKindergartenInput {
  number: Int
  name: String
  address: String
  city: String
}

input UserInput {
  mail: String!
  password: String!
  keyCode: String!
  agreements: [String!]
}

input LoginInput {
  mail: String!
  password: String!
}

input ChildInput {
  firstname: String!
  lastname: String!
  birthYear: Int!
  birthQuarter: Int!
  sex: String!
  kindergartenId: String!
}

input UpdatedChildInput {
  firstname: String
  lastname: String
  birthYear: Int
  birthQuarter: Int
  sex: String
  kindergartenId: String
  childId: String!
}

input ResultInput {
  type: String!
  childAge: Int!
  agilityPoints: Int!
  agilitySeconds: Int!
  powerCentimeters: Int!
  powerPoints: Int!
  schoolYearStart: Int!
  speedPoints: Int!
  speedSeconds: Int!
  strengthCentimeters: Int!
  strengthPoints: Int!
  testPeriod: String!
}

input PartialChildResultInput {
  childId: ID
  kindergartenId: ID
  assessmentId: ID
  firstMeasurementRunDate: DateTime
  lastMeasurementRunDate: DateTime
  firstMeasurementPendelumRunDate: DateTime
  lastMeasurementPendelumRunDate: DateTime
  firstMeasurementThrowDate: DateTime
  lastMeasurementThrowDate: DateTime
  firstMeasurementJumpDate: DateTime
  lastMeasurementJumpDate: DateTime
  firstMeasurementNote: String
  lastMeasurementNote: String
  firstMeasurementKindergarten: ID
  lastMeasurementKindergarten: ID
  firstMeasurementInstructor: ID
  lastMeasurementInstructor: ID
  firstMeasurementRunResult: Float
  lastMeasurementRunResult: Float
  firstMeasurementPendelumRunResult: Float
  lastMeasurementPendelumRunResult: Float
  firstMeasurementThrowResult: Float
  lastMeasurementThrowResult: Float
  firstMeasurementJumpResult: Float
  lastMeasurementJumpResult: Float
}

input PartialUpdateChildResultInput {
  _id: ID
  childId: ID
  kindergartenId: ID
  assessmentId: ID
  firstMeasurementRunDate: DateTime
  lastMeasurementRunDate: DateTime
  firstMeasurementPendelumRunDate: DateTime
  lastMeasurementPendelumRunDate: DateTime
  firstMeasurementThrowDate: DateTime
  lastMeasurementThrowDate: DateTime
  firstMeasurementJumpDate: DateTime
  lastMeasurementJumpDate: DateTime
  firstMeasurementNote: String
  lastMeasurementNote: String
  firstMeasurementKindergarten: ID
  lastMeasurementKindergarten: ID
  firstMeasurementInstructor: ID
  lastMeasurementInstructor: ID
  firstMeasurementRunResult: Float
  lastMeasurementRunResult: Float
  firstMeasurementPendelumRunResult: Float
  lastMeasurementPendelumRunResult: Float
  firstMeasurementThrowResult: Float
  lastMeasurementThrowResult: Float
  firstMeasurementJumpResult: Float
  lastMeasurementJumpResult: Float
}

input NewsletterInput {
  message: String!
  recipients: [String!]!
  title: String!
  type: String!
}

input NewsletterKindergartenInput {
  message: String!
  kindergartens: [String!]!
  title: String!
  type: String!
}

input AssessmentInput {
  title: String!
  startDate: String!
  endDate: String!
  firstMeasurementStartDate: String!
  firstMeasurementEndDate: String!
  lastMeasurementStartDate: String!
  lastMeasurementEndDate: String!
  kindergartenIds: [String!]!
}

input UpdatedAssessmentInput {
  title: String
  startDate: String
  endDate: String
  firstMeasurementStartDate: String
  firstMeasurementEndDate: String
  lastMeasurementStartDate: String
  lastMeasurementEndDate: String
  kindergartens: [JSONObject!]
  isOutdated: Boolean
  isDeleted: Boolean
  status: String
  firstMeasurementStatus: String
  lastMeasurementStatus: String
}
