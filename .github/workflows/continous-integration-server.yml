name: server ðŸš€

on: push

jobs:
    lint-and-test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node: [12.x]
        name: Lint, test and prettier
        steps:
            - uses: actions/checkout@v2
            - name: Cache node modules
              uses: actions/cache@v1
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: Setup node
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node }}
            - name: npm install
              run: npm install
              working-directory: ${{env.working-directory}}
            - name: npm run lint
              run: npm run lint
              working-directory: ${{env.working-directory}}
            - name: npx prettier
              run: npx prettier --check src/**/*
              working-directory: ${{env.working-directory}}
            - name: npm test
              run: npm test -- --passWithNoTests
              working-directory: ${{env.working-directory}}
        env:
            CI: true
            working-directory: ./server
            JWT_SECRET: secret
            SENDER: my-admin@admin.com
    build:
        needs: [lint-and-test]
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@master
            - name: Cache node modules
              uses: actions/cache@v1
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: Install Dependencies
              run: npm install
              working-directory: ${{env.working-directory}}
            - name: Build
              run: npm run build
              working-directory: ${{env.working-directory}}
            - name: Archive Production Artifact
              uses: actions/upload-artifact@master
              with:
                  name: build
                  path: build
        env:
            CI: true
            working-directory: ./server
    tests-E2E:
        runs-on: ubuntu-latest
        container: node:10.18-jessie

        services:
            mongo:
                image: mongo
                ports:
                    - 27017:27017
        steps:
            - name: Check out repository code
              uses: actions/checkout@v2
            - name: Install Dependencies
              run: npm install
              working-directory: ${{env.working-directory}}
            - name: E2E tests
              run: npm run test:e2e
              working-directory: ${{env.working-directory}}
        env:
            MONGO_KEY_TEST: mongodb://mongo:27017/mali_wspaniali
            working-directory: ./server
            JWT_SECRET: secret
            IS_PRODUCTION_MAIL: false
            EMAIL: simone73@ethereal.email
            EMAIL_PASSWORD: bhKwsGh4HHn84kXmgR
            SENDER: my-admin@admin.com
