module.exports = {
    plugins: ['i18next', 'react-hooks'],
    settings: {
        react: {
            version: 'detect',
        },
    },
    parser: '@typescript-eslint/parser',
    extends: [
        'airbnb-base',
        'plugin:import/typescript',
        'plugin:@typescript-eslint/recommended',
        'prettier',
        'prettier/@typescript-eslint',
        'plugin:react/recommended',
    ],
    root: true,
    env: {
        node: true,
        jest: true,
        jasmine: true,
        browser: true,
    },
    rules: {
        'import/no-extraneous-dependencies': ['error', { devDependencies: true }],
        'react/react-in-jsx-scope': 'off',
        'no-useless-constructor': 'off',
        'import/prefer-default-export': 'off',
        'no-use-before-define': 'off',
        '@typescript-eslint/no-use-before-define': 'off',
        '@typescript-eslint/no-useless-constructor': 'error',
        'import/extensions': [
            'error',
            'ignorePackages',
            {
                js: 'never',
                jsx: 'never',
                ts: 'never',
                tsx: 'never',
            },
        ],

        '@typescript-eslint/explicit-function-return-type': 'off',
        semi: ['warn', 'always'],
        quotes: ['warn', 'single', 'avoid-escape'],
        indent: ['warn', 4, { SwitchCase: 1 }],
        'react/prop-types': 'off',
        'newline-before-return': 2,
        'consistent-return': 'off',
        'no-underscore-dangle': 'off',
        'react/display-name': 'off',
        '@typescript-eslint/ban-types': 'off',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/no-non-null-asserted-optional-chain': 'off',
        camelcase: 'off',
        '@typescript-eslint/camelcase': 'off',
        'arrow-body-style': 'off',
        'prefer-arrow-callback': 'off',
        '@typescript-eslint/no-unused-vars': 'off',
        'no-console': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
    },
};
