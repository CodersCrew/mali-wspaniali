[{"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/index.tsx":"1","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/apollo_client.ts":"2","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/serviceWorker.ts":"3","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/internationalization/i18n.ts":"4","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/Root.tsx":"5","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/models/AgreementTypeFilters.ts":"6","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/models/AgreementStatusFilter.ts":"7","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/models/AgreementKindergartenFilters.ts":"8","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/models/AgreementSortStatus.ts":"9","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/classNameGenerator.ts":"10","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/localizedMoment.ts":"11","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentWrapper.tsx":"12","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AppWrapper.tsx":"13","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AuthTemplate/AuthTemplate.tsx":"14","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/theme/ThemeProvider.tsx":"15","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/LoginPage/LoginPage.tsx":"16","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildResultsPage.tsx":"17","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationPage.tsx":"18","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentProfilePage/ParentProfilePage.tsx":"19","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/UsersPage/UsersPage.tsx":"20","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/NewsletterPage.tsx":"21","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ArticlePage.tsx":"22","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminHomePage/AdminHomePage.tsx":"23","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentAgreementsPage/ParentAgreementsPage.tsx":"24","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ParentSettingsPage.tsx":"25","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/CreateArticlePage/CreateArticlePage.tsx":"26","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/AdminCodesPage.tsx":"27","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArchivePage/ArchivePage.tsx":"28","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/AdminInstructorsPage.tsx":"29","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AdminAgreementsPageConatianer.tsx":"30","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/InstructorAddResultsPage.tsx":"31","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAssessmentManagementPage/AdminAssessmentHistoryPage.tsx":"32","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticleListPage/ArticleListPage.tsx":"33","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NotificationsPage/NotificationsPage.tsx":"34","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/ParentHomePage.tsx":"35","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsPage.tsx":"36","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/AdminManageSingleAssessmentPage.tsx":"37","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorSettingsPage/InstructorSettingsPage.tsx":"38","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminRecommendationsPage/AdminRecommendationsPage.tsx":"39","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/InstructorResultCreatorPage.tsx":"40","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ForgotPasswordPage/ForgotPasswordPage.tsx":"41","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/TestResultsPage.tsx":"42","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/colors.ts":"43","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/theme/theme.ts":"44","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileCategory.ts":"45","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/queries/useBreakpoints.ts":"46","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/localFields.ts":"47","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ForgotPasswordPage/isValidEmail.ts":"48","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/useResultCreator.ts":"49","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/useMe.tsx":"50","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Kindergartens/deleteKindergarten.ts":"51","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Kindergartens/updateKindergarten.ts":"52","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Kindergartens/createKindergarten.ts":"53","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/ResultsActions.tsx":"54","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/NoResults.tsx":"55","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ForgotPasswordPage/ResetPasswordConfirmation.tsx":"56","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ForgotPasswordPage/ResetPasswordForm.tsx":"57","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/MobileResultCreator.tsx":"58","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/PageContainer.tsx":"59","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChilModals/AddChildModal.tsx":"60","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/ResultCreator.tsx":"61","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/QuestionDialog.tsx":"62","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/KindergartenList.tsx":"63","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/ActionButton.tsx":"64","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/EditableBasicInformationForm.tsx":"65","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/ChildProfileAboutTests.tsx":"66","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildRecommendations/ChildRecommendations.tsx":"67","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Navigation/MobileAwareCategoryTabs.tsx":"68","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ChildProfileResults.tsx":"69","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/Details/ChildDetails.tsx":"70","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/addChild.tsx":"71","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/useGetMe.tsx":"72","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/resetPassword.tsx":"73","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/authorizeMe.tsx":"74","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Navbar/Navbar.tsx":"75","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/Sidebar.tsx":"76","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/useAssessmentManager.tsx":"77","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/KindergartenPicker.tsx":"78","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/TestInformation.tsx":"79","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenModals/ChangeLogModal.tsx":"80","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenModals/KindergartenDeleteModal.tsx":"81","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsList.tsx":"82","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenModals/KindergartenModal.tsx":"83","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenTable/TestResultsTable.tsx":"84","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Results/createAssessmentResult.tsx":"85","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Kindergartens/getKindergartens.tsx":"86","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Snackbar/openSnackbar.tsx":"87","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticleListPage/Pagination.tsx":"88","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NotificationsPage/NotificationPageList.tsx":"89","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/BasicInformationForm/BasicInformationForm.tsx":"90","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Articles/getLastArticles.tsx":"91","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Notification/readNotification.tsx":"92","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageChildren/HomePageChildren.tsx":"93","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/index.ts":"94","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/index.ts":"95","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageArticles/index.ts":"96","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageInfo/index.ts":"97","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Results/getAssessmentResults.tsx":"98","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Assessment/getAllAssessments.tsx":"99","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/formatDate.ts":"100","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NotificationsPage/useNotificationContent.ts":"101","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ButtonSecondary.tsx":"102","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/SearchInput.tsx":"103","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ActionMenuButtonSecondary.tsx":"104","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/LabeledContainer.tsx":"105","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/OutlinedDateField.tsx":"106","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/SelectList.tsx":"107","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsListContainer.tsx":"108","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenTable/TestResultsTableRow.tsx":"109","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Tooltip/ArrowTooltip.tsx":"110","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/openDialog.tsx":"111","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/CustomContainer.tsx":"112","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Assessment/getAssessment.tsx":"113","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NotificationsPage/NotificationPageListItem.tsx":"114","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/AdminSidebar.tsx":"115","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/InstructorSidebar.tsx":"116","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/ParentSidebar.tsx":"117","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Modal/TwoActionsModal.tsx":"118","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Modal/BasicModal.tsx":"119","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Assessment/createAssessment.tsx":"120","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Assessment/updateAssessment.tsx":"121","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageChildren/HomePageChildCard.tsx":"122","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageAddChildButton/HomePageAddChildButton.tsx":"123","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ButtonDefault.tsx":"124","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ButtonPrimary.tsx":"125","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationForm.tsx":"126","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/getMenuWidth.ts":"127","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageInfo/HomePageInfo.tsx":"128","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ButtonBase.tsx":"129","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageArticles/HomePageArticles.tsx":"130","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsItem.tsx":"131","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenTable/KindergartenChildrenTable.tsx":"132","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/CollapsibleList.tsx":"133","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Label.tsx":"134","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/LabeledHeader.tsx":"135","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/MenuDrawer.tsx":"136","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/SingleItem.tsx":"137","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Users/getUsersByRole.tsx":"138","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/menuItemFactory.tsx":"139","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageAddChildButton/HomePageAddChildCard.tsx":"140","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/agreementRepository.ts":"141","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationCode.tsx":"142","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/LanguageSelector.tsx":"143","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationFeedback.tsx":"144","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationPassword.tsx":"145","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationEmail.tsx":"146","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationAgreement.tsx":"147","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/styles.ts":"148","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/passwordStrengthTest.ts":"149","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/queries/userQueries.ts":"150","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/chunkArray.ts":"151","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/load.tsx":"152","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/AlertDialog.tsx":"153","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsDeleteParentModal.tsx":"154","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChilModals/EditChildModal.tsx":"155","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/AppLogo.tsx":"156","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/Icon.tsx":"157","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Blog/BlogArticleCard.tsx":"158","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/emailTest.ts":"159","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/userRepository.ts":"160","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/PasswordStrengthChips.tsx":"161","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/AgreementModal.tsx":"162","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChilModals/utils.ts":"163","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Loader.tsx":"164","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildCard/ChildCard.tsx":"165","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildForm/ChildForm.tsx":"166","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildForm/Select.tsx":"167","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildForm/Input.tsx":"168","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildForm/useSelectValues.tsx":"169","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/parseBirthQuarter.ts":"170","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/LoggedAsItem.tsx":"171","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/useOnClickOutside.tsx":"172","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/editChild.tsx":"173","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/LanguageSelector.tsx":"174","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/BasicInformationForm/AssessmentInformationItem.tsx":"175","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/Details/EditChildPanel.tsx":"176","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Navbar/NotificationsPanel.tsx":"177","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/GroupedTest.tsx":"178","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Navigation/CategoryTabs.tsx":"179","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Navigation/CategoryTabsMobile.tsx":"180","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/panels/Conditions.tsx":"181","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/panels/Interpretation.tsx":"182","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/panels/About.tsx":"183","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/panels/Results.tsx":"184","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/MeasurementEditor/ChildHeader.tsx":"185","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/MeasurementEditor/MeasurementEditor.tsx":"186","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/ChildPicker/ChildPicker.tsx":"187","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/ChildPicker/ChildPickerDrawer.tsx":"188","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/countSumOfPoints.ts":"189","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/StatusChip.tsx":"190","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ProgressBar.tsx":"191","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Navbar/NotificationItem.tsx":"192","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Tabs/Tabs.tsx":"193","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/SearchChildField.tsx":"194","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/Panel.tsx":"195","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/ChildPicker/ChildItem.tsx":"196","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/MeasurementEditor/MeasurementPoint.tsx":"197","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/CircleChart.tsx":"198","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/ResultComparison.tsx":"199","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/SingleTest.tsx":"200","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/SummarisedGroupedTest/SummarisedGroupedTest.tsx":"201","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticleListPage/BlogCategories.ts":"202","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/articleRepository.ts":"203","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Tabs/Tab.tsx":"204","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Blog/Pagination.tsx":"205","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/OutlinedTextField.tsx":"206","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/PanelSummary.tsx":"207","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/constants.ts":"208","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/calculateResult.ts":"209","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/parseDateToAge.ts":"210","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAssessmentManagementPage/AssessmentHistoryList/AssessmentHistoryList.tsx":"211","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/TestDetails.tsx":"212","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/TestSummary.tsx":"213","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Agreements/getAgreementsKindergartenFilter.ts":"214","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Agreements/getAgreementsSortStatus.ts":"215","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Agreements/getAgreementsTypeFilter.ts":"216","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/NoAssessmentsView.tsx":"217","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/SecondaryFab.tsx":"218","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/ChildListCompactContainer.tsx":"219","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/AssessmentSubheader.tsx":"220","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/AddNoteDialog.tsx":"221","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/ChildListHeader.tsx":"222","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/ChildListContainer.tsx":"223","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Agreements/getAgreementsStatusFilter.ts":"224","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/kindergartensRepository.ts":"225","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/agreementsTypeFilterMutations.ts":"226","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/calculateReadingTime.ts":"227","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AdminAgreementsPage.tsx":"228","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/AssignInstructorModal/AssignInstructorModal.tsx":"229","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/InstructorsTable/InstructorsTableRow.tsx":"230","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/AssessmentsSelect.tsx":"231","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/TagList.tsx":"232","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/InstructorsTable/InstructorsTableContainer.tsx":"233","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/InstructorsSelect.tsx":"234","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Articles/getArticleById.tsx":"235","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ParentSettingsExpansionPanel.tsx":"236","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/Toolbar.tsx":"237","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentAgreementsPage/Agreements.tsx":"238","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ReadingTime.tsx":"239","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/KeyCodes.tsx":"240","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticleListPage/ArticleNavigationMobile.tsx":"241","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ArticleRedactor.tsx":"242","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ArticleContent.tsx":"243","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/NewsletterRecipient.tsx":"244","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/NewsletterContent.tsx":"245","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/UsersPage/NoResults.tsx":"246","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ArticleVideo.tsx":"247","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/UsersPage/UserPagePagination.tsx":"248","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/UsersPage/UsersTableRow.tsx":"249","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAssessmentManagementPage/AssessmentHistoryList/AssessmentItem.tsx":"250","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/Measurement.tsx":"251","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/emptyViews/NoResultsBlock.tsx":"252","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Clickable.tsx":"253","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/setAgreementTypeFilter.ts":"254","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/addAgreementKindergartenFilters.ts":"255","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/setAgreementKindergartenFilter.ts":"256","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/setAgreementSortStatus.ts":"257","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/setAgreementStatusFilter.ts":"258","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/AssignInstructorModal/KindergartenTable.tsx":"259","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/data.ts":"260","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/AgreementsList.tsx":"261","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/AgreementsFilter.tsx":"262","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/InstructorsTable/InstructorsTableHead.tsx":"263","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/useUpdateAgreements.tsx":"264","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ExpansionPanelItem.tsx":"265","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/LegalNotesPanel/LegalNotesPanel.tsx":"266","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/LoadingButton.tsx":"267","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangePasswordPanel.tsx":"268","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/RoleToggleButton.tsx":"269","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/ActiveKeysList.tsx":"270","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/AccountDeletionPanel/AccountDeletionPanel.tsx":"271","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/KeyCodesToGenerateTextfield.tsx":"272","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/FilenameButton.tsx":"273","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/useGenerateExcel.tsx":"274","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/MultipleSelect.tsx":"275","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/Workspace.tsx":"276","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/SingleSelect.tsx":"277","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/HelpModal.tsx":"278","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/KeyCodes/getKeyCodesSeries.tsx":"279","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/KeyCodes/createKeyCodes.tsx":"280","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangePasswordPanelReducer.ts":"281","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/getKeyCodesWorkbook.ts":"282","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/ChildrenFromKindergartenList.tsx":"283","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/workspaceConfig.ts":"284","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/SortableHeader.tsx":"285","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/AgreementTypeInput.tsx":"286","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/ChildrenFromKindergartenListLoading.tsx":"287","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/AgreementStatusInput.tsx":"288","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/AgreementKindergartenInput.tsx":"289","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/KeyCodes/getKeyCodes.tsx":"290","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangepasswordPanelFormControls/ButtonResetOldPassword.tsx":"291","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangepasswordPanelFormControls/FormControlOldPassword.tsx":"292","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangepasswordPanelFormControls/ButtonSendMessage.tsx":"293","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/AccountDeletionPanel/ModalSettings.tsx":"294","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/FilterMenuProps.ts":"295","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/KindergartenAgreementsList.tsx":"296","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Icons/Status.tsx":"297","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/AccountDeletionPanel/useParentsSelectOption.tsx":"298"},{"size":795,"mtime":1608202828996,"results":"299","hashOfConfig":"300"},{"size":2386,"mtime":1608202828101,"results":"301","hashOfConfig":"300"},{"size":6007,"mtime":1609247966372,"results":"302","hashOfConfig":"300"},{"size":1110,"mtime":1608665839854,"results":"303","hashOfConfig":"300"},{"size":8732,"mtime":1611401324309,"results":"304","hashOfConfig":"300"},{"size":485,"mtime":1608202829161,"results":"305","hashOfConfig":"300"},{"size":491,"mtime":1608204863648,"results":"306","hashOfConfig":"300"},{"size":384,"mtime":1608204863648,"results":"307","hashOfConfig":"300"},{"size":520,"mtime":1608202829152,"results":"308","hashOfConfig":"300"},{"size":958,"mtime":1610206324235,"results":"309","hashOfConfig":"300"},{"size":223,"mtime":1611401324268,"results":"310","hashOfConfig":"300"},{"size":1094,"mtime":1611416633145,"results":"311","hashOfConfig":"300"},{"size":3064,"mtime":1611401324286,"results":"312","hashOfConfig":"300"},{"size":4972,"mtime":1611401324288,"results":"313","hashOfConfig":"300"},{"size":989,"mtime":1610206324276,"results":"314","hashOfConfig":"300"},{"size":5238,"mtime":1611401324304,"results":"315","hashOfConfig":"300"},{"size":3163,"mtime":1610206324262,"results":"316","hashOfConfig":"300"},{"size":307,"mtime":1610206324274,"results":"317","hashOfConfig":"300"},{"size":737,"mtime":1611416591881,"results":"318","hashOfConfig":"300"},{"size":1801,"mtime":1610206324275,"results":"319","hashOfConfig":"300"},{"size":8908,"mtime":1610206324268,"results":"320","hashOfConfig":"300"},{"size":4681,"mtime":1611401324287,"results":"321","hashOfConfig":"300"},{"size":243,"mtime":1611416410403,"results":"322","hashOfConfig":"300"},{"size":550,"mtime":1610206324269,"results":"323","hashOfConfig":"300"},{"size":591,"mtime":1610206324272,"results":"324","hashOfConfig":"300"},{"size":266,"mtime":1611416533024,"results":"325","hashOfConfig":"300"},{"size":811,"mtime":1610206324253,"results":"326","hashOfConfig":"300"},{"size":283,"mtime":1611416445191,"results":"327","hashOfConfig":"300"},{"size":5454,"mtime":1611401324276,"results":"328","hashOfConfig":"300"},{"size":5121,"mtime":1610206324252,"results":"329","hashOfConfig":"300"},{"size":9514,"mtime":1611408475649,"results":"330","hashOfConfig":"300"},{"size":2173,"mtime":1610206324252,"results":"331","hashOfConfig":"300"},{"size":4921,"mtime":1610206324256,"results":"332","hashOfConfig":"300"},{"size":1014,"mtime":1610206324268,"results":"333","hashOfConfig":"300"},{"size":4241,"mtime":1610206324269,"results":"334","hashOfConfig":"300"},{"size":452,"mtime":1611401324286,"results":"335","hashOfConfig":"300"},{"size":7208,"mtime":1611085641767,"results":"336","hashOfConfig":"300"},{"size":271,"mtime":1611416551648,"results":"337","hashOfConfig":"300"},{"size":328,"mtime":1611416427936,"results":"338","hashOfConfig":"300"},{"size":4455,"mtime":1611408475650,"results":"339","hashOfConfig":"300"},{"size":3819,"mtime":1610206324263,"results":"340","hashOfConfig":"300"},{"size":4119,"mtime":1610206324275,"results":"341","hashOfConfig":"300"},{"size":1573,"mtime":1608857049865,"results":"342","hashOfConfig":"300"},{"size":3425,"mtime":1608238225946,"results":"343","hashOfConfig":"300"},{"size":578,"mtime":1609247966327,"results":"344","hashOfConfig":"300"},{"size":846,"mtime":1609319991942,"results":"345","hashOfConfig":"300"},{"size":133,"mtime":1608202828929,"results":"346","hashOfConfig":"300"},{"size":572,"mtime":1608202830723,"results":"347","hashOfConfig":"300"},{"size":5807,"mtime":1611408475660,"results":"348","hashOfConfig":"300"},{"size":227,"mtime":1609151815241,"results":"349","hashOfConfig":"300"},{"size":1504,"mtime":1609247966284,"results":"350","hashOfConfig":"300"},{"size":1273,"mtime":1609247966285,"results":"351","hashOfConfig":"300"},{"size":1426,"mtime":1609247966284,"results":"352","hashOfConfig":"300"},{"size":1352,"mtime":1609247966368,"results":"353","hashOfConfig":"300"},{"size":332,"mtime":1608202831559,"results":"354","hashOfConfig":"300"},{"size":1256,"mtime":1608202830733,"results":"355","hashOfConfig":"300"},{"size":3651,"mtime":1608665839931,"results":"356","hashOfConfig":"300"},{"size":5596,"mtime":1611408475656,"results":"357","hashOfConfig":"300"},{"size":527,"mtime":1611416319030,"results":"358","hashOfConfig":"300"},{"size":2308,"mtime":1611401324248,"results":"359","hashOfConfig":"300"},{"size":6314,"mtime":1611408475657,"results":"360","hashOfConfig":"300"},{"size":1519,"mtime":1608665839848,"results":"361","hashOfConfig":"300"},{"size":2613,"mtime":1609247966296,"results":"362","hashOfConfig":"300"},{"size":991,"mtime":1610206324248,"results":"363","hashOfConfig":"300"},{"size":9056,"mtime":1610206324250,"results":"364","hashOfConfig":"300"},{"size":422,"mtime":1608202830328,"results":"365","hashOfConfig":"300"},{"size":3198,"mtime":1608704139175,"results":"366","hashOfConfig":"300"},{"size":1650,"mtime":1608202828801,"results":"367","hashOfConfig":"300"},{"size":1585,"mtime":1609247966328,"results":"368","hashOfConfig":"300"},{"size":1910,"mtime":1609247966332,"results":"369","hashOfConfig":"300"},{"size":1214,"mtime":1608665839865,"results":"370","hashOfConfig":"300"},{"size":1084,"mtime":1609247966287,"results":"371","hashOfConfig":"300"},{"size":609,"mtime":1608665839869,"results":"372","hashOfConfig":"300"},{"size":1297,"mtime":1611401324271,"results":"373","hashOfConfig":"300"},{"size":4326,"mtime":1609247966271,"results":"374","hashOfConfig":"300"},{"size":1062,"mtime":1608202828738,"results":"375","hashOfConfig":"300"},{"size":8683,"mtime":1611401324273,"results":"376","hashOfConfig":"300"},{"size":5427,"mtime":1609677774835,"results":"377","hashOfConfig":"300"},{"size":317,"mtime":1608202829664,"results":"378","hashOfConfig":"300"},{"size":976,"mtime":1610206324275,"results":"379","hashOfConfig":"300"},{"size":1782,"mtime":1608665839959,"results":"380","hashOfConfig":"300"},{"size":551,"mtime":1610265403700,"results":"381","hashOfConfig":"300"},{"size":5568,"mtime":1609247966366,"results":"382","hashOfConfig":"300"},{"size":1512,"mtime":1609247966367,"results":"383","hashOfConfig":"300"},{"size":3769,"mtime":1611408475643,"results":"384","hashOfConfig":"300"},{"size":746,"mtime":1609247966293,"results":"385","hashOfConfig":"300"},{"size":1227,"mtime":1609247966283,"results":"386","hashOfConfig":"300"},{"size":1331,"mtime":1610206324257,"results":"387","hashOfConfig":"300"},{"size":2414,"mtime":1609247966351,"results":"388","hashOfConfig":"300"},{"size":2815,"mtime":1610206324249,"results":"389","hashOfConfig":"300"},{"size":525,"mtime":1609247966289,"results":"390","hashOfConfig":"300"},{"size":735,"mtime":1609247966285,"results":"391","hashOfConfig":"300"},{"size":5020,"mtime":1611401324307,"results":"392","hashOfConfig":"300"},{"size":55,"mtime":1594763662274,"results":"393","hashOfConfig":"300"},{"size":151,"mtime":1608198551705,"results":"394","hashOfConfig":"300"},{"size":55,"mtime":1608198551780,"results":"395","hashOfConfig":"300"},{"size":47,"mtime":1608198551786,"results":"396","hashOfConfig":"300"},{"size":1969,"mtime":1611408475646,"results":"397","hashOfConfig":"300"},{"size":3669,"mtime":1610206324247,"results":"398","hashOfConfig":"300"},{"size":112,"mtime":1609247966373,"results":"399","hashOfConfig":"300"},{"size":840,"mtime":1609151854616,"results":"400","hashOfConfig":"300"},{"size":224,"mtime":1609247966269,"results":"401","hashOfConfig":"300"},{"size":666,"mtime":1609247966369,"results":"402","hashOfConfig":"300"},{"size":2097,"mtime":1611401324248,"results":"403","hashOfConfig":"300"},{"size":895,"mtime":1608202828412,"results":"404","hashOfConfig":"300"},{"size":660,"mtime":1610206324242,"results":"405","hashOfConfig":"300"},{"size":844,"mtime":1610206324243,"results":"406","hashOfConfig":"300"},{"size":990,"mtime":1611401324285,"results":"407","hashOfConfig":"300"},{"size":1903,"mtime":1608665839964,"results":"408","hashOfConfig":"300"},{"size":463,"mtime":1608202828881,"results":"409","hashOfConfig":"300"},{"size":1460,"mtime":1609247966375,"results":"410","hashOfConfig":"300"},{"size":1069,"mtime":1611401324253,"results":"411","hashOfConfig":"300"},{"size":1392,"mtime":1610206324247,"results":"412","hashOfConfig":"300"},{"size":1984,"mtime":1611401324305,"results":"413","hashOfConfig":"300"},{"size":4290,"mtime":1609247966273,"results":"414","hashOfConfig":"300"},{"size":3212,"mtime":1609247966274,"results":"415","hashOfConfig":"300"},{"size":3924,"mtime":1611401324257,"results":"416","hashOfConfig":"300"},{"size":1763,"mtime":1610206324242,"results":"417","hashOfConfig":"300"},{"size":1768,"mtime":1611401324258,"results":"418","hashOfConfig":"300"},{"size":2371,"mtime":1610206324246,"results":"419","hashOfConfig":"300"},{"size":1817,"mtime":1611401324270,"results":"420","hashOfConfig":"300"},{"size":1165,"mtime":1609319991937,"results":"421","hashOfConfig":"300"},{"size":408,"mtime":1608665839937,"results":"422","hashOfConfig":"300"},{"size":204,"mtime":1609247966268,"results":"423","hashOfConfig":"300"},{"size":220,"mtime":1610265403697,"results":"424","hashOfConfig":"300"},{"size":7443,"mtime":1609247966361,"results":"425","hashOfConfig":"300"},{"size":242,"mtime":1608202828585,"results":"426","hashOfConfig":"300"},{"size":1984,"mtime":1609319991939,"results":"427","hashOfConfig":"300"},{"size":1062,"mtime":1611416173892,"results":"428","hashOfConfig":"300"},{"size":2138,"mtime":1609319991934,"results":"429","hashOfConfig":"300"},{"size":5147,"mtime":1611401324284,"results":"430","hashOfConfig":"300"},{"size":3439,"mtime":1609247966367,"results":"431","hashOfConfig":"300"},{"size":1610,"mtime":1609247966274,"results":"432","hashOfConfig":"300"},{"size":558,"mtime":1611416232494,"results":"433","hashOfConfig":"300"},{"size":770,"mtime":1608202828630,"results":"434","hashOfConfig":"300"},{"size":1371,"mtime":1611416277534,"results":"435","hashOfConfig":"300"},{"size":1664,"mtime":1611416143215,"results":"436","hashOfConfig":"300"},{"size":2369,"mtime":1610265403699,"results":"437","hashOfConfig":"300"},{"size":13507,"mtime":1611416303762,"results":"438","hashOfConfig":"300"},{"size":1226,"mtime":1609319991935,"results":"439","hashOfConfig":"300"},{"size":446,"mtime":1608202828906,"results":"440","hashOfConfig":"300"},{"size":1712,"mtime":1609247966360,"results":"441","hashOfConfig":"300"},{"size":1226,"mtime":1609247966358,"results":"442","hashOfConfig":"300"},{"size":741,"mtime":1608202831390,"results":"443","hashOfConfig":"300"},{"size":4402,"mtime":1609247966361,"results":"444","hashOfConfig":"300"},{"size":1382,"mtime":1608202831382,"results":"445","hashOfConfig":"300"},{"size":5313,"mtime":1608204863711,"results":"446","hashOfConfig":"300"},{"size":5279,"mtime":1609247966362,"results":"447","hashOfConfig":"300"},{"size":681,"mtime":1609247966363,"results":"448","hashOfConfig":"300"},{"size":302,"mtime":1608202831653,"results":"449","hashOfConfig":"300"},{"size":173,"mtime":1611414364277,"results":"450","hashOfConfig":"300"},{"size":1204,"mtime":1608202831798,"results":"451","hashOfConfig":"300"},{"size":1104,"mtime":1610206324239,"results":"452","hashOfConfig":"300"},{"size":2097,"mtime":1611401324283,"results":"453","hashOfConfig":"300"},{"size":5533,"mtime":1611401324249,"results":"454","hashOfConfig":"300"},{"size":139,"mtime":1611415145436,"results":"455","hashOfConfig":"300"},{"size":1051,"mtime":1611416257983,"results":"456","hashOfConfig":"300"},{"size":2170,"mtime":1609318514289,"results":"457","hashOfConfig":"300"},{"size":192,"mtime":1609247966363,"results":"458","hashOfConfig":"300"},{"size":4660,"mtime":1608665839853,"results":"459","hashOfConfig":"300"},{"size":1204,"mtime":1609247966359,"results":"460","hashOfConfig":"300"},{"size":1079,"mtime":1610206324273,"results":"461","hashOfConfig":"300"},{"size":907,"mtime":1611401324249,"results":"462","hashOfConfig":"300"},{"size":458,"mtime":1610206324241,"results":"463","hashOfConfig":"300"},{"size":1407,"mtime":1611401324250,"results":"464","hashOfConfig":"300"},{"size":5252,"mtime":1611401324250,"results":"465","hashOfConfig":"300"},{"size":2217,"mtime":1611401324251,"results":"466","hashOfConfig":"300"},{"size":1019,"mtime":1611401324251,"results":"467","hashOfConfig":"300"},{"size":1802,"mtime":1611401324251,"results":"468","hashOfConfig":"300"},{"size":209,"mtime":1608700762104,"results":"469","hashOfConfig":"300"},{"size":585,"mtime":1608665839843,"results":"470","hashOfConfig":"300"},{"size":704,"mtime":1611415050481,"results":"471","hashOfConfig":"300"},{"size":1845,"mtime":1609247966287,"results":"472","hashOfConfig":"300"},{"size":926,"mtime":1611414364275,"results":"473","hashOfConfig":"300"},{"size":2945,"mtime":1610206324249,"results":"474","hashOfConfig":"300"},{"size":7431,"mtime":1611401324292,"results":"475","hashOfConfig":"300"},{"size":3731,"mtime":1609247966272,"results":"476","hashOfConfig":"300"},{"size":2463,"mtime":1608202830608,"results":"477","hashOfConfig":"300"},{"size":972,"mtime":1609247966278,"results":"478","hashOfConfig":"300"},{"size":1018,"mtime":1609247966280,"results":"479","hashOfConfig":"300"},{"size":3648,"mtime":1610206324259,"results":"480","hashOfConfig":"300"},{"size":1242,"mtime":1610206324260,"results":"481","hashOfConfig":"300"},{"size":1787,"mtime":1610206324259,"results":"482","hashOfConfig":"300"},{"size":3312,"mtime":1610206324260,"results":"483","hashOfConfig":"300"},{"size":2266,"mtime":1610293122187,"results":"484","hashOfConfig":"300"},{"size":5824,"mtime":1611408475653,"results":"485","hashOfConfig":"300"},{"size":3987,"mtime":1611401324298,"results":"486","hashOfConfig":"300"},{"size":3015,"mtime":1611401324299,"results":"487","hashOfConfig":"300"},{"size":303,"mtime":1608202831778,"results":"488","hashOfConfig":"300"},{"size":1109,"mtime":1610206324243,"results":"489","hashOfConfig":"300"},{"size":1115,"mtime":1610206324243,"results":"490","hashOfConfig":"300"},{"size":2602,"mtime":1611401324255,"results":"491","hashOfConfig":"300"},{"size":1313,"mtime":1609151854613,"results":"492","hashOfConfig":"300"},{"size":2876,"mtime":1611401324262,"results":"493","hashOfConfig":"300"},{"size":869,"mtime":1610206324258,"results":"494","hashOfConfig":"300"},{"size":1713,"mtime":1609247966339,"results":"495","hashOfConfig":"300"},{"size":8224,"mtime":1611408475655,"results":"496","hashOfConfig":"300"},{"size":1432,"mtime":1609558311130,"results":"497","hashOfConfig":"300"},{"size":3800,"mtime":1610206324260,"results":"498","hashOfConfig":"300"},{"size":722,"mtime":1608202830557,"results":"499","hashOfConfig":"300"},{"size":2004,"mtime":1611401324291,"results":"500","hashOfConfig":"300"},{"size":630,"mtime":1608202830207,"results":"501","hashOfConfig":"300"},{"size":803,"mtime":1608202828917,"results":"502","hashOfConfig":"300"},{"size":830,"mtime":1608204863646,"results":"503","hashOfConfig":"300"},{"size":1464,"mtime":1608202828329,"results":"504","hashOfConfig":"300"},{"size":561,"mtime":1611401324260,"results":"505","hashOfConfig":"300"},{"size":733,"mtime":1610206324258,"results":"506","hashOfConfig":"300"},{"size":1141,"mtime":1608202830459,"results":"507","hashOfConfig":"300"},{"size":903,"mtime":1608202830454,"results":"508","hashOfConfig":"300"},{"size":551,"mtime":1611401324310,"results":"509","hashOfConfig":"300"},{"size":1498,"mtime":1610206324253,"results":"510","hashOfConfig":"300"},{"size":2194,"mtime":1609247966329,"results":"511","hashOfConfig":"300"},{"size":4591,"mtime":1611401324290,"results":"512","hashOfConfig":"300"},{"size":507,"mtime":1608202829314,"results":"513","hashOfConfig":"300"},{"size":365,"mtime":1608202829320,"results":"514","hashOfConfig":"300"},{"size":397,"mtime":1608202829334,"results":"515","hashOfConfig":"300"},{"size":1306,"mtime":1609247966338,"results":"516","hashOfConfig":"300"},{"size":715,"mtime":1609608265185,"results":"517","hashOfConfig":"300"},{"size":12019,"mtime":1611401324294,"results":"518","hashOfConfig":"300"},{"size":4604,"mtime":1611401324293,"results":"519","hashOfConfig":"300"},{"size":3172,"mtime":1610206324264,"results":"520","hashOfConfig":"300"},{"size":3298,"mtime":1611401324296,"results":"521","hashOfConfig":"300"},{"size":5507,"mtime":1611408475647,"results":"522","hashOfConfig":"300"},{"size":412,"mtime":1608202829327,"results":"523","hashOfConfig":"300"},{"size":802,"mtime":1608665839850,"results":"524","hashOfConfig":"300"},{"size":1141,"mtime":1608202829203,"results":"525","hashOfConfig":"300"},{"size":342,"mtime":1608202831765,"results":"526","hashOfConfig":"300"},{"size":4015,"mtime":1610206324251,"results":"527","hashOfConfig":"300"},{"size":5493,"mtime":1611401324278,"results":"528","hashOfConfig":"300"},{"size":4031,"mtime":1611401324282,"results":"529","hashOfConfig":"300"},{"size":1196,"mtime":1611401324277,"results":"530","hashOfConfig":"300"},{"size":1335,"mtime":1610206324257,"results":"531","hashOfConfig":"300"},{"size":496,"mtime":1609247966313,"results":"532","hashOfConfig":"300"},{"size":1232,"mtime":1611401324281,"results":"533","hashOfConfig":"300"},{"size":813,"mtime":1609247966288,"results":"534","hashOfConfig":"300"},{"size":1797,"mtime":1611414996125,"results":"535","hashOfConfig":"300"},{"size":2588,"mtime":1609247966315,"results":"536","hashOfConfig":"300"},{"size":6573,"mtime":1610265403702,"results":"537","hashOfConfig":"300"},{"size":1149,"mtime":1608202830296,"results":"538","hashOfConfig":"300"},{"size":4158,"mtime":1609247966309,"results":"539","hashOfConfig":"300"},{"size":1048,"mtime":1610262142098,"results":"540","hashOfConfig":"300"},{"size":3191,"mtime":1608202830280,"results":"541","hashOfConfig":"300"},{"size":830,"mtime":1608202830247,"results":"542","hashOfConfig":"300"},{"size":5468,"mtime":1609247966348,"results":"543","hashOfConfig":"300"},{"size":3138,"mtime":1608202830824,"results":"544","hashOfConfig":"300"},{"size":332,"mtime":1608202831603,"results":"545","hashOfConfig":"300"},{"size":501,"mtime":1608202830285,"results":"546","hashOfConfig":"300"},{"size":835,"mtime":1611414364276,"results":"547","hashOfConfig":"300"},{"size":913,"mtime":1609247966371,"results":"548","hashOfConfig":"300"},{"size":2842,"mtime":1610206324253,"results":"549","hashOfConfig":"300"},{"size":2628,"mtime":1608202830516,"results":"550","hashOfConfig":"300"},{"size":977,"mtime":1608202830500,"results":"551","hashOfConfig":"300"},{"size":355,"mtime":1611416203301,"results":"552","hashOfConfig":"300"},{"size":307,"mtime":1608202829198,"results":"553","hashOfConfig":"300"},{"size":379,"mtime":1608202829169,"results":"554","hashOfConfig":"300"},{"size":1523,"mtime":1609247966283,"results":"555","hashOfConfig":"300"},{"size":300,"mtime":1608202829189,"results":"556","hashOfConfig":"300"},{"size":320,"mtime":1608202829193,"results":"557","hashOfConfig":"300"},{"size":4826,"mtime":1611401324280,"results":"558","hashOfConfig":"300"},{"size":1364,"mtime":1609247966350,"results":"559","hashOfConfig":"300"},{"size":3037,"mtime":1609247966303,"results":"560","hashOfConfig":"300"},{"size":2784,"mtime":1608202829768,"results":"561","hashOfConfig":"300"},{"size":1027,"mtime":1609247966314,"results":"562","hashOfConfig":"300"},{"size":718,"mtime":1610265403699,"results":"563","hashOfConfig":"300"},{"size":1248,"mtime":1611414961760,"results":"564","hashOfConfig":"300"},{"size":71,"mtime":1611416603325,"results":"565","hashOfConfig":"300"},{"size":1112,"mtime":1608665839894,"results":"566","hashOfConfig":"300"},{"size":2317,"mtime":1610206324270,"results":"567","hashOfConfig":"300"},{"size":1026,"mtime":1608665839896,"results":"568","hashOfConfig":"300"},{"size":5305,"mtime":1611401324274,"results":"569","hashOfConfig":"300"},{"size":1708,"mtime":1609247966354,"results":"570","hashOfConfig":"300"},{"size":1135,"mtime":1608665839894,"results":"571","hashOfConfig":"300"},{"size":1676,"mtime":1608665839894,"results":"572","hashOfConfig":"300"},{"size":676,"mtime":1608665839899,"results":"573","hashOfConfig":"300"},{"size":2470,"mtime":1609247966346,"results":"574","hashOfConfig":"300"},{"size":1248,"mtime":1611416567473,"results":"575","hashOfConfig":"300"},{"size":2183,"mtime":1609247966349,"results":"576","hashOfConfig":"300"},{"size":1988,"mtime":1610206324267,"results":"577","hashOfConfig":"300"},{"size":510,"mtime":1609247966292,"results":"578","hashOfConfig":"300"},{"size":1180,"mtime":1608202829227,"results":"579","hashOfConfig":"300"},{"size":2564,"mtime":1608665839946,"results":"580","hashOfConfig":"300"},{"size":1194,"mtime":1608665839899,"results":"581","hashOfConfig":"300"},{"size":6434,"mtime":1609247966304,"results":"582","hashOfConfig":"300"},{"size":585,"mtime":1608202830935,"results":"583","hashOfConfig":"300"},{"size":4733,"mtime":1608204863676,"results":"584","hashOfConfig":"300"},{"size":2030,"mtime":1608202829786,"results":"585","hashOfConfig":"300"},{"size":1718,"mtime":1608202829841,"results":"586","hashOfConfig":"300"},{"size":2044,"mtime":1608202829778,"results":"587","hashOfConfig":"300"},{"size":2805,"mtime":1609247966302,"results":"588","hashOfConfig":"300"},{"size":704,"mtime":1609247966291,"results":"589","hashOfConfig":"300"},{"size":2999,"mtime":1610206324271,"results":"590","hashOfConfig":"300"},{"size":2464,"mtime":1610206324271,"results":"591","hashOfConfig":"300"},{"size":894,"mtime":1610206324271,"results":"592","hashOfConfig":"300"},{"size":4952,"mtime":1611401324247,"results":"593","hashOfConfig":"300"},{"size":300,"mtime":1608202829790,"results":"594","hashOfConfig":"300"},{"size":2302,"mtime":1609247966305,"results":"595","hashOfConfig":"300"},{"size":910,"mtime":1608202828395,"results":"596","hashOfConfig":"300"},{"size":1093,"mtime":1609247966265,"results":"597","hashOfConfig":"300"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},"11kh2vd",{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"600"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"600"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"600"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"600"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"600"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"600"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"600"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"600"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"600"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"600"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"725","usedDeprecatedRules":"600"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"732","usedDeprecatedRules":"600"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"600"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"600"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"600"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"600"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"600"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"600"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"600"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"600"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"600"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"600"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"600"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"600"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"600"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"600"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"600"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"600"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"600"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830","usedDeprecatedRules":"600"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"841","usedDeprecatedRules":"600"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844","usedDeprecatedRules":"600"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"600"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"600"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"600"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"600"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867","usedDeprecatedRules":"600"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"600"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"873","usedDeprecatedRules":"600"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876","usedDeprecatedRules":"600"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"600"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":69,"fixableErrorCount":0,"fixableWarningCount":69,"source":"892","usedDeprecatedRules":"600"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"600"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"908","usedDeprecatedRules":"600"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"917","usedDeprecatedRules":"600"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"922","usedDeprecatedRules":"600"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"600"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954","usedDeprecatedRules":"600"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957","usedDeprecatedRules":"600"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"980","usedDeprecatedRules":"600"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983","usedDeprecatedRules":"600"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"600"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"989","usedDeprecatedRules":"600"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996","usedDeprecatedRules":"600"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"999","usedDeprecatedRules":"600"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002","usedDeprecatedRules":"600"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1007","usedDeprecatedRules":"600"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010","usedDeprecatedRules":"600"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1015","usedDeprecatedRules":"600"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1018","usedDeprecatedRules":"600"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1031","usedDeprecatedRules":"600"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1034","usedDeprecatedRules":"600"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1037","usedDeprecatedRules":"600"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1046","usedDeprecatedRules":"600"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1049","usedDeprecatedRules":"600"},{"filePath":"1050","messages":"1051","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1052","usedDeprecatedRules":"600"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1057","usedDeprecatedRules":"600"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1060","usedDeprecatedRules":"600"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1065","usedDeprecatedRules":"600"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1070","messages":"1071","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1072","messages":"1073","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1078","messages":"1079","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1080","usedDeprecatedRules":"600"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1091","usedDeprecatedRules":"600"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1096","messages":"1097","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108","usedDeprecatedRules":"600"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1115","usedDeprecatedRules":"600"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1118","usedDeprecatedRules":"600"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1129","usedDeprecatedRules":"600"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1134","usedDeprecatedRules":"600"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1137","usedDeprecatedRules":"600"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1144","usedDeprecatedRules":"600"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1165","usedDeprecatedRules":"600"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1168","usedDeprecatedRules":"600"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1175","usedDeprecatedRules":"600"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180","usedDeprecatedRules":"600"},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1185"},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1200","usedDeprecatedRules":"600"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1205","usedDeprecatedRules":"600"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1208","usedDeprecatedRules":"600"},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1215","usedDeprecatedRules":"600"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1224","usedDeprecatedRules":"600"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"600"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232","usedDeprecatedRules":"600"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1235","messages":"1236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1237","usedDeprecatedRules":"600"},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1240","usedDeprecatedRules":"600"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1243","usedDeprecatedRules":"600"},{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1246","usedDeprecatedRules":"600"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"600"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"600"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1269","messages":"1270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1271","usedDeprecatedRules":"600"},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1274","usedDeprecatedRules":"600"},{"filePath":"1275","messages":"1276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1279","usedDeprecatedRules":"600"},{"filePath":"1280","messages":"1281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1282","usedDeprecatedRules":"600"},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1287","messages":"1288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1295","usedDeprecatedRules":"600"},"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/index.tsx",[],["1296","1297","1298","1299","1300","1301","1302","1303","1304","1305"],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/apollo_client.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/serviceWorker.ts",["1306","1307","1308","1309","1310","1311","1312"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            // eslint-disable-next-line no-param-reassign\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL as string, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/internationalization/i18n.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/Root.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/models/AgreementTypeFilters.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/models/AgreementStatusFilter.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/models/AgreementKindergartenFilters.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/models/AgreementSortStatus.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/classNameGenerator.ts",["1313","1314"],"// Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's an improved version of\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n//\n// Copied from material-ui due to issue https://github.com/callemall/material-ui/issues/8223\n\n// This counter is moved outside from `createGenerateClassName` to solve the issue\nlet ruleCounter = 0;\n\nexport default function createGenerateClassName() {\n    return (rule: any, sheet: any) => {\n        ruleCounter += 1;\n\n        if (process.env.NODE_ENV === 'production') {\n            return `c${ruleCounter}`;\n        }\n\n        if (sheet && sheet.options.meta) {\n            return `${sheet.options.meta}-${rule.key}-${ruleCounter}`;\n        }\n\n        return `${rule.key}-${ruleCounter}`;\n    };\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/localizedMoment.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentWrapper.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AppWrapper.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AuthTemplate/AuthTemplate.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/theme/ThemeProvider.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/LoginPage/LoginPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildResultsPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentProfilePage/ParentProfilePage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/UsersPage/UsersPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/NewsletterPage.tsx",["1315"],"import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { Typography, makeStyles, createStyles, Theme, Stepper, Step, StepLabel, StepContent } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik, FormikErrors, FormikTouched } from 'formik';\nimport { NewsletterFormValues, SpecificRecipient } from './types';\nimport { NewsletterRecipent } from './NewsletterRecipient';\nimport { NewsletterContent } from './NewsletterContent';\nimport { ButtonSecondary } from '../../components/Button';\nimport { activePage } from '../../apollo_client';\n\nexport default function NewsletterPage() {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const formik = useFormik<NewsletterFormValues>({\n        initialValues: {\n            generalRecipientType: '',\n            specificRecipientType: '',\n            recipients: [],\n            type: '',\n            topic: '',\n            message: '',\n        },\n        initialErrors: {\n            generalRecipientType: t('newsletter.general-recipient-helper-text'),\n            specificRecipientType: t('newsletter.specific-recipient-helper-text'),\n            recipients: t('newsletter.recipient-helper-text'),\n            type: t('newsletter.type-helper-text'),\n            topic: t('newsletter.topic-helper-text'),\n        },\n        validate,\n        onSubmit: (values) => {\n            console.log(values);\n        },\n    });\n\n    const { generalRecipientType, specificRecipientType, recipients, type, topic, message } = formik.values;\n    const { errors, touched, handleSubmit, handleBlur, setFieldValue } = formik;\n\n    useEffect(() => {\n        activePage(['admin-menu.newsletter.title', 'admin-menu.newsletter.new-message']);\n    }, []);\n\n    const firstStepCompleted = isFirstStepCompleted(errors);\n\n    const secondStepCompleted = isSecondStepCompleted(errors);\n\n    const firstStepError = isFirstStepError(touched, errors);\n\n    const secondStepError = isSecondStepError(touched, errors);\n\n    return (\n        <div className={classes.container}>\n            <Typography variant=\"h3\" className={classes.description}>\n                {t('newsletter.subHeader')}\n            </Typography>\n            <form onSubmit={handleSubmit} noValidate>\n                <Stepper orientation=\"vertical\" className={classes.stepper} alternativeLabel>\n                    <Step expanded className={classes.step} completed={firstStepCompleted}>\n                        <StepLabel className={classes.stepLabel} error={firstStepError}>\n                            {firstStepCompleted ? t('newsletter.sidebar.done') : t('newsletter.sidebar.fill')}\n                        </StepLabel>\n                        <StepContent className={classes.stepContent}>\n                            <NewsletterRecipent\n                                generalRecipientType={generalRecipientType}\n                                specificRecipientType={specificRecipientType}\n                                recipients={recipients}\n                                onChange={(name, value) => setFieldValue(name, value)}\n                                onBlur={handleBlur}\n                                errors={errors}\n                                touched={touched}\n                            />\n                        </StepContent>\n                    </Step>\n                    <Step\n                        expanded\n                        className={clsx({\n                            [classes.step]: true,\n                            [classes.stepLong]: areSpecificRecipientsRequired(specificRecipientType),\n                        })}\n                        active={firstStepCompleted}\n                        completed={secondStepCompleted}\n                    >\n                        <StepLabel className={classes.stepLabel} error={secondStepError}>\n                            {t(setSecondStepLabel(firstStepCompleted, secondStepCompleted))}\n                        </StepLabel>\n                        <StepContent className={classes.stepContent}>\n                            <NewsletterContent\n                                onChange={(name, value) => setFieldValue(name, value)}\n                                onBlur={handleBlur}\n                                type={type}\n                                topic={topic}\n                                message={message}\n                                errors={errors}\n                                touched={touched}\n                            />\n                        </StepContent>\n                    </Step>\n                </Stepper>\n                <div className={classes.formButtonWrapper}>\n                    <ButtonSecondary\n                        variant=\"contained\"\n                        type=\"submit\"\n                        disabled={isSubmitButtonDisabled(errors)}\n                        className={classes.formButton}\n                        innerText={t('newsletter.send')}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst areSpecificRecipientsRequired = (value: SpecificRecipient | '') => value === 'KINDERGARTEN' || value === 'SINGLE';\n\nconst isSubmitButtonDisabled = (errors: FormikErrors<NewsletterFormValues>) => Object.keys(errors).length !== 0;\n\nconst isFirstStepCompleted = (errors: FormikErrors<NewsletterFormValues>) =>\n    !errors.generalRecipientType && !errors.specificRecipientType && !errors.recipients;\n\nconst isSecondStepCompleted = (errors: FormikErrors<NewsletterFormValues>) => !errors.type && !errors.topic;\n\nconst isFirstStepError = (touched: FormikTouched<NewsletterFormValues>, errors: FormikErrors<NewsletterFormValues>) =>\n    (!!touched.generalRecipientType && !!errors.generalRecipientType) ||\n    (!!touched.specificRecipientType && !!errors.specificRecipientType) ||\n    (!!touched.recipients && !!errors.recipients);\n\nconst isSecondStepError = (touched: FormikTouched<NewsletterFormValues>, errors: FormikErrors<NewsletterFormValues>) =>\n    (!!touched.type && !!errors.type) || (!!touched.topic && !!errors.topic);\n\nconst setSecondStepLabel = (firstStepCompleted: boolean, secondStepCompleted: boolean) => {\n    if (!firstStepCompleted) {\n        return 'newsletter.sidebar.newsletter-content';\n    }\n    if (secondStepCompleted) {\n        return 'newsletter.sidebar.done';\n    }\n\n    return 'newsletter.sidebar.fill';\n};\n\nconst validate = (values: NewsletterFormValues) => {\n    const errors: FormikErrors<NewsletterFormValues> = {};\n\n    const { generalRecipientType, specificRecipientType, recipients, type, topic } = values;\n\n    if (!generalRecipientType) {\n        errors.generalRecipientType = 'newsletter.general-recipient-helper-text';\n    }\n\n    if (!specificRecipientType) {\n        errors.specificRecipientType = 'newsletter.specific-recipient-helper-text';\n    }\n\n    if (areSpecificRecipientsRequired(specificRecipientType) && recipients.length === 0) {\n        errors.recipients = 'newsletter.recipient-helper-text';\n    }\n\n    if (!type) {\n        errors.type = 'newsletter.type-helper-text';\n    }\n\n    if (!topic) {\n        errors.topic = 'newsletter.topic-helper-text';\n    }\n\n    // TODO:\n    // validate message field\n    return errors;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            padding: theme.spacing(3),\n            [theme.breakpoints.down('sm')]: {\n                padding: theme.spacing(0, 1),\n            },\n        },\n        description: {\n            margin: theme.spacing(3, 0, 1),\n        },\n        formContainer: {\n            display: 'flex',\n            width: '100%',\n        },\n        formButtonWrapper: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n        },\n        formButton: {\n            padding: theme.spacing(1, 3),\n            marginTop: theme.spacing(3),\n        },\n        stepper: {\n            background: 0,\n            padding: 0,\n        },\n        stepLabel: {\n            width: '94px',\n            flexShrink: 0,\n        },\n        stepContent: {\n            borderLeft: 0,\n            padding: 0,\n            width: '100%',\n            marginTop: 0,\n        },\n        step: {\n            display: 'flex',\n            width: '100%',\n            marginTop: theme.spacing(3),\n\n            '& .MuiStepConnector-alternativeLabel': {\n                top: '-177px',\n                left: '46.5px',\n                height: '200px',\n                width: '1px',\n                padding: 0,\n                margin: 0,\n\n                '& .MuiStepConnector-lineVertical': {\n                    height: '167px',\n                },\n            },\n        },\n\n        stepLong: {\n            '& .MuiStepConnector-alternativeLabel': {\n                top: '-249px',\n                '& .MuiStepConnector-lineVertical': {\n                    height: '239px',\n                },\n            },\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ArticlePage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminHomePage/AdminHomePage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentAgreementsPage/ParentAgreementsPage.tsx",["1316"],"import React, { useEffect } from 'react';\nimport { activePage } from '../../apollo_client';\nimport { Agreements } from './Agreements';\nimport { useMe } from '../../utils/useMe';\n\nexport default function ParentAgreementsPage() {\n    const user = useMe();\n\n    useEffect(() => {\n        activePage(['parent-menu.agreements']);\n    }, []);\n\n    if (!user) return null;\n\n    const sortedAgreements = [...user.agreements].sort((a, b) => {\n        return a.text === 'Marketing' ? -1 : 1;\n    });\n\n    return <Agreements agreements={sortedAgreements} />;\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ParentSettingsPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/CreateArticlePage/CreateArticlePage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/AdminCodesPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArchivePage/ArchivePage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/AdminInstructorsPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AdminAgreementsPageConatianer.tsx",["1317"],"import React, { useEffect } from 'react';\nimport { useLazyQuery, useQuery } from '@apollo/client';\n\nimport { Kindergarten, KindergartenWithUsers } from '../../graphql/types';\nimport { KINDERGARTEN_WITH_USERS } from '../../graphql/kindergartensRepository';\nimport { AdminAgreementsPage } from './AdminAgreementsPage';\nimport { AgreementsTypeFilterMutations } from '../../operations/mutations/agreementsTypeFilterMutations';\nimport { AgreementKindergartenFilters } from '../../models/AgreementKindergartenFilters';\nimport {\n    GetAgreementsStatusFilterQuery,\n    GET_AGREEMENTS_STATUS_FILTER,\n} from '../../operations/queries/Agreements/getAgreementsStatusFilter';\nimport {\n    GetAgreementsTypeFilterQuery,\n    GET_AGREEMENTS_TYPE_FILTER,\n} from '../../operations/queries/Agreements/getAgreementsTypeFilter';\nimport {\n    GetAgreementsKindergartenFilterQuery,\n    GET_AGREEMENTS_KINDERGARTEN_FILTER,\n} from '../../operations/queries/Agreements/getAgreementsKindergartenFilter';\nimport { GET_AGREEMENTS_SORT_STATUS } from '../../operations/queries/Agreements/getAgreementsSortStatus';\nimport { AgreementTypeFilters } from '../../models/AgreementTypeFilters';\nimport { AgreementStatusFilters } from '../../models/AgreementStatusFilter';\nimport { agreementSortStatusVar } from '../../apollo_client';\nimport { AgreementSortStatus } from '../../models/AgreementSortStatus';\nimport { useKindergartens } from '../../operations/queries/Kindergartens/getKindergartens';\n\nexport default function AdminAgreementsPageContainer() {\n    const { kindergartenList, isKindergartenListLoading } = useKindergartens();\n\n    const [getSpecificKindergartens, { data: kindergartens, loading: isKindergartenLoading }] = useLazyQuery<{\n        kindergartenWithUsers: KindergartenWithUsers[];\n    }>(KINDERGARTEN_WITH_USERS);\n\n    const agreementsStatusFilterQuery = useQuery<GetAgreementsStatusFilterQuery>(GET_AGREEMENTS_STATUS_FILTER);\n    const { agreementsStatusFilter } = agreementsStatusFilterQuery.data!;\n\n    const agreementsTypeFilterQuery = useQuery<GetAgreementsTypeFilterQuery>(GET_AGREEMENTS_TYPE_FILTER);\n    const { agreementsTypeFilter } = agreementsTypeFilterQuery.data!;\n\n    const agreementsKindergartenFilterQuery = useQuery<GetAgreementsKindergartenFilterQuery>(\n        GET_AGREEMENTS_KINDERGARTEN_FILTER,\n    );\n\n    const agreementsKindergartenFilter = agreementsKindergartenFilterQuery.data?.agreementsKindergartenFilter!;\n\n    const sortStatusQuery = useQuery(GET_AGREEMENTS_SORT_STATUS);\n    const { agreementsSortStatus } = sortStatusQuery.data;\n\n    useEffect(() => {\n        if (kindergartenList) {\n            AgreementsTypeFilterMutations.addAgreementsKindergartenFilters([\n                AgreementKindergartenFilters.SHOW_ALL,\n                ...kindergartenList.map(mapToFilter),\n            ]);\n\n            getSpecificKindergartens({ variables: { ids: kindergartenList.map((k) => k._id) } });\n        }\n    }, [kindergartenList, getSpecificKindergartens]);\n\n    if (isKindergartenListLoading) return <div>Loading...</div>;\n\n    if (!kindergartenList) return null;\n\n    return (\n        <AdminAgreementsPage\n            kindergartens={mapWithFilters([...(kindergartens?.kindergartenWithUsers || [])])}\n            agreementsStatusFilter={agreementsStatusFilter}\n            agreementsTypeFilter={agreementsTypeFilter}\n            agreementsKindergartenFilter={agreementsKindergartenFilter}\n            agreementsSortStatus={agreementsSortStatus}\n            isKindergartenLoading={isKindergartenLoading}\n            actions={{\n                setSortStatus,\n                setAgreementFilter,\n                sendFilterChanges,\n            }}\n        />\n    );\n}\n\nfunction mapToFilter({ _id, name }: Kindergarten) {\n    return { id: _id, displayName: name, displayNameKey: '', selected: false };\n}\n\nfunction setSortStatus(value: string) {\n    AgreementsTypeFilterMutations.setAgreementsSortStatus({ id: value });\n}\n\nfunction setAgreementFilter(type: string, value: string | string[]) {\n    if (Array.isArray(value)) {\n        if (type === 'KINDERGARTEN') {\n            AgreementsTypeFilterMutations.setAgreementsKindergartenFilter(value);\n        }\n    } else {\n        if (type === 'TYPE') {\n            AgreementsTypeFilterMutations.setAgreementsTypeFilter(AgreementTypeFilters[value]);\n        }\n\n        if (type === 'STATUS') {\n            AgreementsTypeFilterMutations.setAgreementsStatusFilter(AgreementStatusFilters[value]);\n        }\n    }\n}\n\nfunction sendFilterChanges() {\n    console.log('sent');\n}\n\nfunction mapWithFilters(kindergartens: KindergartenWithUsers[]) {\n    return mapWithSorting(kindergartens);\n}\n\nfunction mapWithSorting(kindergartens: KindergartenWithUsers[]) {\n    const { id: sortBy } = agreementSortStatusVar();\n\n    if (sortBy === AgreementSortStatus.BY_NAME_RISING.id) {\n        return kindergartens.sort((kA, kB) => {\n            return kA.number - kB.number;\n        });\n    }\n\n    if (sortBy === AgreementSortStatus.BY_NAME_FALLING.id) {\n        return kindergartens.sort((kA, kB) => {\n            return kB.number - kA.number;\n        });\n    }\n\n    return kindergartens;\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/InstructorAddResultsPage.tsx",["1318","1319"],"import React, { useEffect, useState } from 'react';\nimport { BarChart } from '@material-ui/icons';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\n\nimport { activePage } from '../../apollo_client';\nimport { useAssessments } from '../../operations/queries/Assessment/getAllAssessments';\nimport { CustomContainer } from '../../components/CustomContainer';\nimport { ChildListHeader } from './ChildListHeader';\nimport { ChildListContainer } from './ChildListContainer';\nimport { PageContainer } from '../../components/PageContainer';\nimport { openAddNoteDialog } from './AddNoteDialog';\nimport { NoAssessmentView } from './NoAssessmentsView';\nimport { SecondaryFab } from '../../components/SecondaryFab';\nimport { useIsDevice } from '../../queries/useBreakpoints';\nimport { ChildListCompactContainer } from './ChildListCompactContainer';\nimport { AssessmentSubheader } from './AssessmentSubheader';\nimport { parseDateToAge } from '../../utils/parseDateToAge';\nimport { useCreateAssessmentResult } from '../../operations/mutations/Results/createAssessmentResult';\nimport { useAssessmentResults } from '../../operations/queries/Results/getAssessmentResults';\n\nexport default function InstructorAddResultsPage() {\n    const { assessments, areAssessmentsLoading } = useAssessments({ withChildren: true });\n    const [selectedAssessment, setSelectedAssessment] = useState('');\n    const [selectedKindergarten, setSelectedKindergarten] = useState('');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [fullNameSortType, setFullNameSortType] = useState('asc');\n    const [ageSortType, setAgeSortType] = useState('');\n    const { t } = useTranslation();\n    const history = useHistory();\n    const device = useIsDevice();\n    const { createAssessmentResult } = useCreateAssessmentResult();\n    const { kindergartenResults } = useAssessmentResults(selectedKindergarten, selectedAssessment);\n\n    const currentAssessment = assessments.find((a) => a._id === selectedAssessment);\n\n    const currentChildren =\n        currentAssessment?.kindergartens.find((k) => k.kindergarten._id === selectedKindergarten)?.kindergarten\n            .children || [];\n\n    useEffect(() => {\n        activePage(['instructor-menu.add-results']);\n    }, []);\n\n    useEffect(() => {\n        const [assessment] = assessments;\n\n        if (assessment) {\n            setSelectedAssessment(assessment._id);\n\n            setSelectedKindergarten(assessment.kindergartens[0]?.kindergarten._id);\n        }\n    }, [assessments]);\n\n    if (areAssessmentsLoading) return null;\n\n    if (assessments.length === 0 || !currentAssessment) {\n        return (\n            <PageContainer>\n                <NoAssessmentView onClick={() => history.push('/parent/blog/all')} />\n            </PageContainer>\n        );\n    }\n\n    return (\n        <PageContainer>\n            {!device.isSmallMobile ? (\n                <>\n                    <CustomContainer\n                        header={\n                            <ChildListHeader\n                                assessments={assessments}\n                                selectedAssessment={selectedAssessment}\n                                selectedKindergarten={selectedKindergarten}\n                                searchTerm={searchTerm}\n                                onChange={handleFilterChanged}\n                            />\n                        }\n                        subheader={<AssessmentSubheader assessment={currentAssessment} />}\n                        container={\n                            <ChildListContainer\n                                assessment={currentAssessment}\n                                results={kindergartenResults}\n                                childList={getFiltredAndSortedChildList()}\n                                onClick={handleClick}\n                                fullNameSortType={fullNameSortType}\n                                ageSortType={ageSortType}\n                            />\n                        }\n                    />\n                    {currentChildren[0] && (\n                        <SecondaryFab\n                            text={t('add-results-page.add-result')}\n                            icon={<BarChart />}\n                            onClick={onFabClick}\n                        />\n                    )}\n                </>\n            ) : (\n                <>\n                    <CustomContainer\n                        header={\n                            <ChildListHeader\n                                assessments={assessments}\n                                selectedAssessment={selectedAssessment}\n                                selectedKindergarten={selectedKindergarten}\n                                searchTerm={searchTerm}\n                                onChange={handleFilterChanged}\n                                compact\n                            />\n                        }\n                        container={\n                            <ChildListCompactContainer\n                                assessment={currentAssessment}\n                                childList={getFiltredAndSortedChildList()}\n                                onClick={handleClick}\n                            />\n                        }\n                    />\n                    {currentChildren[0] && (\n                        <SecondaryFab\n                            text={t('add-results-page.add-result')}\n                            icon={<BarChart />}\n                            onClick={onFabClick}\n                        />\n                    )}\n                </>\n            )}\n        </PageContainer>\n    );\n\n    function handleFilterChanged(type: string, value: string) {\n        if (type === 'assessment') {\n            setSelectedAssessment(value);\n\n            return;\n        }\n\n        if (type === 'searchTerm') {\n            setSearchTerm(value);\n\n            return;\n        }\n\n        setSelectedKindergarten(value);\n    }\n\n    function handleClick(type: string, value: string) {\n        if (type === 'add-first-assessment-result') {\n            history.push(`/instructor/result/add/first/${selectedAssessment}/${selectedKindergarten}/${value}`);\n        }\n\n        if (type === 'add-last-assessment-result') {\n            history.push(`/instructor/result/add/last/${selectedAssessment}/${selectedKindergarten}/${value}`);\n        }\n\n        if (type === 'add-first-assessment-note') {\n            openAddNoteDialog({\n                title: t('add-results-page.note-first-measurement'),\n                note: getFirstMeasurementNote(value),\n            }).then((decision) => {\n                if (decision.close) return;\n\n                createAssessmentResult({\n                    childId: value,\n                    kindergartenId: selectedKindergarten,\n                    assessmentId: selectedAssessment,\n                    firstMeasurementNote: (decision?.decision as any).note,\n                });\n            });\n        }\n\n        if (type === 'add-last-assessment-note') {\n            openAddNoteDialog({\n                title: t('add-results-page.note-last-measurement'),\n                note: getLastMeasurementNote(value),\n            }).then((decision) => {\n                if (decision.close) return;\n\n                createAssessmentResult({\n                    childId: value,\n                    kindergartenId: selectedKindergarten,\n                    assessmentId: selectedAssessment,\n                    lastMeasurementNote: (decision?.decision as any).note,\n                });\n            });\n        }\n\n        if (type === 'full-name') {\n            setFullNameSortType((prev) => (prev === 'asc' ? 'dsc' : 'asc'));\n            setAgeSortType('');\n        }\n\n        if (type === 'age') {\n            setAgeSortType((prev) => (prev === 'asc' ? 'dsc' : 'asc'));\n            setFullNameSortType('');\n        }\n    }\n\n    function onFabClick() {\n        history.push(\n            `/instructor/result/add/first/${selectedAssessment}/${selectedKindergarten}/${currentChildren[0]._id}`,\n        );\n    }\n\n    function getFiltredAndSortedChildList() {\n        const filtredChildList = currentChildren.filter((c) =>\n            c.firstname.toLowerCase().includes(searchTerm.toLowerCase()),\n        );\n\n        if (fullNameSortType !== '') {\n            filtredChildList.sort((a, b) => {\n                const fullNameA = `${a.firstname} ${a.lastname}`;\n                const fullNameB = `${b.firstname} ${b.lastname}`;\n\n                if (fullNameSortType === 'asc') {\n                    return fullNameA > fullNameB ? 1 : -1;\n                }\n\n                return fullNameA > fullNameB ? -1 : 1;\n            });\n        }\n\n        if (ageSortType !== '') {\n            filtredChildList.sort((a, b) => {\n                const childAgeA = parseDateToAge(a.birthYear, a.birthQuarter);\n                const childAgeB = parseDateToAge(b.birthYear, b.birthQuarter);\n\n                if (ageSortType === 'asc') {\n                    return childAgeA - childAgeB;\n                }\n\n                return childAgeB - childAgeA;\n            });\n        }\n\n        return filtredChildList;\n    }\n\n    function getFirstMeasurementNote(childId: string) {\n        return kindergartenResults.find((r) => r.childId === childId)?.firstMeasurementNote || '';\n    }\n\n    function getLastMeasurementNote(childId: string) {\n        return kindergartenResults.find((r) => r.childId === childId)?.lastMeasurementNote || '';\n    }\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAssessmentManagementPage/AdminAssessmentHistoryPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticleListPage/ArticleListPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NotificationsPage/NotificationsPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/ParentHomePage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/AdminManageSingleAssessmentPage.tsx",["1320"],"import React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { activePage } from '../../apollo_client';\nimport { BasicInformationForm } from './BasicInformationForm/BasicInformationForm';\nimport { KindergartenPicker } from './KindergartenPicker';\nimport { TestInformation } from './TestInformation';\nimport { useAssessmentManager, SuccessState, ErrorState } from './useAssessmentManager';\nimport { openSnackbar } from '../../components/Snackbar/openSnackbar';\nimport { ButtonSecondary } from '../../components/Button';\nimport { ActionButton } from './ActionButton';\nimport { EditableBasicInformationForm } from './EditableBasicInformationForm';\nimport { KindergartenList } from './KindergartenList';\nimport { openQuestionDialog } from '../../components/QuestionDialog';\nimport { PageContainer } from '../../components/PageContainer';\n\nexport default function AdminManageSingleAssessmentPage() {\n    const { t } = useTranslation();\n    const history = useHistory();\n    const params = useParams<{ id?: string }>();\n\n    const assessmentId = params.id;\n\n    const isEditOnly = isState('edit');\n    const isViewOnly = isState('details');\n\n    const {\n        submit,\n        kindergartens,\n        reasonForBeingDisabled,\n        assessemnt,\n        updateAssessment,\n        isLoading,\n    } = useAssessmentManager(assessmentId, onAssessmentSubmited);\n\n    function onAssessmentSubmited(result: SuccessState | ErrorState) {\n        if ('errors' in result) {\n            openSnackbar({ text: t(result.errors), severity: 'error' });\n        } else {\n            openSnackbar({ text: result.message! }).then((dialogResult) => {\n                if (dialogResult.close) {\n                    redirectIntoTestPage();\n                }\n            });\n        }\n    }\n\n    function redirectIntoTestPage() {\n        history.push('/admin/test-management');\n    }\n\n    function onPickerClick(value: string[], options: { selectedAll?: boolean } = {}) {\n        const kindergartensCopy = [...assessemnt.kindergartenIds];\n\n        if (options.selectedAll) {\n            updateAssessment({ kindergartenIds: value });\n\n            return;\n        }\n\n        if (assessemnt.kindergartenIds.includes(value[0])) {\n            updateAssessment({ kindergartenIds: kindergartensCopy.filter((id) => id !== value[0]) });\n\n            return;\n        }\n\n        updateAssessment({ kindergartenIds: [...kindergartensCopy, ...value] });\n    }\n\n    function isState(name: string) {\n        return history.location.pathname.includes(`/${name}`);\n    }\n\n    useEffect(() => {\n        activePage(['admin-menu.test-management']);\n    }, []);\n\n    return (\n        <PageContainer>\n            <Grid container alignItems=\"flex-end\" spacing={6}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={7}>\n                            <Grid container direction=\"column\" spacing={2}>\n                                <Grid item sm={12}>\n                                    {isViewOnly ? (\n                                        <BasicInformationForm\n                                            assessment={assessemnt}\n                                            onClick={() => console.log('click')}\n                                        />\n                                    ) : (\n                                        <EditableBasicInformationForm\n                                            isDisabled={isViewOnly}\n                                            assessment={assessemnt}\n                                            onChange={updateAssessment}\n                                        />\n                                    )}\n                                </Grid>\n                                <Grid item sm={12}>\n                                    <TestInformation />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={5}>\n                            {isViewOnly ? (\n                                <KindergartenList kindergartens={kindergartens} />\n                            ) : (\n                                <KindergartenPicker\n                                    isDisabled={isViewOnly}\n                                    kindergartens={kindergartens}\n                                    onSelect={onPickerClick}\n                                />\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container justify=\"space-between\">\n                        <Grid item xs={6}>\n                            {isEditOnly && (\n                                <ButtonSecondary\n                                    variant=\"text\"\n                                    onClick={() => {\n                                        openQuestionDialog({\n                                            title: t('add-test-view.delete-test-dialog.title'),\n                                            description: t('add-test-view.delete-test-dialog.description'),\n                                        }).then(({ decision }) => {\n                                            if (decision?.accepted) {\n                                                submit({ isDeleted: true });\n                                            }\n                                        });\n                                    }}\n                                >\n                                    {t('add-test-view.delete')}\n                                </ButtonSecondary>\n                            )}\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Grid container justify=\"flex-end\" spacing={2}>\n                                <Grid item>\n                                    <ButtonSecondary variant=\"text\" onClick={redirectIntoTestPage}>\n                                        {t('add-test-view.cancel')}\n                                    </ButtonSecondary>\n                                </Grid>\n                                {!isViewOnly && (\n                                    <Grid item>\n                                        <ActionButton\n                                            name={\n                                                isEditOnly\n                                                    ? t('add-test-view.update-test')\n                                                    : t('add-test-view.create-test')\n                                            }\n                                            onClick={() => submit()}\n                                            reasonForBeingDisabled={reasonForBeingDisabled || (isLoading && 'loading')}\n                                        />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </PageContainer>\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorSettingsPage/InstructorSettingsPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminRecommendationsPage/AdminRecommendationsPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/InstructorResultCreatorPage.tsx",["1321","1322"],"import React, { useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { activePage } from '../../apollo_client';\nimport { PageContainer } from '../../components/PageContainer';\nimport {\n    ResultCreatorErrorReturnProps,\n    ResultCreatorReturnProps,\n    useResultCreator,\n    AssessmentValues,\n} from './useResultCreator';\nimport { ResultCreator } from './ResultCreator';\nimport { useIsDevice } from '../../queries/useBreakpoints';\nimport { MobileResultCreator } from './MobileResultCreator';\nimport {\n    CreatedAssessmentInput,\n    useCreateAssessmentResult,\n} from '../../operations/mutations/Results/createAssessmentResult';\n\ninterface PageParams {\n    assessmentId: string;\n    kindergartenId: string;\n    childId: string;\n    measurement: string;\n}\n\nexport default function InstructorResultCreatorPage() {\n    const { assessmentId, kindergartenId, childId, measurement } = useParams<PageParams>();\n    const { createAssessmentResult } = useCreateAssessmentResult();\n\n    const history = useHistory();\n    const device = useIsDevice();\n\n    useEffect(() => {\n        activePage(['instructor-menu.add-results']);\n    }, []);\n\n    const resultCreator = useResultCreator({\n        assessmentId,\n        kindergartenId,\n        childId,\n        measurement,\n    });\n\n    if (isResultCreatorErrorReturnProps(resultCreator)) {\n        return null;\n    }\n\n    return (\n        <>\n            <PageContainer>\n                {device.isSmallMobile ? (\n                    <MobileResultCreator value={resultCreator} measurement={measurement} onClick={handleClick} />\n                ) : (\n                    <ResultCreator value={resultCreator} measurement={measurement} onClick={handleClick} />\n                )}\n            </PageContainer>\n        </>\n    );\n\n    function handleClick(type: string, value: string) {\n        if (isResultCreatorErrorReturnProps(resultCreator)) {\n            return;\n        }\n\n        if (type === 'child') {\n            history.push(\n                `/instructor/result/add/${measurement}/${resultCreator.selectedAssessment._id}/${resultCreator.selectedKindergarten._id}/${value}`,\n            );\n        }\n\n        if (type === 'measurement') {\n            history.push(`/instructor/result/add/${value}/${assessmentId}/${kindergartenId}/${childId}`);\n        }\n\n        if (type === 'kindergarten') {\n            const currentSelectedKindergarten = resultCreator.selectedAssessment?.kindergartens.find(\n                (k) => k.kindergarten._id === value,\n            )?.kindergarten;\n            const firstChildren = currentSelectedKindergarten?.children![0];\n\n            if (firstChildren) {\n                history.push(\n                    `/instructor/result/add/${measurement}/${resultCreator.selectedAssessment._id}/${value}/${firstChildren._id}`,\n                );\n            }\n        }\n\n        if (type === 'back-to-table') {\n            history.push('/instructor');\n        }\n\n        if (type === 'save-and-next') {\n            const currentChildIndex =\n                resultCreator.selectedKindergarten.children?.findIndex(\n                    (c) => c._id === resultCreator.selectedChild._id,\n                ) || 0;\n\n            const foundNextChild = resultCreator.selectedKindergarten.children![currentChildIndex + 1];\n\n            createAssessmentResult({ childId, assessmentId, kindergartenId, ...mapValuesToResult(resultCreator) });\n\n            if (foundNextChild) {\n                history.push(\n                    `/instructor/result/add/${measurement}/${resultCreator.selectedAssessment._id}/${resultCreator.selectedKindergarten._id}/${foundNextChild._id}`,\n                );\n            }\n        }\n    }\n\n    function mapValuesToResult(results: ResultCreatorReturnProps): Partial<CreatedAssessmentInput> {\n        const result: Partial<CreatedAssessmentInput> = {};\n\n        (result as any)[\n            `${measurement}Measurement${results.edited[0].toUpperCase()}${results.edited.substr(1)}Result`\n        ] = results.values[results.edited as keyof Partial<AssessmentValues>];\n\n        (result as any)[\n            `${measurement}Measurement${results.edited[0].toUpperCase()}${results.edited.substr(1)}Date`\n        ] = new Date();\n\n        return result;\n    }\n}\n\nfunction isResultCreatorErrorReturnProps(\n    value: ResultCreatorReturnProps | ResultCreatorErrorReturnProps,\n): value is ResultCreatorErrorReturnProps {\n    return !!value.error;\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ForgotPasswordPage/ForgotPasswordPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/TestResultsPage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/colors.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/theme/theme.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileCategory.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/queries/useBreakpoints.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/localFields.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ForgotPasswordPage/isValidEmail.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/useResultCreator.ts",["1323","1324","1325"],"import { useEffect, useState } from 'react';\nimport { useAssessments } from '../../operations/queries/Assessment/getAllAssessments';\nimport { Assessment, Kindergarten, Child, AssessmentResult } from '../../graphql/types';\nimport { useAssessmentResults } from '../../operations/queries/Results/getAssessmentResults';\n\ninterface Props {\n    assessmentId: string;\n    kindergartenId: string;\n    childId: string;\n    measurement: string;\n}\n\nexport interface AssessmentValues {\n    run: number;\n    pendelumRun: number;\n    jump: number;\n    throw: number;\n}\n\nexport interface ResultCreatorReturnProps {\n    assessments: Assessment[];\n    values: AssessmentValues;\n    points: AssessmentValues;\n    selectedAssessment: Assessment;\n    selectedKindergarten: Kindergarten;\n    selectedChild: Child;\n    onChange: (value: AssessmentValues) => void;\n    error: null;\n    edited: string;\n    kindergartenResults: AssessmentResult[];\n    edit: (name: string) => void;\n}\n\nexport interface ResultCreatorErrorReturnProps {\n    error: string;\n    selectedAssessment?: Assessment;\n    selectedKindergarten?: Kindergarten;\n    selectedChild?: Child;\n}\n\nexport function useResultCreator({\n    assessmentId,\n    kindergartenId,\n    childId,\n    measurement,\n}: Props): ResultCreatorReturnProps | ResultCreatorErrorReturnProps {\n    const { assessments } = useAssessments({ withChildren: true });\n    const { kindergartenResults } = useAssessmentResults(kindergartenId, assessmentId);\n    const [values, setValues] = useState({\n        run: 0,\n        pendelumRun: 0,\n        throw: 0,\n        jump: 0,\n    });\n    const [edited, setEdited] = useState(() => localStorage.getItem('edited') || '');\n\n    useEffect(() => {\n        setValues(getResultValue());\n\n        function getResultValue() {\n            const childResult = kindergartenResults.find((r) => r.childId === childId);\n\n            if (!childResult) {\n                return {\n                    run: 0,\n                    pendelumRun: 0,\n                    throw: 0,\n                    jump: 0,\n                };\n            }\n\n            if (measurement === 'first') {\n                return {\n                    run: childResult.firstMeasurementRunResult || 0,\n                    pendelumRun: childResult.firstMeasurementPendelumRunResult || 0,\n                    throw: childResult.firstMeasurementThrowResult || 0,\n                    jump: childResult.firstMeasurementJumpResult || 0,\n                };\n            }\n\n            return {\n                run: childResult.lastMeasurementRunResult || 0,\n                pendelumRun: childResult.lastMeasurementPendelumRunResult || 0,\n                throw: childResult.lastMeasurementThrowResult || 0,\n                jump: childResult.lastMeasurementJumpResult || 0,\n            };\n        }\n    }, [assessmentId, kindergartenId, childId, measurement, kindergartenResults, setValues]);\n\n    const { selectedAssessment, selectedKindergarten, selectedChild } = getSelected({\n        assessments,\n        assessmentId,\n        kindergartenId,\n        childId,\n    });\n\n    if (!selectedAssessment || !selectedKindergarten || !selectedChild) {\n        return {\n            error: 'Could not find child',\n            selectedAssessment,\n            selectedKindergarten,\n            selectedChild,\n        };\n    }\n\n    const { run, pendelumRun, jump, throw: throwBall } = selectedChild.currentParams!;\n\n    let points = {\n        run: 0,\n        pendelumRun: 0,\n        throw: 0,\n        jump: 0,\n    };\n\n    if (run && pendelumRun && jump && throwBall) {\n        points = {\n            run: countPoints(values.run, run.a, run.b, run.lowerLimitPoints, run.upperLimitPoints),\n            pendelumRun: countPoints(\n                values.pendelumRun,\n                pendelumRun.a,\n                pendelumRun.b,\n                pendelumRun.lowerLimitPoints,\n                pendelumRun.upperLimitPoints,\n            ),\n            throw: countInvertedPoints(\n                values.throw,\n                throwBall.a,\n                throwBall.b,\n                throwBall.lowerLimitPoints,\n                throwBall.upperLimitPoints,\n            ),\n            jump: countInvertedPoints(values.jump, jump.a, jump.b, jump.lowerLimitPoints, jump.upperLimitPoints),\n        };\n    }\n\n    return {\n        assessments,\n        values,\n        points,\n        selectedAssessment,\n        selectedKindergarten,\n        selectedChild,\n        onChange: (value: any) => setValues(value),\n        error: null,\n        edited,\n        kindergartenResults,\n        edit: (name: string) => {\n            setEdited(name);\n            localStorage.setItem('edited', name);\n        },\n    };\n}\n\nfunction getSelected({\n    assessments,\n    assessmentId,\n    kindergartenId,\n    childId,\n}: {\n    assessments: Assessment[];\n    assessmentId: string;\n    kindergartenId: string;\n    childId: string;\n}) {\n    const selectedAssessment = assessments.find((a) => a._id === assessmentId);\n    const selectedKindergarten = selectedAssessment?.kindergartens.find((k) => k.kindergarten._id === kindergartenId)\n        ?.kindergarten;\n    const selectedChild = selectedKindergarten?.children?.find((c) => c._id === childId);\n\n    return {\n        selectedAssessment,\n        selectedKindergarten,\n        selectedChild,\n    };\n}\n\nfunction countPoints(value: number, a: number, b: number, min: number, max: number) {\n    if (value === 0) return 0;\n\n    const points = a * value + b;\n\n    if (points < max) return max;\n\n    if (points > min) return min;\n\n    return points;\n}\n\nfunction countInvertedPoints(value: number, a: number, b: number, min: number, max: number) {\n    if (value === 0) return 0;\n\n    const points = a * value + b;\n\n    if (points > max) return max;\n\n    if (points < min) return min;\n\n    return points;\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/useMe.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Kindergartens/deleteKindergarten.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Kindergartens/updateKindergarten.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Kindergartens/createKindergarten.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/ResultsActions.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/NoResults.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ForgotPasswordPage/ResetPasswordConfirmation.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ForgotPasswordPage/ResetPasswordForm.tsx",["1326"],"import React from 'react';\nimport { TextField, Typography, makeStyles, createStyles } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { Theme } from '../../theme/types';\nimport { backgroundColor, secondaryColor, white } from '../../colors';\nimport { ButtonSecondary } from '../../components/Button';\n\nconst tPrefix = 'forgot-password-page';\n\ntype Props = {\n    onChange: (value: string) => void;\n    onSubmit: () => void;\n    isDisabled: boolean;\n    email: string;\n};\n\nexport function ResetPasswordForm({ onChange, onSubmit, isDisabled, email }: Props) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography className={classes.subtitle}>{t(`${tPrefix}.its-ok`)}</Typography>\n            <Typography className={`${classes.subtitle} ${classes.subtitleThin}`}>\n                {t(`${tPrefix}.receive-link`)}\n            </Typography>\n            <TextField\n                required\n                value={email}\n                id=\"email\"\n                label={t('e-mail')}\n                variant=\"outlined\"\n                helperText={t(`${tPrefix}.email-helper-text`)}\n                onChange={({ target: { value } }) => onChange(value)}\n            />\n            <div className={classes.buttonWrapper}>\n                <ButtonSecondary\n                    variant=\"contained\"\n                    disabled={isDisabled}\n                    className={classes.createPasswordButton}\n                    onClick={onSubmit}\n                    innerText={t('forgot-password-page.new-password')}\n                />\n            </div>\n            <div className={classes.underlinedText}>\n                <Typography variant=\"caption\">{t(`${tPrefix}.problem`)}</Typography>\n                <Typography variant=\"caption\">{t(`${tPrefix}.contact`)}</Typography>\n            </div>\n        </>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        loginLinkWrapper: {\n            marginBottom: '20px',\n            marginTop: '40px',\n            fontStyle: 'normal',\n            fontWeight: 'bold',\n            color: white,\n            textDecoration: 'none',\n        },\n        subtitle: {\n            textAlign: 'center',\n        },\n        buttonWrapper: {\n            display: 'flex',\n            width: '100%',\n            justifyContent: 'flex-end',\n        },\n        button: {\n            color: backgroundColor,\n            fontWeight: 'bold',\n            marginBottom: '20px',\n            marginTop: '20px',\n\n            [theme.breakpoints.down('sm')]: {\n                marginBottom: '44px',\n                marginTop: '30px',\n            },\n\n            '&disbled': {\n                color: secondaryColor,\n            },\n        },\n        subtitleThin: {\n            marginBottom: '20px',\n            width: '320px',\n        },\n        underlinedText: {\n            textAlign: 'center',\n            position: 'relative',\n            marginBottom: '20px',\n            display: 'flex',\n            flexDirection: 'column',\n\n            '&::after': {\n                position: 'absolute',\n                content: '\"\"',\n                height: '1px',\n                margin: '0 auto',\n                left: '0',\n                bottom: '-2px',\n                right: '0',\n                width: '100%',\n                background: 'black',\n            },\n        },\n        createPasswordButton: {\n            marginBottom: '20px',\n            marginTop: '20px',\n\n            [theme.breakpoints.down('sm')]: {\n                marginBottom: '44px',\n                marginTop: '30px',\n            },\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/MobileResultCreator.tsx",["1327","1328","1329"],"import React from 'react';\nimport { createStyles, Divider, Grid, Paper, makeStyles, MenuItem, Box } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { ResultCreatorReturnProps } from './useResultCreator';\nimport { ChildPickerDrawer } from './ChildPicker/ChildPickerDrawer';\nimport { ChildHeader } from './MeasurementEditor/ChildHeader';\nimport { MeasurementEditor } from './MeasurementEditor/MeasurementEditor';\nimport { ButtonSecondary } from '../../components/Button';\nimport { ActionMenuButtonSecondary } from '../../components/Button/ActionMenuButtonSecondary';\n\ninterface Props {\n    value: ResultCreatorReturnProps;\n    measurement: string;\n    onClick: (type: string, value: string) => void;\n}\n\nexport function MobileResultCreator({ value: resultCreator, measurement, onClick }: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const points = Object.values(resultCreator.points).reduce((acc, v) => acc + v, 0);\n\n    return (\n        <Paper>\n            <Grid container className={classes.container} direction=\"column\">\n                <Grid item>\n                    <ChildPickerDrawer\n                        selectedKindergarten={resultCreator.selectedKindergarten._id || ''}\n                        kindergartens={resultCreator.selectedAssessment.kindergartens.map((k) => k.kindergarten) || []}\n                        selected={resultCreator.selectedChild._id}\n                        measurement={measurement}\n                        childList={resultCreator.selectedKindergarten.children || []}\n                        onClick={onClick}\n                    />\n                </Grid>\n                <Grid item>\n                    <ChildHeader\n                        description={t(`add-result-page.title-${measurement}-measurement`)}\n                        selectedChild={resultCreator.selectedChild}\n                        points={points}\n                        maxPoints={countMaxPoints()}\n                    />\n                </Grid>\n                <Grid item>\n                    <Divider />\n                </Grid>\n                <Grid item className={classes.editor}>\n                    <MeasurementEditor\n                        child={resultCreator.selectedChild}\n                        values={resultCreator.values}\n                        points={resultCreator.points}\n                        edited={resultCreator.edited}\n                        measurement={measurement}\n                        result={resultCreator.kindergartenResults.find(\n                            (r) => r.childId === resultCreator.selectedChild._id,\n                        )}\n                        onChange={resultCreator.onChange}\n                        onEditClick={resultCreator.edit}\n                    />\n                </Grid>\n                <Grid item>\n                    <Divider />\n                </Grid>\n                <Grid item className={classes.footer}>\n                    <Paper className={classes.footerPaper}>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Box mr={2}>\n                                    <ButtonSecondary variant=\"text\" onClick={() => onClick('back-to-table', '')}>\n                                        {t('add-result-page.back-to-table')}\n                                    </ButtonSecondary>\n                                </Box>\n                            </Grid>\n                            <Grid item>\n                                <ActionMenuButtonSecondary\n                                    label={t(`add-result-page.save-and-next`)}\n                                    onClick={() => onClick('save-and-next', '')}\n                                    options={[\n                                        <MenuItem\n                                            key=\"add-result-page.save-and-back-to-table\"\n                                            onClick={() => onClick('back-to-table', '')}\n                                        >\n                                            {t('add-result-page.save-and-back-to-table')}\n                                        </MenuItem>,\n                                    ]}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n\n    function countMaxPoints() {\n        return Object.values(resultCreator.selectedChild!.currentParams!).reduce((acc, v) => {\n            if (!v || !v.lowerLimitPoints || !v.upperLimitPoints) return acc;\n\n            if (v.lowerLimitPoints > v.upperLimitPoints) {\n                return acc + v.lowerLimitPoints;\n            }\n\n            return acc + v.upperLimitPoints;\n        }, 0);\n    }\n}\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        editor: {\n            flex: '1 1 auto',\n            height: 0,\n            overflowY: 'auto',\n            paddingBottom: 56,\n        },\n        container: {\n            maxHeight: '85vh',\n            height: '85vh',\n            marginTop: 10,\n        },\n        footer: {\n            display: 'flex',\n            alignItems: 'center',\n            height: 56,\n            width: '100%',\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n            zIndex: 3000,\n        },\n        footerPaper: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            height: '100%',\n            paddingRight: 16,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/PageContainer.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChilModals/AddChildModal.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/ResultCreator.tsx",["1330","1331","1332"],"import React from 'react';\nimport { Box, createStyles, Divider, Grid, makeStyles, MenuItem, Paper, Typography } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { ChildPicker } from './ChildPicker/ChildPicker';\nimport { ResultCreatorReturnProps } from './useResultCreator';\nimport { ChildHeader } from './MeasurementEditor/ChildHeader';\nimport { MeasurementEditor } from './MeasurementEditor/MeasurementEditor';\nimport { ButtonSecondary } from '../../components/Button';\nimport { ActionMenuButtonSecondary } from '../../components/Button/ActionMenuButtonSecondary';\n\ninterface Props {\n    value: ResultCreatorReturnProps;\n    measurement: string;\n    onClick: (type: string, value: string) => void;\n}\n\nexport function ResultCreator({ value: resultCreator, measurement, onClick }: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const kindergartens = resultCreator.selectedAssessment.kindergartens.map((k) => k.kindergarten) || [];\n    const childList = resultCreator.selectedKindergarten.children || [];\n    const selectedKindergarten = resultCreator.selectedKindergarten._id || '';\n    const selectedChild = resultCreator.selectedChild._id;\n    const points = Object.values(resultCreator.points).reduce((acc, v) => acc + v, 0);\n\n    return (\n        <Paper>\n            <Grid container className={classes.container}>\n                <Grid item xs={4} className={classes.childPickerContainer}>\n                    <Paper>\n                        <ChildPicker\n                            header={<Typography variant=\"h4\">{t('add-result-page.kindergarten')}</Typography>}\n                            selectedKindergarten={selectedKindergarten}\n                            kindergartens={kindergartens}\n                            selected={selectedChild}\n                            measurement={measurement}\n                            childList={childList}\n                            onClick={onClick}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid item xs={8}>\n                    <Grid container direction=\"column\" className={classes.editorContainer}>\n                        <Grid item>\n                            <ChildHeader\n                                description={t(`add-result-page.title-${measurement}-measurement`)}\n                                selectedChild={resultCreator.selectedChild}\n                                points={points}\n                                maxPoints={countMaxPoints()}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Divider />\n                        </Grid>\n                        <Grid item className={classes.editor}>\n                            <MeasurementEditor\n                                measurement={measurement}\n                                child={resultCreator.selectedChild}\n                                values={resultCreator.values}\n                                points={resultCreator.points}\n                                edited={resultCreator.edited}\n                                result={resultCreator.kindergartenResults.find(\n                                    (r) => r.childId === resultCreator.selectedChild._id,\n                                )}\n                                onChange={resultCreator.onChange}\n                                onEditClick={resultCreator.edit}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Divider />\n                        </Grid>\n                        <Grid item className={classes.footerContainer}>\n                            <Grid container justify=\"flex-end\">\n                                <Grid item>\n                                    <Box mr={2}>\n                                        <ButtonSecondary onClick={() => onClick('back-to-table', '')} variant=\"text\">\n                                            {t('add-result-page.back-to-table')}\n                                        </ButtonSecondary>\n                                    </Box>\n                                </Grid>\n                                <Grid item>\n                                    <ActionMenuButtonSecondary\n                                        label={t(`add-result-page.save-and-next`)}\n                                        onClick={() => onClick('save-and-next', '')}\n                                        options={[\n                                            <MenuItem\n                                                onClick={() => onClick('back-to-table', '')}\n                                                key=\"add-result-page.save-and-back-to-table\"\n                                            >\n                                                {t('add-result-page.save-and-back-to-table')}\n                                            </MenuItem>,\n                                        ]}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n\n    function countMaxPoints() {\n        return Object.values(resultCreator.selectedChild!.currentParams!).reduce((acc, v) => {\n            if (!v || !v.lowerLimitPoints || !v.upperLimitPoints) return acc;\n\n            if (v.lowerLimitPoints > v.upperLimitPoints) {\n                return acc + v.lowerLimitPoints;\n            }\n\n            return acc + v.upperLimitPoints;\n        }, 0);\n    }\n}\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        editor: {\n            flex: '1 1 auto',\n            height: 0,\n            overflowY: 'auto',\n        },\n        container: {\n            maxHeight: '85vh',\n            height: '85vh',\n        },\n        childPickerContainer: {\n            display: 'flex',\n            flexDirection: 'column',\n            overflowY: 'auto',\n            height: '100%',\n            paddingRight: 2,\n        },\n        editorContainer: {\n            height: '100%',\n        },\n        footerContainer: {\n            display: 'flex',\n            alignItems: 'center',\n            height: 56,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/QuestionDialog.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/KindergartenList.tsx",["1333"],"import React, { useState } from 'react';\nimport {\n    createStyles,\n    makeStyles,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField,\n    Theme,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { LabeledContainer } from '../../components/LabeledContainer';\nimport { Kindergarten } from '../../graphql/types';\n\ninterface Props {\n    kindergartens: { selected: boolean; kindergarten: Kindergarten }[];\n}\n\nexport function KindergartenList({ kindergartens }: Props) {\n    const { t } = useTranslation();\n    const [searchPhrase, setSearchPhrase] = useState('');\n\n    const classes = useStyles();\n\n    return (\n        <LabeledContainer title={t('add-test-view.kindergartens.title')}>\n            <>\n                <TextField\n                    label={t('add-test-view.kindergartens.find-kindergarten')}\n                    type=\"search\"\n                    variant=\"outlined\"\n                    fullWidth\n                    data-testid=\"search-field\"\n                    value={searchPhrase}\n                    onChange={({ target: { value } }) => setSearchPhrase(value)}\n                    size=\"small\"\n                />\n                <TableContainer classes={{ root: classes.table }}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>{t('add-test-view.kindergartens.kindergarten-name')}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {kindergartens\n                                .filter((kindergarten) => kindergarten.selected)\n                                .map((kindergarten) => (\n                                    <TableRow key={kindergarten.kindergarten._id} hover role=\"row\">\n                                        <TableCell classes={{ root: classes.kindergartenItem }}>\n                                            {kindergarten.kindergarten.number}/{kindergarten.kindergarten.name}\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </>\n        </LabeledContainer>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        table: {\n            height: 295,\n        },\n        kindergartenItem: {\n            cursor: 'default',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/ActionButton.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/EditableBasicInformationForm.tsx",["1334"],"import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Grid, TextField, createStyles, makeStyles, Theme, MenuItem, Typography } from '@material-ui/core';\n\nimport { LabeledContainer } from '../../components/LabeledContainer';\nimport { AssessmentManagerState } from './useAssessmentManager';\nimport { SelectList } from '../../components/SelectList';\nimport { OutlinedDateField } from '../../components/OutlinedDateField';\n\ninterface Props {\n    isDisabled: boolean;\n    assessment: AssessmentManagerState;\n    onChange: (value: AssessmentManagerState) => void;\n}\n\nexport function EditableBasicInformationForm({ isDisabled, assessment, onChange }: Props) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <LabeledContainer title={t('add-test-view.basic-information-form.title')}>\n            <div>\n                <div className={classes.descriptionContainer}>\n                    {t('add-test-view.basic-information-form.description')}\n                </div>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            disabled={isDisabled}\n                            data-testid=\"test-name\"\n                            variant=\"outlined\"\n                            fullWidth\n                            label={t('add-test-view.basic-information-form.test-name')}\n                            value={assessment.title}\n                            onChange={({ target: { value } }) => onChange({ ...assessment, title: value })}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <SelectList\n                            items={[\n                                <MenuItem key=\"done\" value=\"planned\">\n                                    {t('add-test-view.basic-information-form.planned')}\n                                </MenuItem>,\n                                <MenuItem key=\"active\" value=\"active\">\n                                    {t('add-test-view.basic-information-form.active')}\n                                </MenuItem>,\n                                <MenuItem key=\"done\" value=\"done\">\n                                    {t('add-test-view.basic-information-form.done')}\n                                </MenuItem>,\n                            ]}\n                            disabled={isDisabled}\n                            label={t('add-test-view.basic-information-form.status')}\n                            value={assessment.status}\n                            onSelect={(status) => {\n                                onChange({ ...assessment, status });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <Typography variant=\"subtitle1\">\n                                    {t('add-test-view.basic-information-form.first-measurement')}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <OutlinedDateField\n                                    disabled={isDisabled}\n                                    label={t('add-test-view.basic-information-form.start-date')}\n                                    value={assessment.firstMeasurementStartDate}\n                                    onChange={(value) => onChange({ ...assessment, firstMeasurementStartDate: value })}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <OutlinedDateField\n                                    disabled={isDisabled}\n                                    label={t('add-test-view.basic-information-form.end-date')}\n                                    value={assessment.firstMeasurementEndDate}\n                                    onChange={(value) => onChange({ ...assessment, firstMeasurementEndDate: value })}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <SelectList\n                                    items={[\n                                        <MenuItem key=\"active\" value=\"not-planned\">\n                                            {t('add-test-view.basic-information-form.not-planned')}\n                                        </MenuItem>,\n                                        <MenuItem key=\"done\" value=\"planned\">\n                                            {t('add-test-view.basic-information-form.planned')}\n                                        </MenuItem>,\n                                        <MenuItem key=\"active\" value=\"active\">\n                                            {t('add-test-view.basic-information-form.active')}\n                                        </MenuItem>,\n                                        <MenuItem key=\"done\" value=\"done\">\n                                            {t('add-test-view.basic-information-form.done')}\n                                        </MenuItem>,\n                                    ]}\n                                    disabled={isDisabled}\n                                    label={t('add-test-view.basic-information-form.status')}\n                                    value={assessment.firstMeasurementStatus}\n                                    onSelect={(status) => {\n                                        onChange({ ...assessment, firstMeasurementStatus: status });\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant=\"subtitle1\">\n                                    {t('add-test-view.basic-information-form.last-measurement')}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <OutlinedDateField\n                                    disabled={isDisabled}\n                                    label={t('add-test-view.basic-information-form.start-date')}\n                                    value={assessment.lastMeasurementStartDate}\n                                    onChange={(value) => onChange({ ...assessment, lastMeasurementStartDate: value })}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <OutlinedDateField\n                                    disabled={isDisabled}\n                                    label={t('add-test-view.basic-information-form.end-date')}\n                                    value={assessment.lastMeasurementEndDate}\n                                    onChange={(value) => onChange({ ...assessment, lastMeasurementEndDate: value })}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <SelectList\n                                    items={[\n                                        <MenuItem key=\"active\" value=\"not-planned\">\n                                            {t('add-test-view.basic-information-form.not-planned')}\n                                        </MenuItem>,\n                                        <MenuItem key=\"done\" value=\"planned\">\n                                            {t('add-test-view.basic-information-form.planned')}\n                                        </MenuItem>,\n                                        <MenuItem key=\"active\" value=\"active\">\n                                            {t('add-test-view.basic-information-form.active')}\n                                        </MenuItem>,\n                                        <MenuItem key=\"done\" value=\"done\">\n                                            {t('add-test-view.basic-information-form.done')}\n                                        </MenuItem>,\n                                    ]}\n                                    disabled={isDisabled}\n                                    label={t('add-test-view.basic-information-form.status')}\n                                    value={assessment.lastMeasurementStatus}\n                                    onSelect={(status) => {\n                                        onChange({ ...assessment, lastMeasurementStatus: status });\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        </LabeledContainer>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        descriptionContainer: {\n            marginBottom: theme.spacing(3),\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/ChildProfileAboutTests.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildRecommendations/ChildRecommendations.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Navigation/MobileAwareCategoryTabs.tsx",["1335"],"import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nimport { Device } from '../../queries/useBreakpoints';\nimport { CategoryTabsMobile } from './CategoryTabsMobile';\nimport { CategoryTabs } from './CategoryTabs';\nimport { CategoryItem } from '../../pages/ArticleListPage/BlogCategories';\nimport { ChildProfileCategoryItem } from '../../pages/ChildProfile/ChildProfileCategory';\n\ninterface Props<T extends CategoryItem | ChildProfileCategoryItem> {\n    device: Device;\n    category: string;\n    values: T[];\n    onTabChange: (value: string) => void;\n}\n\nexport function MobileAwareCategoryTabs<T extends CategoryItem | ChildProfileCategoryItem>({\n    device,\n    category,\n    values,\n    onTabChange,\n}: Props<T>) {\n    const classes = useStyles();\n\n    return device === 'MOBILE' ? (\n        <div className={classes.navigationMobile}>\n            <CategoryTabsMobile values={values} active={category} onClick={onTabChange} />\n        </div>\n    ) : (\n        <div className={classes.navigation}>\n            <CategoryTabs values={values} active={category} onClick={onTabChange} />\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        navigation: {\n            backgroundColor: theme.palette.primary.contrastText,\n            padding: `0 ${theme.spacing(3)}px`,\n            borderBottom: `1px solid ${theme.palette.grey[400]}`,\n        },\n        navigationMobile: {\n            backgroundColor: theme.palette.primary.main,\n            padding: `0 ${theme.spacing(3)}px`,\n            borderBottom: `1px solid ${theme.palette.grey[400]}`,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ChildProfileResults.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/Details/ChildDetails.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/addChild.tsx",["1336"],"import { gql, useMutation } from '@apollo/client';\nimport { ApolloError } from 'apollo-boost';\nimport { Child, ChildInput } from '../../../graphql/types';\nimport { useGetMe } from './useGetMe';\n\ninterface AddChildReturn {\n    addChild: (props: ChildInput) => void;\n    error: ApolloError | undefined;\n}\n\nexport const ADD_CHILD = gql`\n    mutation addChild($child: ChildInput!) {\n        addChild(child: $child) {\n            _id\n            firstname\n            lastname\n            sex\n            birthYear\n            birthQuarter\n            results {\n                _id\n                date\n                test\n                rootResultId\n            }\n            kindergarten {\n                _id\n                name\n                number\n            }\n        }\n    }\n`;\n\nexport function useAddChild(): AddChildReturn {\n    const [mutate, { error }] = useMutation<{ addChild: Child }>(ADD_CHILD);\n    const { refetch } = useGetMe();\n\n    return {\n        addChild: (props: ChildInput) => {\n            mutate({\n                variables: {\n                    child: props,\n                },\n            }).then(() => {\n                refetch();\n            });\n        },\n        error,\n    };\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/useGetMe.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/resetPassword.tsx",["1337"],"import { gql, useMutation } from '@apollo/client';\n\nconst RESET_PASSWORD = gql`\n    mutation ResetPassword($mail: String!) {\n        resetPassword(mail: $mail) {\n            status\n        }\n    }\n`;\n\nexport function useResetPassword(onSuccess: () => void, onError: (error: Error) => void) {\n    const [resetPassword] = useMutation(RESET_PASSWORD);\n\n    return {\n        resetPassword: (mail: string) => {\n            resetPassword({\n                variables: {\n                    mail,\n                },\n            })\n                .then(onSuccess)\n                .catch(onError);\n        },\n    };\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/authorizeMe.tsx",["1338","1339"],"import { gql, useMutation } from '@apollo/client';\nimport { Me } from '../../../graphql/types';\nimport { useGetMe } from './useGetMe';\n\nexport interface LoginInput {\n    mail: string;\n    password: string;\n}\n\nconst AUTHORIZE_USER = gql`\n    mutation login($user: LoginInput!) {\n        login(user: $user) {\n            token\n        }\n    }\n`;\n\nexport function useAuthorizeMe(onAuthorized: (user: Me) => void, onError: (error: Error) => void) {\n    const [authorizeUser] = useMutation(AUTHORIZE_USER);\n    const { refetch } = useGetMe();\n\n    return {\n        authorizeMe: (mail: string, password: string) => {\n            authorizeUser({\n                variables: { user: { mail: normalize(mail), password } },\n                update: (_, { data: { login } }) => {\n                    localStorage.setItem('token', login.token);\n\n                    refetch()\n                        .then(({ data }) => {\n                            if (data) {\n                                onAuthorized(data.me);\n                            }\n                        })\n                        .catch((error) => onError(error));\n                },\n            }).catch((error) => onError(error));\n        },\n    };\n}\n\nfunction normalize(value: string) {\n    return value.replace(/\\s/g, '').toLowerCase();\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Navbar/Navbar.tsx",["1340"],"import React, { useState, useRef } from 'react';\n\nimport { IconButton, makeStyles, Theme, createStyles, Box, AppBar, Toolbar, Typography } from '@material-ui/core/';\nimport { Notifications, Menu as MenuIcon } from '@material-ui/icons';\nimport { useTranslation } from 'react-i18next';\nimport clsx from 'clsx';\nimport { NotificationsPanel } from './NotificationsPanel';\nimport { Notification } from '../../../graphql/types';\nimport { Device } from '../../../queries/useBreakpoints';\nimport { LanguageSelector } from '../../LanguageSelector';\nimport { AppLogo } from '../../AppLogo';\nimport { useOnClickOutside } from '../../../utils/useOnClickOutside';\nimport { useReadNotification } from '../../../operations/mutations/Notification/readNotification';\n\ninterface Props {\n    device: Device;\n    language: string;\n    notifications: Notification[];\n    activePage: string[];\n    onSidebarToggle: () => void;\n    onLanguageChange: (language: string) => void;\n}\n\nexport function Navbar({ device, language, notifications, activePage, onSidebarToggle, onLanguageChange }: Props) {\n    const [isNotificationPopupOpen, setIsNotificationPopupOpen] = useState(false);\n    const { readNotification } = useReadNotification();\n    const classes = useStyles();\n    const popupRef = useRef<HTMLElement | null>(null);\n    useOnClickOutside(popupRef, () => setIsNotificationPopupOpen(false));\n    const { t } = useTranslation();\n\n    function handleNotificationPopupClick() {\n        setIsNotificationPopupOpen((prev) => !prev);\n    }\n\n    return (\n        <Box zIndex=\"appBar\">\n            <AppBar\n                position=\"fixed\"\n                classes={{\n                    root: clsx({\n                        [classes.containerMobile]: device !== 'DESKTOP',\n                    }),\n                }}\n            >\n                <Toolbar classes={{ root: classes.container }}>\n                    {device === 'DESKTOP' ? (\n                        <span className={classes.logo}>\n                            <AppLogo />\n                        </span>\n                    ) : (\n                        <IconButton onClick={onSidebarToggle}>\n                            <MenuIcon />\n                        </IconButton>\n                    )}\n                    <div className={classes.menuRoot}>\n                        <Typography variant=\"h6\" noWrap color=\"textPrimary\">\n                            {activePage.length > 0 && t(activePage[activePage.length - 1])}\n                        </Typography>\n                        <div className={classes.menuSide}>\n                            <LanguageSelector language={language} onClick={onLanguageChange} />\n                            <span ref={popupRef}>\n                                <IconButton\n                                    aria-label=\"notifications\"\n                                    onClick={handleNotificationPopupClick}\n                                    color={notifications.find((n) => !n.isRead) ? 'secondary' : 'default'}\n                                >\n                                    <Notifications />\n                                </IconButton>\n                                {isNotificationPopupOpen && (\n                                    <NotificationsPanel\n                                        onClick={(id) => readNotification(id)}\n                                        notifications={notifications}\n                                    />\n                                )}\n                            </span>\n                        </div>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            minHeight: theme.spacing(8),\n        },\n        containerMobile: {\n            boxShadow: 'none',\n            borderBottom: `1px solid ${theme.palette.primary.main}`,\n        },\n        toolbar: theme.mixins.toolbar,\n        logo: {\n            marginLeft: theme.spacing(5),\n            marginRight: theme.spacing(33),\n        },\n        menuRoot: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            flex: 1,\n            alignItems: 'center',\n        },\n        menuSide: {\n            display: 'flex',\n            alignItems: 'center',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/Sidebar.tsx",["1341"],"import React from 'react';\n\nimport { AdminSidebar } from './AdminSidebar';\nimport { InstructorSidebar } from './InstructorSidebar';\nimport { ParentSidebar } from './ParentSidebar';\nimport { Me } from '../../../graphql/types';\n\ninterface Props {\n    user: Me;\n    activePage: string[];\n    isOpen: boolean;\n    onClick: (link?: string) => void;\n    onSidebarClose: () => void;\n}\n\nexport function Sidebar({ user, isOpen, activePage, onClick, onSidebarClose }: Props) {\n    if (user.role === 'admin') {\n        return (\n            <AdminSidebar user={user} active={activePage} open={isOpen} onClose={onSidebarClose} onClick={onClick} />\n        );\n    }\n\n    if (user.role === 'instructor') {\n        return (\n            <InstructorSidebar\n                user={user}\n                active={activePage}\n                open={isOpen}\n                onClose={onSidebarClose}\n                onClick={onClick}\n            />\n        );\n    }\n\n    return <ParentSidebar user={user} active={activePage} open={isOpen} onClose={onSidebarClose} onClick={onClick} />;\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/useAssessmentManager.tsx",["1342","1343"],"import { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport { useTranslation } from 'react-i18next';\n\nimport { CreatedAssessmentInput, useCreateAssessment } from '../../operations/mutations/Assessment/createAssessment';\nimport { useKindergartens } from '../../operations/queries/Kindergartens/getKindergartens';\nimport { formatDate } from '../../utils/formatDate';\nimport { useAssessment } from '../../operations/queries/Assessment/getAssessment';\nimport { useUpdateAssessment } from '../../operations/mutations/Assessment/updateAssessment';\nimport { useAssessments } from '../../operations/queries/Assessment/getAllAssessments';\n\nconst TWO_MONTHS = 60 * 24 * 60 * 60 * 1000;\n\nconst defaultStartDate = new Date();\nconst defaultEndDate = new Date(defaultStartDate.getTime() + TWO_MONTHS);\n\nexport interface SuccessState {\n    assessment: AssessmentManagerState;\n    message?: string;\n}\n\nexport interface ErrorState {\n    errors: string;\n}\n\nexport interface AssessmentManagerState {\n    title: string;\n    startDate: string;\n    endDate: string;\n    isOutdated: boolean;\n    isDeleted: boolean;\n    status: string;\n    firstMeasurementStatus: string;\n    lastMeasurementStatus: string;\n    firstMeasurementStartDate: string;\n    firstMeasurementEndDate: string;\n    lastMeasurementStartDate: string;\n    lastMeasurementEndDate: string;\n    kindergartenIds: string[];\n}\n\nconst defaultAssessment: AssessmentManagerState = {\n    title: '',\n    startDate: formatDate(defaultStartDate),\n    endDate: formatDate(defaultEndDate),\n    isOutdated: false,\n    isDeleted: false,\n    status: 'active',\n    firstMeasurementStatus: 'active',\n    lastMeasurementStatus: 'active',\n    firstMeasurementStartDate: formatDate(defaultStartDate),\n    firstMeasurementEndDate: formatDate(defaultEndDate),\n    lastMeasurementStartDate: formatDate(defaultStartDate),\n    lastMeasurementEndDate: formatDate(defaultEndDate),\n    kindergartenIds: [],\n};\n\nexport function useAssessmentManager(\n    assessmentId: string | undefined,\n    onSubmit: (state: SuccessState | ErrorState) => void,\n) {\n    const [updatedLocalAssessment, setUpdateLocalAssessment] = useState(defaultAssessment);\n    const [reasonForBeingDisabled, setReasonForBeingDisabled] = useState<string | undefined>(undefined);\n    const { kindergartenList } = useKindergartens();\n    const { t } = useTranslation();\n    const { assessments } = useAssessments();\n    const { createAssessment: createTest, error, isCreationPending } = useCreateAssessment();\n    const state = updatedLocalAssessment;\n    const { updateAssessment, isUpdatePending } = useUpdateAssessment();\n\n    const { assessment } = useAssessment(assessmentId!);\n\n    useEffect(() => {\n        if (!assessment) return;\n\n        setUpdateLocalAssessment({\n            title: assessment.title,\n            startDate: assessment.startDate,\n            endDate: assessment.endDate,\n            status: assessment.status,\n            firstMeasurementStatus: assessment.firstMeasurementStatus,\n            lastMeasurementStatus: assessment.lastMeasurementStatus,\n            firstMeasurementStartDate: assessment.firstMeasurementStartDate,\n            firstMeasurementEndDate: assessment.firstMeasurementEndDate,\n            lastMeasurementStartDate: assessment.lastMeasurementStartDate,\n            lastMeasurementEndDate: assessment.lastMeasurementEndDate,\n            isOutdated: assessment.isOutdated,\n            isDeleted: assessment.isDeleted,\n            kindergartenIds: assessment.kindergartens.map((k) => k.kindergarten._id),\n        });\n    }, [assessment]);\n\n    useEffect(() => {\n        validate(state)\n            .then(() => {\n                const assessmentWithUsedName = assessments.find((a) => a.title === state.title);\n\n                if (assessmentWithUsedName && assessmentWithUsedName._id !== assessmentId) {\n                    return setReasonForBeingDisabled(t('add-test-view.errors.test-already-exists'));\n                }\n\n                setReasonForBeingDisabled(undefined);\n            })\n            .catch((e) => {\n                if (e.errors.length > 0) {\n                    setReasonForBeingDisabled(e.errors[0]);\n                }\n            });\n    }, [updatedLocalAssessment, state, assessments, t, assessmentId]);\n\n    function submit(update: AssessmentManagerState) {\n        if (assessmentId) return submitUpdatedAssessment(update);\n\n        createAssessment();\n    }\n\n    function submitUpdatedAssessment(update: AssessmentManagerState) {\n        const valid = validate(update || updatedLocalAssessment);\n\n        const parsedKindergarten = getKindergartenUpdateInput();\n\n        valid.then((result) => {\n            if (result) {\n                const { kindergartenIds, ...validAssessment } = result as AssessmentManagerState;\n                const updatedAssessmentInput = { ...validAssessment, kindergartens: parsedKindergarten };\n\n                if (!assessmentId) return;\n\n                updateAssessment(assessmentId, updatedAssessmentInput)\n                    .then(() => {\n                        setReasonForBeingDisabled('add-test-view.errors.test-already-updated');\n                        onSubmit({ assessment: state, message: t('add-test-view.assessment-updated') });\n                    })\n                    .catch((e) => onSubmit({ errors: e.message }));\n            }\n        });\n    }\n\n    function createAssessment() {\n        const valid = validate(state);\n\n        valid\n            .then(() => {\n                createTest(mapToCreatedAssessment(updatedLocalAssessment)).then(() => {\n                    if (!error) {\n                        setReasonForBeingDisabled('add-test-view.errors.test-already-created');\n                        onSubmit({ assessment: state, message: t('add-test-view.assessment-created') });\n                    }\n                });\n            })\n            .catch((e) => {\n                onSubmit({ errors: t(e.message) });\n            });\n    }\n\n    function mapToCreatedAssessment(assessmentState: AssessmentManagerState): CreatedAssessmentInput {\n        return {\n            title: assessmentState.title,\n            startDate: assessmentState.startDate,\n            endDate: assessmentState.endDate,\n            firstMeasurementStartDate: assessmentState.firstMeasurementStartDate,\n            firstMeasurementEndDate: assessmentState.firstMeasurementEndDate,\n            lastMeasurementStartDate: assessmentState.lastMeasurementStartDate,\n            lastMeasurementEndDate: assessmentState.lastMeasurementEndDate,\n            kindergartenIds: assessmentState.kindergartenIds,\n        };\n    }\n\n    function getKindergartenUpdateInput() {\n        const parsedKindergarten =\n            assessment?.kindergartens\n                .map((k) => ({\n                    kindergartenId: k.kindergarten._id,\n                    instructorId: k.instructor?._id,\n                }))\n                .filter((k) => {\n                    return updatedLocalAssessment.kindergartenIds.includes(k.kindergartenId);\n                }) || [];\n\n        updatedLocalAssessment.kindergartenIds.forEach((s) => {\n            if (parsedKindergarten.find((k) => k.kindergartenId === s)) {\n                return;\n            }\n\n            parsedKindergarten.push({ kindergartenId: s, instructorId: undefined });\n        });\n\n        return parsedKindergarten;\n    }\n\n    return {\n        submit: (update?: Partial<AssessmentManagerState>) => {\n            setUpdateLocalAssessment((prev) => {\n                if (update) {\n                    const updated = { ...prev, ...update };\n\n                    submit(updated);\n\n                    return updated;\n                }\n\n                const submited = { ...prev, ...updatedLocalAssessment };\n\n                submit(submited);\n\n                return submited;\n            });\n        },\n        kindergartens: kindergartenList.map((k) => {\n            return { selected: updatedLocalAssessment.kindergartenIds.includes(k._id), kindergarten: k };\n        }),\n        reasonForBeingDisabled,\n        updateAssessment: (update: Partial<AssessmentManagerState>) => {\n            setUpdateLocalAssessment((prev) => {\n                return { ...prev, ...update };\n            });\n        },\n        assessemnt: updatedLocalAssessment,\n        isLoading: isCreationPending || isUpdatePending,\n    };\n}\n\nasync function validate(state: AssessmentManagerState) {\n    const newTestSchema = yup.object().shape({\n        title: yup.string().min(5, 'add-test-view.errors.name-too-short'),\n        startDate: yup.string().required(),\n        endDate: yup.string().required(),\n    });\n\n    return newTestSchema.validateSync(state);\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/KindergartenPicker.tsx",["1344","1345"],"import React, { useState } from 'react';\nimport {\n    Checkbox,\n    createStyles,\n    makeStyles,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { LabeledContainer } from '../../components/LabeledContainer';\nimport { Kindergarten } from '../../graphql/types';\n\ninterface Props {\n    isDisabled: boolean;\n    kindergartens: { selected: boolean; kindergarten: Kindergarten }[];\n    onSelect: (id: string[], options?: { selectedAll?: boolean }) => void;\n}\n\nexport function KindergartenPicker({ isDisabled, kindergartens, onSelect }: Props) {\n    const { t } = useTranslation();\n    const [searchPhrase, setSearchPhrase] = useState('');\n    const [selectedAll, setSelectedAll] = useState(false);\n\n    const classes = useStyles();\n\n    return (\n        <LabeledContainer title={t('add-test-view.kindergartens.title')}>\n            <>\n                <Typography variant=\"subtitle1\">{t('add-test-view.kindergartens.description')}</Typography>\n                <div className={classes.searchFieldContainer}>\n                    <TextField\n                        label={t('add-test-view.kindergartens.find-kindergarten')}\n                        type=\"search\"\n                        variant=\"outlined\"\n                        fullWidth\n                        data-testid=\"search-field\"\n                        value={searchPhrase}\n                        onChange={({ target: { value } }) => setSearchPhrase(value)}\n                        size=\"small\"\n                    />\n                </div>\n                <TableContainer classes={{ root: classes.table }}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        disabled={isDisabled}\n                                        checked={selectedAll}\n                                        onClick={() => {\n                                            if (isDisabled) return;\n\n                                            if (selectedAll) {\n                                                onSelect([], { selectedAll: true });\n                                            } else {\n                                                onSelect(\n                                                    kindergartens.map((kindergarten) => kindergarten.kindergarten._id),\n                                                    { selectedAll: true },\n                                                );\n                                            }\n\n                                            setSelectedAll((prev) => !prev);\n                                        }}\n                                        data-testid=\"select-all\"\n                                        color=\"default\"\n                                    />\n                                </TableCell>\n                                <TableCell>{t('add-test-view.kindergartens.kindergarten-name')}</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {kindergartens\n                                .filter((kindergarten) => {\n                                    if (searchPhrase.length <= 3) return true;\n\n                                    return kindergarten.kindergarten.name.includes(searchPhrase);\n                                })\n                                .map((kindergarten) => (\n                                    <TableRow\n                                        key={kindergarten.kindergarten._id}\n                                        hover\n                                        role=\"row\"\n                                        onClick={() => {\n                                            if (isDisabled) return;\n\n                                            onSelect([kindergarten.kindergarten._id]);\n                                        }}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                disabled={isDisabled}\n                                                checked={kindergarten.selected}\n                                                color=\"default\"\n                                            />\n                                        </TableCell>\n                                        <TableCell classes={{ root: classes.kindergartenItem }}>\n                                            {kindergarten.kindergarten.number}/{kindergarten.kindergarten.name}\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </>\n        </LabeledContainer>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        table: {\n            height: 295,\n        },\n        searchFieldContainer: {\n            margin: theme.spacing(3, 0, 2),\n        },\n        kindergartenItem: {\n            cursor: 'pointer',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/TestInformation.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenModals/ChangeLogModal.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenModals/KindergartenDeleteModal.tsx",["1346"],"import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, makeStyles, Theme, createStyles } from '@material-ui/core';\nimport { TwoActionsModal } from '../../../components/Modal/TwoActionsModal';\nimport { Kindergarten } from '../../../graphql/types';\n\ninterface Props {\n    onClose: () => void;\n    onDelete: (id: string) => void;\n    kindergarten: Kindergarten;\n}\n\nexport const KindergartenDeleteModal = ({ onClose, onDelete, kindergarten }: Props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const { _id, number, name, address, city } = kindergarten;\n\n    return (\n        <TwoActionsModal\n            lowerButtonOnClick={onClose}\n            upperButtonOnClick={() => onDelete(_id)}\n            lowerButtonText={t('test-results.cancel')}\n            upperButtonText={t('test-results.delete')}\n            isOpen\n            onClose={onClose}\n        >\n            <Typography variant=\"h4\" className={classes.title}>\n                {t('delete-kindergarten-modal.title')}\n            </Typography>\n            <Typography variant=\"body1\" className={classes.description}>\n                {t('delete-kindergarten-modal.question', {\n                    prefix: t('test-results.kindergarten-prefix'),\n                    number,\n                    name,\n                    address,\n                    city,\n                })}\n            </Typography>\n        </TwoActionsModal>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            paddingBottom: theme.spacing(2),\n        },\n        description: {\n            marginTop: theme.spacing(1),\n            marginBottom: theme.spacing(2),\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsList.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenModals/KindergartenModal.tsx",["1347","1348"],"import React from 'react';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { TextField, Grid, makeStyles, createStyles, Typography, Theme } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport { ButtonSecondary } from '../../../components/Button/ButtonSecondary';\nimport { TwoActionsModal } from '../../../components/Modal/TwoActionsModal';\nimport { Kindergarten, AddKindergartenInput } from '../../../graphql/types';\n\ninterface Props {\n    onClose: () => void;\n    onSubmit: (values: AddKindergartenInput) => void;\n    onDelete: (kindergarten: Kindergarten) => void;\n    kindergarten: Kindergarten | null;\n}\n\nexport const KindergartenModal = ({ onClose, onSubmit, onDelete, kindergarten }: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const formik = useFormik({\n        initialValues: {\n            city: kindergarten?.city || 'Wrocław',\n            address: kindergarten?.address || '',\n            name: kindergarten?.name || '',\n            number: kindergarten?.number || 0,\n        },\n        validationSchema: Yup.object({\n            city: Yup.string().required(t('kindergarten-modal.provide-city')),\n            address: Yup.string().required(t('kindergarten-modal.provide-address')),\n            name: Yup.string().required(t('kindergarten-modal.provide-name')),\n            number: Yup.number()\n                .min(1, t('kindergarten-modal.number-min-max'))\n                .max(1000, t('kindergarten-modal.number-min-max'))\n                .required(t('kindergarten-modal.provide-number')),\n        }),\n        enableReinitialize: true,\n        onSubmit,\n    });\n\n    const translationPrefix = kindergarten ? 'edit' : 'add';\n\n    return (\n        <TwoActionsModal\n            lowerButtonOnClick={onClose}\n            upperButtonOnClick={formik.submitForm}\n            lowerButtonText={t(`${translationPrefix}-kindergarten-modal.close`)}\n            upperButtonText={t(`${translationPrefix}-kindergarten-modal.${translationPrefix}`)}\n            isOpen\n            onClose={onClose}\n        >\n            <Typography variant=\"h4\" className={classes.title}>\n                {t(`${translationPrefix}-kindergarten-modal.title`)}\n            </Typography>\n            <Typography variant=\"body1\" className={classes.description}>\n                {t(`${translationPrefix}-kindergarten-modal.description`)}\n            </Typography>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField\n                        label={t('test-results.kindergarten-name')}\n                        variant=\"outlined\"\n                        fullWidth\n                        {...formik.getFieldProps('name')}\n                        error={formik.touched.name && !!formik.errors.name}\n                        helperText={formik.touched.name && formik.errors.name}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        label={t('test-results.kindergarten-number')}\n                        type=\"number\"\n                        variant=\"outlined\"\n                        fullWidth\n                        required\n                        {...formik.getFieldProps('number')}\n                        error={formik.touched.number && !!formik.errors.number}\n                        helperText={formik.touched.number && formik.errors.number}\n                        InputProps={{\n                            inputProps: {\n                                min: 1,\n                                max: 1000,\n                            },\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        label={t('kindergarten-modal.address')}\n                        variant=\"outlined\"\n                        fullWidth\n                        {...formik.getFieldProps('address')}\n                        error={formik.touched.address && !!formik.errors.address}\n                        helperText={formik.touched.address && formik.errors.address}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        label={t('kindergarten-modal.city')}\n                        variant=\"outlined\"\n                        fullWidth\n                        {...formik.getFieldProps('city')}\n                        error={formik.touched.city && !!formik.errors.city}\n                        helperText={formik.touched.city && formik.errors.city}\n                    />\n                </Grid>\n                <Grid item>\n                    {kindergarten && (\n                        <ButtonSecondary\n                            onClick={() => {\n                                onDelete(kindergarten);\n                                onClose();\n                            }}\n                            icon={<Delete />}\n                            innerText={t('edit-kindergarten-modal.delete')}\n                        />\n                    )}\n                </Grid>\n            </Grid>\n        </TwoActionsModal>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        title: {\n            paddingBottom: theme.spacing(2),\n        },\n        description: {\n            marginTop: theme.spacing(1),\n            marginBottom: theme.spacing(2),\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenTable/TestResultsTable.tsx",["1349"],"import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport { TestResultsTableRow } from './TestResultsTableRow';\nimport { Kindergarten } from '../../../graphql/types';\n\ninterface Props {\n    kindergartens: Kindergarten[];\n    onEditClick: (value: Kindergarten) => void;\n}\n\nexport const TestResultsTable = ({ kindergartens, onEditClick }: Props) => {\n    const { t } = useTranslation();\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"collapsible table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell />\n                        <TableCell>{t('test-results.kindergarten-number')}</TableCell>\n                        <TableCell>{t('test-results.kindergarten-name')}</TableCell>\n                        <TableCell>{t('test-results.kindergarten-address')}</TableCell>\n                        <TableCell />\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {kindergartens.map((kindergarten) => (\n                        <TestResultsTableRow\n                            key={kindergarten._id}\n                            kindergarten={kindergarten}\n                            onEditClick={onEditClick}\n                        />\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Results/createAssessmentResult.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Kindergartens/getKindergartens.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Snackbar/openSnackbar.tsx",["1350"],"import React from 'react';\nimport { createStyles, makeStyles, Snackbar } from '@material-ui/core';\nimport { Alert, AlertProps } from '@material-ui/lab';\n\nimport { ActionDialog, DialogResult, openDialog } from '../../utils/openDialog';\n\ninterface Props {\n    text: string;\n    variant?: AlertProps['variant'];\n    severity?: AlertProps['severity'];\n}\n\nexport function openSnackbar({ text, variant, severity }: Props): Promise<DialogResult> {\n    return openDialog(function ({ onClose }: ActionDialog) {\n        const classes = useStyles();\n\n        return (\n            <div>\n                <Snackbar\n                    open\n                    autoHideDuration={6000}\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    onClose={onClose}\n                    classes={{ root: classes.container }}\n                >\n                    <Alert onClose={onClose} severity={severity || 'success'} variant={variant || 'filled'}>\n                        {text}\n                    </Alert>\n                </Snackbar>\n            </div>\n        );\n    }, {});\n}\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        container: {\n            zIndex: 10000,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticleListPage/Pagination.tsx",["1351"],"import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/';\nimport { useTranslation } from 'react-i18next';\nimport { ButtonPrimary } from '../../components/Button';\n\ninterface Props {\n    disabledPrevious: boolean;\n    disabledNext: boolean;\n    handleChange: (paginationDirection: string) => void;\n}\n\nexport const Pagination = ({ disabledPrevious, disabledNext, handleChange }: Props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <div className={classes.paginationContainer}>\n            <ButtonPrimary\n                variant=\"contained\"\n                disabled={disabledPrevious}\n                onClick={() => handleChange('prev')}\n                innerText={t('pagination.previous')}\n            />\n            <ButtonPrimary\n                variant=\"contained\"\n                disabled={disabledNext}\n                className={classes.next}\n                onClick={() => handleChange('next')}\n                innerText={t('pagination.next')}\n            />\n        </div>\n    );\n};\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        paginationContainer: {\n            display: 'flex',\n            justifyContent: 'center',\n            padding: '5%',\n        },\n        next: {\n            marginLeft: '2%',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NotificationsPage/NotificationPageList.tsx",["1352"],"import React from 'react';\nimport {\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    Paper,\n    makeStyles,\n    TableBody,\n    createStyles,\n    Theme,\n    Typography,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { NotificationPageListItem } from './NotificationPageListItem';\nimport { Notification } from '../../graphql/types';\nimport { useNotificationContent } from './useNotificationContent';\n\ninterface Props {\n    notifications: Notification[];\n    onClick: (id: string) => void;\n}\n\nexport const NotificationPageList = ({ notifications, onClick }: Props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const { getNotification } = useNotificationContent();\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"Notification table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell classes={{ root: classes.content }}>\n                            <Typography variant=\"subtitle2\">{t('notifications-page.content')}</Typography>\n                        </TableCell>\n                        <TableCell classes={{ root: classes.date }}>\n                            <Typography variant=\"subtitle2\">{t('notifications-page.date')}</Typography>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {notifications.map((notification) => {\n                        const { _id, values, templateId, date, isRead } = notification;\n\n                        return (\n                            <NotificationPageListItem\n                                key={_id}\n                                id={_id}\n                                text={getNotification(templateId, values)}\n                                date={new Date(date)}\n                                isRead={isRead}\n                                onClick={onClick}\n                            />\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        content: {\n            paddingLeft: theme.spacing(7),\n            textTransform: 'uppercase',\n        },\n        date: {\n            textTransform: 'uppercase',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/BasicInformationForm/BasicInformationForm.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Articles/getLastArticles.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Notification/readNotification.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageChildren/HomePageChildren.tsx",["1353","1354","1355"],"import React from 'react';\nimport { makeStyles, createStyles, Theme, Grid } from '@material-ui/core';\nimport { CarouselProvider, Slider, Slide } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport { HomePageChildCard } from './HomePageChildCard';\nimport BoyAvatar from '../../../../assets/boy.png';\nimport GirlAvatar from '../../../../assets/girl.png';\nimport { Child, ChildInput } from '../../../../graphql/types';\nimport { HomePageAddChildButton } from '../HomePageAddChildButton/HomePageAddChildButton';\nimport { openAddChildModal } from '../../../../components/ChilModals/AddChildModal';\nimport { useKindergartens } from '../../../../operations/queries/Kindergartens/getKindergartens';\nimport { useIsDevice } from '../../../../queries/useBreakpoints';\n\ninterface Props {\n    childrenList: Child[];\n    handleModalSubmit: (child: ChildInput) => void;\n    onChildClick: (id: string) => void;\n}\n\nexport const HomePageChildren = ({ childrenList: children, handleModalSubmit, onChildClick }: Props) => {\n    const classes = useStyles();\n    const device = useIsDevice();\n\n    const { kindergartenList } = useKindergartens();\n\n    return device.isMobile ? (\n        <MobileCarousel\n            childList={children}\n            onAddChildClick={() => {\n                openAddChildModal({\n                    kindergartens: kindergartenList,\n                    isCancelButtonVisible: true,\n                }).then((results) => {\n                    if (results.decision?.accepted) {\n                        handleModalSubmit(results.decision.child);\n                    }\n                });\n            }}\n            onChildClick={onChildClick}\n        />\n    ) : (\n        <Grid container spacing={3}>\n            {children.map(({ firstname, _id, sex }) => {\n                return (\n                    <Grid item key={_id} xs={6} sm={3}>\n                        <HomePageChildCard\n                            firstName={firstname}\n                            PictureComponent={\n                                <img\n                                    className={classes.childAvatar}\n                                    alt=\"mali_wspaniali_child\"\n                                    src={sex === 'male' ? BoyAvatar : GirlAvatar}\n                                />\n                            }\n                            onClick={() => onChildClick(_id)}\n                        />\n                    </Grid>\n                );\n            })}\n            <Grid item xs={6} sm={3}>\n                <HomePageAddChildButton\n                    onClick={() => {\n                        openAddChildModal({\n                            kindergartens: kindergartenList,\n                            isCancelButtonVisible: true,\n                        }).then((results) => {\n                            if (results.decision?.accepted) {\n                                handleModalSubmit(results.decision.child);\n                            }\n                        });\n                    }}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\ninterface MobileCarouselProps {\n    childList: Child[];\n    onAddChildClick: () => void;\n    onChildClick: (id: string) => void;\n}\n\nfunction MobileCarousel({ childList, onAddChildClick, onChildClick }: MobileCarouselProps) {\n    const classes = useStyles();\n    const { isSmallMobile } = useIsDevice();\n\n    return (\n        <CarouselProvider\n            naturalSlideWidth={100}\n            naturalSlideHeight={100}\n            totalSlides={childList.length + 1}\n            visibleSlides={isSmallMobile ? 2 : 3}\n            isIntrinsicHeight\n        >\n            <Slider style={{ height: '100%' }}>\n                {childList.map(({ firstname, _id, sex }, i) => {\n                    return (\n                        <Slide index={i} key={_id} innerClassName={classes.slide}>\n                            <HomePageChildCard\n                                firstName={firstname}\n                                PictureComponent={\n                                    <img\n                                        className={classes.childAvatar}\n                                        alt=\"mali_wspaniali_child\"\n                                        src={sex === 'male' ? BoyAvatar : GirlAvatar}\n                                    />\n                                }\n                                onClick={() => onChildClick(_id)}\n                            />\n                        </Slide>\n                    );\n                })}\n                <Slide index={childList.length} innerClassName={classes.slide}>\n                    <HomePageAddChildButton onClick={onAddChildClick} />\n                </Slide>\n            </Slider>\n        </CarouselProvider>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        childAvatar: {\n            width: '100%',\n            objectFit: 'contain',\n        },\n        slide: {\n            paddingRight: theme.spacing(2),\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/index.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/index.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageArticles/index.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageInfo/index.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Results/getAssessmentResults.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Assessment/getAllAssessments.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/formatDate.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NotificationsPage/useNotificationContent.ts",["1356","1357","1358"],"/* eslint-disable @typescript-eslint/camelcase */\nimport { useTranslation } from 'react-i18next';\n\nexport function useNotificationContent(): { getNotification: (name: string, values: string[]) => string } {\n    const { t } = useTranslation();\n\n    const options: { [index: string]: (values: string[]) => string } = {\n        new_assessment: (values: string[]) => t('notification-list.new-assessment', { name: values[0] }),\n        new_user: (values: string[]) => t('notification-list.new-user', { email: values[0] }),\n        child_created: () => t('notification-list.child-created'),\n        kindergarten_created: (values: string[]) => t('notification-list.kindergarten-created', { name: values[0] }),\n    };\n\n    return {\n        getNotification: (name: string, values: string[]) => (options[name] ? options[name](values) : ''),\n    };\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ButtonSecondary.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/SearchInput.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ActionMenuButtonSecondary.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/LabeledContainer.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/OutlinedDateField.tsx",["1359"],"import React from 'react';\nimport { TextField } from '@material-ui/core';\n\ninterface Props {\n    value: string;\n    label: string;\n    onChange: (value: string) => void;\n    disabled?: boolean;\n}\n\nexport function OutlinedDateField({ disabled, value, label, onChange }: Props) {\n    return (\n        <TextField\n            id=\"date\"\n            disabled={disabled}\n            label={label}\n            type=\"date\"\n            fullWidth\n            variant=\"outlined\"\n            InputLabelProps={{\n                shrink: true,\n            }}\n            value={value}\n            onChange={({ target: { value: date } }) => onChange(date)}\n        />\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/SelectList.tsx",["1360"],"import React, { ReactNode } from 'react';\nimport { TextField } from '@material-ui/core';\n\ninterface Props {\n    value: string;\n    label: string;\n    items: ReactNode[];\n    disabled?: boolean;\n    onSelect: (value: string) => void;\n}\n\nexport function SelectList({ value, label, items, disabled, onSelect }: Props) {\n    return (\n        <TextField\n            select\n            label={label}\n            onChange={({ target: { value: v } }) => onSelect(v)}\n            variant=\"outlined\"\n            value={value}\n            fullWidth\n            disabled={disabled}\n            SelectProps={{\n                MenuProps: {\n                    getContentAnchorEl: null,\n                    anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n                },\n            }}\n        >\n            {items}\n        </TextField>\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsListContainer.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenTable/TestResultsTableRow.tsx",["1361"],"import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TableRow, TableCell, IconButton, makeStyles } from '@material-ui/core';\nimport {\n    Edit as EditIcon,\n    KeyboardArrowDown as KeyboardArrowDownIcon,\n    KeyboardArrowUp as KeyboardArrowUpIcon,\n} from '@material-ui/icons';\nimport { KindergartenChildrenTable } from './KindergartenChildrenTable';\nimport { Kindergarten } from '../../../graphql/types';\n\ninterface Props {\n    kindergarten: Kindergarten;\n    onEditClick: (value: Kindergarten) => void;\n}\n\nexport const TestResultsTableRow = ({ kindergarten, onEditClick }: Props) => {\n    const { t } = useTranslation();\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n\n    const { number, name, address, city } = kindergarten;\n\n    return (\n        <>\n            <TableRow className={classes.root}>\n                <TableCell>\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                    {`${t('test-results.kindergarten-prefix')} ${number}`}\n                </TableCell>\n                <TableCell>{name}</TableCell>\n                <TableCell>{`${address}, ${city}`}</TableCell>\n                <TableCell align=\"right\">\n                    <IconButton aria-label=\"edit kindergarten\" size=\"small\" onClick={() => onEditClick(kindergarten)}>\n                        <EditIcon />\n                    </IconButton>\n                </TableCell>\n            </TableRow>\n            <KindergartenChildrenTable open={open} />\n        </>\n    );\n};\n\nconst useStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Tooltip/ArrowTooltip.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/openDialog.tsx",["1362"],"import React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ThemeProvider } from '../theme/ThemeProvider';\n\nexport type Decision<T = {}> = {\n    accepted: boolean;\n} & T;\n\nexport interface ActionDialog<T = {}> {\n    onClose: () => void;\n    makeDecision: (decision: Decision<T>) => void;\n}\n\nexport interface DialogResult<T = {}> {\n    close?: boolean;\n    decision?: Decision<T>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function openDialog<T, G = {}>(Dialog: React.FC<any>, options: T): Promise<DialogResult<G>> {\n    return new Promise((resolve) => {\n        const dialogElement = document.createElement('div');\n        const body = document.querySelector('body') as HTMLBodyElement;\n\n        body.prepend(dialogElement);\n\n        ReactDOM.render(\n            <ThemeProvider>\n                {\n                    <Dialog\n                        {...options}\n                        onClose={() => {\n                            ReactDOM.unmountComponentAtNode(dialogElement);\n                            resolve({ close: true });\n                        }}\n                        makeDecision={(decision: Decision<G>) => {\n                            ReactDOM.unmountComponentAtNode(dialogElement);\n                            resolve({ decision, close: false });\n                        }}\n                    />\n                }\n            </ThemeProvider>,\n            dialogElement,\n        );\n    });\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/CustomContainer.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Assessment/getAssessment.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NotificationsPage/NotificationPageListItem.tsx",["1363"],"import React from 'react';\nimport { TableRow, TableCell, makeStyles, Theme, Typography, IconButton } from '@material-ui/core';\nimport { Notifications } from '@material-ui/icons/';\nimport clsx from 'clsx';\nimport dayjs from '../../localizedMoment';\n\ninterface Props {\n    id: string;\n    text: string;\n    date: Date;\n    isRead: boolean;\n    onClick: (id: string) => void;\n}\n\nexport const NotificationPageListItem = ({ text, date, id, isRead, onClick }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <TableRow\n            classes={{ root: clsx({ [classes.background]: !isRead, [classes.visited]: isRead }) }}\n            onClick={() => !isRead && onClick(id)}\n        >\n            <TableCell classes={{ root: classes.text }}>\n                <IconButton\n                    size=\"small\"\n                    onClick={() => !isRead && onClick(id)}\n                    disabled={isRead}\n                    color=\"secondary\"\n                    classes={{ root: classes.iconButton }}\n                >\n                    <Notifications />\n                </IconButton>\n                <span>\n                    <Typography variant=\"caption\">{text}</Typography>\n                </span>\n            </TableCell>\n            <TableCell classes={{ root: classes.calendarCell }}>\n                <Typography variant=\"caption\">{dayjs(date).fromNow()}</Typography>\n            </TableCell>\n        </TableRow>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    text: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: 8,\n    },\n    visited: {\n        color: '#C4C4C4',\n        background: theme.palette.background.default,\n        transition: 'backgroundColor .3s',\n    },\n    background: {\n        '&:hover': {\n            cursor: 'pointer',\n            background: theme.palette.background.default,\n        },\n    },\n    iconButton: {\n        margin: theme.spacing(0, 1),\n    },\n    calendarCell: {\n        padding: 8,\n    },\n}));\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/AdminSidebar.tsx",["1364"],"import React from 'react';\nimport { makeStyles, createStyles, List, Grid } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { Me } from '../../../graphql/types';\nimport {\n    getAccessMenuItemFactory,\n    getAdminMenuItemFactory,\n    getNewsletterMenuItemFactory,\n    getResultsMenuItemFactory,\n} from './menuItemFactory';\nimport { SingleItem } from './SingleItem';\nimport { SecondaryLabel } from '../../Label';\nimport { MenuDrawer } from './MenuDrawer';\nimport { useBreakpoints } from '../../../queries/useBreakpoints';\nimport { getMenuWidth } from './getMenuWidth';\nimport { LoggedAsItem } from './LoggedAsItem';\nimport { CollapsibleList } from './CollapsibleList';\n\nexport interface Props {\n    user: Me | null;\n    onClick: (link?: string) => void;\n    onClose: () => void;\n    active: string[];\n    open: boolean;\n}\n\nexport const AdminSidebar = ({ onClick, onClose, user, active, open }: Props) => {\n    const { t } = useTranslation();\n    const device = useBreakpoints();\n    const [, innerMargin] = getMenuWidth(device);\n\n    const classes = useStyles({ width: innerMargin });\n    if (!user) return null;\n\n    const unreadedNotificationsCount = user.notifications.filter((n) => !n.isRead).length;\n\n    const ItemFactory = getAdminMenuItemFactory({ active, t });\n    const ResultsItemFactory = getResultsMenuItemFactory({ active, t });\n    const NewsletterItemFactory = getNewsletterMenuItemFactory({ active, t });\n    const AccessItemFactory = getAccessMenuItemFactory({ active, t });\n\n    const MainPageItem = ItemFactory.create({ name: 'main-page' });\n    const { mainItem: ResultsMainItem, subItems: ResultsSubItems } = ResultsItemFactory.create({ active, t });\n    const { mainItem: NewsletterMainItem, subItems: NewsletterSubItems } = NewsletterItemFactory.create({ active, t });\n    const { mainItem: AccessMainItem, subItems: AccessSubItems } = AccessItemFactory.create({ active, t });\n    const NotificationsItem = ItemFactory.create({\n        name: 'notifications',\n        rightIcon: unreadedNotificationsCount > 0 ? <SecondaryLabel label={unreadedNotificationsCount} /> : undefined,\n    });\n    const SettingsItem = ItemFactory.create({ name: 'settings' });\n    const LogoutItem = ItemFactory.create({ name: 'logout' });\n    const CreateBlogArticleItem = ItemFactory.create({ name: 'create-blog-article' });\n    const TestsItem = ItemFactory.create({ name: 'tests' });\n    const AgreementsItem = ItemFactory.create({ name: 'agreements' });\n\n    const drawer = (\n        <Grid\n            container\n            direction=\"column\"\n            justify={device === 'DESKTOP' ? 'space-between' : 'flex-start'}\n            classes={{ root: classes.container }}\n        >\n            <Grid item>\n                <List>\n                    <LoggedAsItem name={user.mail} />\n                    <SingleItem item={MainPageItem} onClick={onClick} />\n                    <CollapsibleList mainItem={ResultsMainItem} subItems={ResultsSubItems} onClick={onClick} />\n                    <CollapsibleList mainItem={NewsletterMainItem} subItems={NewsletterSubItems} onClick={onClick} />\n                    <CollapsibleList mainItem={AccessMainItem} subItems={AccessSubItems} onClick={onClick} />\n                    <SingleItem item={AgreementsItem} onClick={onClick} />\n                    <SingleItem item={CreateBlogArticleItem} onClick={onClick} />\n                    <SingleItem item={NotificationsItem} onClick={onClick} />\n                    <SingleItem item={TestsItem} onClick={onClick} />\n                    <SingleItem item={SettingsItem} onClick={onClick} />\n                </List>\n            </Grid>\n            <Grid item>\n                <SingleItem item={LogoutItem} onClick={onClick} />\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <div className={classes.drawer}>\n            <MenuDrawer device={device} onClose={onClose} open={open}>\n                {drawer}\n            </MenuDrawer>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        drawer: {\n            width: ({ width }: { width: number }) => width,\n            flexShrink: 0,\n        },\n        container: {\n            display: 'flex',\n            flexWrap: 'nowrap',\n            height: '100%',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/InstructorSidebar.tsx",["1365"],"import React from 'react';\nimport { makeStyles, createStyles, List, Grid, Divider } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { Me } from '../../../graphql/types';\nimport { CollapsibleList } from './CollapsibleList';\nimport { getBlogMenuItemFactory, getInstructorMenuItemFactory } from './menuItemFactory';\nimport { SingleItem } from './SingleItem';\nimport { MenuDrawer } from './MenuDrawer';\nimport { useBreakpoints } from '../../../queries/useBreakpoints';\nimport { getMenuWidth } from './getMenuWidth';\nimport { LabeledHeader } from './LabeledHeader';\nimport { SecondaryLabel } from '../../Label';\n\nexport interface Props {\n    user: Me | null;\n    onClick: (link?: string) => void;\n    onClose: () => void;\n    active: string[];\n    open: boolean;\n}\n\nexport const InstructorSidebar = ({ onClick, onClose, user, active, open }: Props) => {\n    const device = useBreakpoints();\n\n    const [, innerMargin] = getMenuWidth(device);\n    const classes = useStyles({ width: innerMargin });\n    const { t } = useTranslation();\n\n    if (!user) return null;\n\n    const unreadedNotificationsCount = user.notifications.filter((n) => !n.isRead).length;\n\n    const ItemFactory = getInstructorMenuItemFactory({ active, t });\n    const BlogItemFactory = getBlogMenuItemFactory({ active, t });\n\n    const MainPageItem = ItemFactory.create({ name: 'add-results' });\n    const SettingsItem = ItemFactory.create({ name: 'settings' });\n    const LogoutItem = ItemFactory.create({ name: 'logout' });\n    const BlogItem = BlogItemFactory.create({ active, t });\n    const NotificationsItem = ItemFactory.create({\n        name: 'notifications',\n        rightIcon: unreadedNotificationsCount ? <SecondaryLabel label={unreadedNotificationsCount} /> : undefined,\n    });\n\n    const drawer = (\n        <Grid\n            container\n            direction=\"column\"\n            justify={device === 'DESKTOP' ? 'space-between' : 'flex-start'}\n            className={classes.container}\n        >\n            <Grid item>\n                <List>\n                    <SingleItem item={MainPageItem} onClick={onClick} />\n                    <Divider />\n                    <CollapsibleList mainItem={BlogItem.mainItem} subItems={BlogItem.subItems} onClick={onClick} />\n                    <SingleItem item={NotificationsItem} onClick={onClick} />\n                    <SingleItem item={SettingsItem} onClick={onClick} />\n                </List>\n            </Grid>\n            <Grid item>\n                <SingleItem item={LogoutItem} onClick={onClick} />\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <div className={classes.drawer}>\n            <MenuDrawer device={device} onClose={onClose} open={open}>\n                <>\n                    {device !== 'DESKTOP' && <LabeledHeader />}\n                    {drawer}\n                </>\n            </MenuDrawer>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'nowrap',\n            height: '100%',\n        },\n        drawer: {\n            flexShrink: 0,\n            width: ({ width }: { width: number }) => width,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/ParentSidebar.tsx",["1366"],"import React from 'react';\nimport { makeStyles, createStyles, List, Grid } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { Me } from '../../../graphql/types';\nimport { CollapsibleList } from './CollapsibleList';\nimport { getParentMenuItemFactory, getChildMenuItemFactory, getBlogMenuItemFactory } from './menuItemFactory';\nimport { SingleItem } from './SingleItem';\nimport { SecondaryLabel } from '../../Label';\nimport { MenuDrawer } from './MenuDrawer';\nimport { useBreakpoints } from '../../../queries/useBreakpoints';\nimport { getMenuWidth } from './getMenuWidth';\nimport { LabeledHeader } from './LabeledHeader';\n\nexport interface Props {\n    user: Me | null;\n    onClick: (link?: string) => void;\n    onClose: () => void;\n    active: string[];\n    open: boolean;\n}\n\nexport const ParentSidebar = ({ onClick, onClose, user, active, open }: Props) => {\n    const device = useBreakpoints();\n\n    const [, innerMargin] = getMenuWidth(device);\n    const classes = useStyles({ width: innerMargin });\n    const { t } = useTranslation();\n\n    if (!user) return null;\n\n    const unreadedNotificationsCount = user.notifications.filter((n) => !n.isRead).length;\n\n    const ItemFactory = getParentMenuItemFactory({ active, t });\n    const BlogItemFactory = getBlogMenuItemFactory({ active, t });\n\n    const MainPageItem = ItemFactory.create({ name: 'main-page' });\n    const NotificationsItem = ItemFactory.create({\n        name: 'notifications',\n        rightIcon: unreadedNotificationsCount ? <SecondaryLabel label={unreadedNotificationsCount} /> : undefined,\n    });\n    const SettingsItem = ItemFactory.create({ name: 'settings' });\n    const LogoutItem = ItemFactory.create({ name: 'logout' });\n    const BlogItem = BlogItemFactory.create({ active, t });\n    const AgreementsItem = ItemFactory.create({ name: 'agreements' });\n\n    const drawer = (\n        <Grid\n            container\n            direction=\"column\"\n            justify={device === 'DESKTOP' ? 'space-between' : 'flex-start'}\n            className={classes.container}\n        >\n            <Grid item>\n                <List>\n                    <SingleItem item={MainPageItem} onClick={onClick} />\n                    {user.children.map((child) => {\n                        const ChildItemFactory = getChildMenuItemFactory({ active, t });\n\n                        const { mainItem, subItems } = ChildItemFactory.create({ child });\n\n                        return (\n                            <CollapsibleList\n                                key={child._id}\n                                mainItem={mainItem}\n                                subItems={subItems}\n                                onClick={onClick}\n                            />\n                        );\n                    })}\n                    <CollapsibleList mainItem={BlogItem.mainItem} subItems={BlogItem.subItems} onClick={onClick} />\n                    <SingleItem item={AgreementsItem} onClick={onClick} />\n                    <SingleItem item={NotificationsItem} onClick={onClick} />\n                    <SingleItem item={SettingsItem} onClick={onClick} />\n                </List>\n            </Grid>\n            <Grid item>\n                <SingleItem item={LogoutItem} onClick={onClick} />\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <div className={classes.drawer}>\n            <MenuDrawer device={device} onClose={onClose} open={open}>\n                <>\n                    {device !== 'DESKTOP' && <LabeledHeader />}\n                    {drawer}\n                </>\n            </MenuDrawer>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'nowrap',\n            height: '100%',\n        },\n        drawer: {\n            flexShrink: 0,\n            width: ({ width }: { width: number }) => width,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Modal/TwoActionsModal.tsx",["1367","1368","1369","1370"],"import React, { FC } from 'react';\nimport { Dialog, DialogActions, DialogContent, makeStyles, createStyles } from '@material-ui/core';\nimport { ButtonDefault } from '../Button/ButtonDefault';\nimport { ButtonPrimary } from '../Button/ButtonPrimary';\n\ninterface Props {\n    isOpen: boolean;\n    onClose: () => void;\n    upperButtonOnClick: (event: any) => void;\n    upperButtonText: string;\n    lowerButtonOnClick: (event: any) => void;\n    lowerButtonText: string;\n}\n\nexport const TwoActionsModal: FC<Props> = ({\n    isOpen,\n    onClose,\n    children,\n    upperButtonOnClick,\n    lowerButtonOnClick,\n    upperButtonText,\n    lowerButtonText,\n}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Dialog maxWidth=\"md\" open={isOpen} onClose={onClose}>\n                <DialogContent>{children}</DialogContent>\n                <DialogActions>\n                    <div className={classes.buttonsWrapper}>\n                        <ButtonDefault className={classes.button} variant=\"text\" onClick={lowerButtonOnClick}>\n                            {lowerButtonText}\n                        </ButtonDefault>\n                        <ButtonPrimary className={classes.button} variant=\"text\" onClick={upperButtonOnClick}>\n                            {upperButtonText}\n                        </ButtonPrimary>\n                    </div>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        buttonsWrapper: {\n            display: 'flex',\n            justifyItems: 'center',\n            '& > :not(:first-child)': {\n                marginLeft: 0,\n            },\n        },\n        button: {\n            maxWidth: 264,\n            padding: '8px',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Modal/BasicModal.tsx",["1371","1372","1373"],"import React, { FC } from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogProps, makeStyles, Theme } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { ButtonPrimary, ButtonSecondary, ButtonDefault } from '../Button';\n\ninterface Props {\n    isOpen: boolean;\n    actionName: string;\n    onAction: () => void;\n    onClose?: (e: any) => void;\n    closeButtonText?: string;\n    isCancelButtonVisible?: boolean;\n    isActionButtonSecondary?: boolean;\n    dialogProps?: Partial<DialogProps>;\n}\n\nexport const BasicModal: FC<Props> = ({\n    isOpen,\n    actionName,\n    onAction,\n    onClose,\n    children,\n    closeButtonText,\n    isCancelButtonVisible,\n    isActionButtonSecondary,\n    dialogProps,\n}) => {\n    const { t } = useTranslation();\n\n    const ActionButton = isActionButtonSecondary ? ButtonSecondary : ButtonPrimary;\n    const classes = useStyles();\n\n    return (\n        <Dialog maxWidth=\"md\" open={isOpen} classes={{ paper: classes.dialogPaper }} onClose={onClose} {...dialogProps}>\n            <DialogContent className={classes.contentScrollbar}>{children}</DialogContent>\n            <DialogActions>\n                {isCancelButtonVisible && (\n                    <ButtonDefault variant=\"text\" onClick={onClose} color=\"inherit\">\n                        {closeButtonText || t('add-child-modal.cancel')}\n                    </ButtonDefault>\n                )}\n                <ActionButton variant=\"text\" onClick={onAction}>\n                    {actionName}\n                </ActionButton>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    dialogPaper: {\n        maxHeight: '80vh',\n    },\n    contentScrollbar: {\n        overflowY: 'unset',\n    },\n}));\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Assessment/createAssessment.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Assessment/updateAssessment.tsx",["1374","1375"],"import { gql, useMutation, FetchResult } from '@apollo/client';\nimport { AssessmentResponse } from '../../queries/Assessment/getAssessment';\n\nexport type UpdatedAssessmentInput = {\n    title: string;\n    startDate: string;\n    endDate: string;\n    status: string;\n    isOutdated: boolean;\n    isDeleted: boolean;\n    kindergartens: Array<{ kindergartenId: string; instructorId?: string | null }>;\n};\n\ninterface UpdateAssessment {\n    updateAssessment: (\n        id: string,\n        assessment: Partial<UpdatedAssessmentInput>,\n    ) => Promise<FetchResult<AssessmentResponse>>;\n    isUpdatePending: boolean;\n}\n\nexport const UPDATE_ASSESSMENT = gql`\n    mutation UpdateAssessment($id: String!, $assessment: UpdatedAssessmentInput!) {\n        updateAssessment(id: $id, assessment: $assessment) {\n            _id\n            isOutdated\n            isDeleted\n            title\n            startDate\n            endDate\n            status\n            firstMeasurementStatus\n            lastMeasurementStatus\n            firstMeasurementStartDate\n            firstMeasurementEndDate\n            lastMeasurementStartDate\n            lastMeasurementEndDate\n            kindergartens {\n                kindergarten {\n                    _id\n                    name\n                    number\n                }\n                instructor {\n                    _id\n                    mail\n                }\n            }\n        }\n    }\n`;\n\nexport function useUpdateAssessment(): UpdateAssessment {\n    const [updateAssessment, { loading }] = useMutation(UPDATE_ASSESSMENT);\n\n    return {\n        updateAssessment: (id: string, updatedAssessment) => {\n            return updateAssessment({\n                variables: { id, assessment: updatedAssessment },\n            });\n        },\n        isUpdatePending: loading,\n    };\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageChildren/HomePageChildCard.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageAddChildButton/HomePageAddChildButton.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ButtonDefault.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ButtonPrimary.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationForm.tsx",["1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444"],"import React, { ChangeEvent, FormEvent, useState, useEffect } from 'react';\nimport { Stepper, Step, StepLabel, StepContent, Typography, Container } from '@material-ui/core/';\nimport { useTranslation } from 'react-i18next';\nimport clsx from 'clsx';\nimport { openAlertDialog } from '../../../components/AlertDialog';\nimport { load } from '../../../utils/load';\nimport { createUser } from '../../../queries/userQueries';\nimport { passwordStrengthTest } from '../passwordStrengthTest';\nimport { useStyles } from './styles';\nimport { RegistrationEmail } from './RegistrationEmail';\nimport { RegistrationAgreement } from './RegistrationAgreement';\nimport { RegistrationPassword } from './RegistrationPassword';\nimport { RegistrationFeedback } from './RegistrationFeedback';\nimport { RegistrationCode } from './RegistrationCode';\nimport { LanguageSelector } from './LanguageSelector';\n\nimport { RegisterForm } from './types';\nimport { Agreement } from '../../../graphql/types';\nimport { getAgreements } from '../../../graphql/agreementRepository';\n\nconst initialState: RegisterForm = {\n    code: '',\n    email: '',\n    password: '',\n    passwordConfirm: '',\n};\n\nexport const RegistrationForm = () => {\n    const [form, setForm] = useState(initialState);\n    const [activeStep, setActiveStep] = useState(0);\n    const [agreements, setAgreements] = useState<Agreement[]>([]);\n    const { code, email, password, passwordConfirm } = form;\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        getAgreements().then(({ data }) => setAgreements(data!.agreements));\n    }, []);\n\n    const steps = [\n        t('registration-page.enter-code'),\n        t('e-mail'),\n        t('registration-page.agreements-and-regulations'),\n        t('registration-page.create-password'),\n        t('registration-page.confirmation'),\n    ];\n\n    const getStepContent = (step: number) => {\n        switch (step) {\n            case 0:\n                return (\n                    <RegistrationCode\n                        handleChange={handleChange}\n                        handleNext={handleNext}\n                        code={code}\n                        classForm={classes.formItem}\n                        classButton={classes.buttonWrapper}\n                        classNextBtn={classes.nextButton}\n                    />\n                );\n            case 1:\n                return (\n                    <RegistrationEmail\n                        handleChange={handleChange}\n                        handleNext={handleNext}\n                        handleBack={handleBack}\n                        email={email}\n                        form={form}\n                        classForm={classes.formItem}\n                        classButton={clsx({ [classes.buttonWrapper]: true, emailContent: activeStep === 0 })}\n                        classNextBtn={classes.nextButton}\n                    />\n                );\n            case 2:\n                return (\n                    <RegistrationAgreement\n                        handleBack={handleBack}\n                        handleNext={handleNext}\n                        classButton={classes.buttonWrapper}\n                        classNextBtn={classes.nextButton}\n                        agreementContainer={classes.agreementContainer}\n                        agreementHeader={classes.agreementHeader}\n                        agreementMoreBtn={classes.agreementMoreBtn}\n                        agreementCheckboxHeader={classes.agreementCheckboxHeader}\n                        agreementCheckboxWrapper={classes.agreementCheckboxWrapper}\n                        agreementText={classes.agreementText}\n                        agreementLink={classes.agreementLink}\n                        agreementModal={classes.agreementModal}\n                        agreementPanel={classes.agreementPanel}\n                        agreementCheckbox={classes.agreementCheckbox}\n                        checkboxContent={classes.checkboxContent}\n                        agreements={agreements}\n                    />\n                );\n            case 3:\n                return (\n                    <RegistrationPassword\n                        handleChange={handleChange}\n                        handleBack={handleBack}\n                        activeStep={activeStep}\n                        password={password}\n                        passwordConfirm={passwordConfirm}\n                        classForm={classes.formItem}\n                        classButton={classes.buttonWrapper}\n                        classNextBtn={classes.nextButton}\n                        classFormItem={classes.formItem}\n                    />\n                );\n            case 4:\n                return (\n                    <RegistrationFeedback\n                        classLink={classes.goToHomepageLink}\n                        classHeader={clsx({ [classes.loginHeader]: true, confirmation: activeStep === 3 })}\n                        classWrapper={classes.confirmWrapper}\n                    />\n                );\n            default:\n                return null;\n        }\n    };\n\n    const handleNext = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    const handleBack = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>): void => {\n        event.preventDefault();\n        if (!passwordStrengthTest(password)) {\n            openAlertDialog({\n                type: 'error',\n                description: t('registration-page.password-not-strong'),\n            });\n        } else if (password !== passwordConfirm) {\n            openAlertDialog({\n                type: 'error',\n                description: t('registration-page.password-mismatch'),\n            });\n        } else {\n            load(createUser({ mail: email, password, keyCode: code }))\n                .then(() => {\n                    handleNext();\n                })\n                .catch((err) => {\n                    openAlertDialog({\n                        type: 'error',\n                        description: err.message,\n                    });\n                });\n        }\n    };\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n        const { id, value } = event.target;\n        setForm((prevForm) => ({ ...prevForm, [id]: value }));\n    };\n\n    return (\n        <div className={clsx({ [classes.container]: true, agreements: activeStep === 2 })}>\n            <form className={classes.form} autoComplete=\"off\" onSubmit={handleSubmit}>\n                {activeStep !== 4 && (\n                    <Container className={classes.headerContainer}>\n                        <Typography variant=\"h4\">\n                            <div className={classes.registrationHeader}>{t('registration-page.register')}</div>\n                        </Typography>\n                        <LanguageSelector />\n                    </Container>\n                )}\n                <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\n                    {steps.map((step, idx) => (\n                        <Step key={step} style={{ border: 'none' }}>\n                            <StepLabel>{step}</StepLabel>\n                            <StepContent>{getStepContent(idx)}</StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n            </form>\n        </div>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/getMenuWidth.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageInfo/HomePageInfo.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Button/ButtonBase.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageArticles/HomePageArticles.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsItem.tsx",["1445"],"import React from 'react';\nimport { TableRow, TableCell, IconButton, makeStyles, Theme, Typography, fade, Tooltip } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport ForwardIcon from '@material-ui/icons/Forward';\nimport { useTranslation } from 'react-i18next';\n\nimport { openSnackbar } from '../../components/Snackbar/openSnackbar';\nimport { openAdminSettingsDeleteParent } from './AdminSettingsDeleteParentModal';\nimport { openAdminSettingsEditModal } from '../../components/ChilModals/EditChildModal';\nimport { User } from '../../graphql/types';\nimport { useKindergartens } from '../../operations/queries/Kindergartens/getKindergartens';\n\ninterface AdminSettingsItemProps {\n    parent: User;\n}\n\nexport function AdminSettingsItem({ parent }: AdminSettingsItemProps) {\n    const classes = useStyles();\n\n    const { t } = useTranslation();\n    const { kindergartenList } = useKindergartens();\n    const childrenData = parent.children.map((c) => `${c.firstname} ${c.lastname}`).join(', ');\n\n    const editIconTooltip = t('parent-settings.button-icon-edit-tooltip');\n    const changeIconTooltip = t('parent-settings.button-icon-change-tooltip');\n    const deleteIconTooltip = t('parent-settings.button-icon-delete-tooltip');\n\n    return (\n        <TableRow>\n            <TableCell className={classes.parentEmailColumn}>\n                <Typography variant=\"body1\">{parent.mail}</Typography>\n            </TableCell>\n            <TableCell className={classes.secondColumn}>\n                <Typography variant=\"body1\">{childrenData}</Typography>\n\n                <div className={classes.actionButtons}>\n                    <Tooltip title={editIconTooltip}>\n                        <IconButton\n                            className={classes.editButton}\n                            onClick={() => {\n                                openAdminSettingsEditModal({\n                                    preventClose: false,\n                                    isCancelButtonVisible: true,\n                                    parent,\n                                    kindergartens: kindergartenList,\n                                }).then((result) => {\n                                    if (!result.close)\n                                        openSnackbar({\n                                            text: t('parent-settings.modal-edit-account.success-message'),\n                                        });\n                                });\n                            }}\n                        >\n                            <Edit />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title={changeIconTooltip}>\n                        <IconButton\n                            aria-label=\"edit\"\n                            className={classes.editButton}\n                            onClick={() => {\n                                console.log('edit');\n                            }}\n                        >\n                            <ForwardIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title={deleteIconTooltip}>\n                        <IconButton\n                            aria-label=\"delete\"\n                            className={classes.deleteButton}\n                            onClick={() => {\n                                openAdminSettingsDeleteParent({\n                                    preventClose: false,\n                                    isCancelButtonVisible: true,\n                                    parent,\n                                }).then((result) => {\n                                    if (!result.close)\n                                        openSnackbar({\n                                            text: t('parent-settings.success-message', parent.mail),\n                                        });\n                                });\n                            }}\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    editButton: {\n        '&:hover': {\n            color: theme.palette.primary.main,\n            backgroundColor: fade(theme.palette.primary.main, 0.2),\n        },\n    },\n    deleteButton: {\n        '&:hover': {\n            color: theme.palette.error.main,\n            backgroundColor: fade(theme.palette.error.main, 0.2),\n        },\n    },\n    parentEmailColumn: {\n        width: '20%',\n        [theme.breakpoints.down('xs')]: {\n            padding: theme.spacing(0, 0, 0, 0.6),\n        },\n    },\n    secondColumn: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: theme.spacing(2, 0),\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n            padding: theme.spacing(1, 0),\n        },\n    },\n\n    actionButtons: {\n        display: 'flex',\n        justifyItems: 'right',\n    },\n}));\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/TestResultsPage/KindergartenTable/KindergartenChildrenTable.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/CollapsibleList.tsx",["1446"],"import React, { useState } from 'react';\nimport { Collapse, List, makeStyles } from '@material-ui/core';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport { SingleItemProps, SingleItem } from './SingleItem';\n\ninterface Props {\n    mainItem: SingleItemProps;\n    subItems: SingleItemProps[];\n    onClick: (link: string) => void;\n}\n\nexport function CollapsibleList({ mainItem, subItems, onClick }: Props) {\n    const [isOpen, setIsOpen] = useState(mainItem.active);\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <SingleItem\n                item={{\n                    name: mainItem.name,\n                    icon: mainItem.icon,\n                    rightIcon: isOpen ? <ExpandLess /> : <ExpandMore />,\n                    active: mainItem.active,\n                }}\n                onClick={() => setIsOpen((prev) => !prev)}\n                grayed\n            />\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {subItems.map(({ name, icon, link, active }) => (\n                        <SingleItem\n                            key={name}\n                            item={{ name, icon, link, active }}\n                            onClick={() => link && onClick(link)}\n                            leftPadding\n                            grayed\n                        />\n                    ))}\n                </List>\n            </Collapse>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: 4,\n    },\n});\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Label.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/LabeledHeader.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/MenuDrawer.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/SingleItem.tsx",["1447"],"import React from 'react';\nimport { ListItem, ListItemIcon, ListItemText, makeStyles, Theme, createStyles, fade } from '@material-ui/core';\nimport clsx from 'clsx';\n\nexport interface SingleItemProps {\n    name: string;\n    icon: React.ReactNode;\n    link?: string;\n    rightIcon?: React.ReactNode;\n    active?: boolean;\n}\n\ninterface Props {\n    item: SingleItemProps;\n    onClick: (link?: string) => void;\n    leftPadding?: boolean;\n    grayed?: boolean;\n}\n\ninterface StyleProps {\n    leftPadding?: boolean;\n}\n\nexport function SingleItem({ item, leftPadding, grayed, onClick }: Props) {\n    const classes = useStyles({ leftPadding });\n\n    return (\n        <ListItem\n            button\n            key={item.name}\n            onClick={() => onClick(item.link)}\n            classes={{\n                button: clsx({ [classes.button]: true, [classes.grayed]: grayed, [classes.activeButton]: item.active }),\n                gutters: classes.rootButton,\n            }}\n        >\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.name} />\n            {item.rightIcon}\n        </ListItem>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        activeButton: {\n            background: `${fade(theme.palette.primary.main, 0.2)} !important`,\n        },\n        button: {\n            '&:hover': {\n                background: fade(theme.palette.primary.main, 0.2),\n            },\n        },\n        rootButton: {\n            paddingLeft: (props: StyleProps) => theme.spacing(props.leftPadding ? 3 : 2),\n        },\n        grayed: {\n            background: theme.palette.grey[100],\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Users/getUsersByRole.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/menuItemFactory.tsx",["1448","1449"],"import React from 'react';\nimport { TFunction } from 'i18next';\nimport {\n    Assessment,\n    Notes,\n    Home,\n    LibraryBooks,\n    Eco,\n    SportsBasketball,\n    Notifications,\n    Build,\n    PowerSettingsNew,\n    Face,\n    StarBorder,\n    Fingerprint,\n    ThumbUp,\n    AssignmentTurnedIn,\n    ViewModule,\n    Archive,\n    Message,\n    AccessAlarm,\n    Ballot,\n    DynamicFeed,\n    Email,\n    PeopleAlt,\n    PersonAdd,\n    Security,\n} from '@material-ui/icons';\n\nimport { Child } from '../../../graphql/types';\nimport { SingleItemProps } from './SingleItem';\nimport { ChildAvatar, Icon } from './Icon';\n\ninterface ChildMenuItemFactoryProps {\n    child: Child;\n    t: TFunction;\n    active: string[];\n}\n\ninterface MenuItemFactoryResult {\n    mainItem: SingleItemProps;\n    subItems: SingleItemProps[];\n}\n\ninterface MenuItemFactoryProps {\n    name: string;\n    t: TFunction;\n    active: string[];\n    rightIcon?: React.ReactNode;\n}\n\ninterface CollapsibleMenuItemFactoryProps {\n    t: TFunction;\n    active: string[];\n}\n\ntype CollapsibleItem = { mainItem: SingleItemProps; subItems: SingleItemProps[] };\n\ninterface ItemFactory {\n    create: (options: Pick<MenuItemFactoryProps, 'name' | 'rightIcon'>) => SingleItemProps;\n}\n\ninterface CollapsibleItemFactory<T> {\n    create: (options: T) => CollapsibleItem;\n}\n\nexport function getParentMenuItemFactory({ active, t }: Pick<MenuItemFactoryProps, 'active' | 't'>): ItemFactory {\n    return {\n        create: ({ name, rightIcon }: Pick<MenuItemFactoryProps, 'name' | 'rightIcon'>) =>\n            getParentMenuItem({ active, t, name, rightIcon }),\n    };\n}\n\nexport function getAdminMenuItemFactory({ active, t }: Pick<MenuItemFactoryProps, 'active' | 't'>): ItemFactory {\n    return {\n        create: ({ name, rightIcon }: Pick<MenuItemFactoryProps, 'name' | 'rightIcon'>) =>\n            getAdminMenuItem({ active, t, name, rightIcon }),\n    };\n}\n\nexport function getInstructorMenuItemFactory({ active, t }: Pick<MenuItemFactoryProps, 'active' | 't'>): ItemFactory {\n    return {\n        create: ({ name, rightIcon }: Pick<MenuItemFactoryProps, 'name' | 'rightIcon'>) =>\n            getInstructorMenuItem({ active, t, name, rightIcon }),\n    };\n}\n\nexport function getChildMenuItemFactory({\n    active,\n    t,\n}: Pick<MenuItemFactoryProps, 'active' | 't'>): CollapsibleItemFactory<Pick<ChildMenuItemFactoryProps, 'child'>> {\n    return { create: ({ child }) => getChildMenuItem({ active, t, child }) };\n}\n\nexport function getBlogMenuItemFactory({\n    active,\n    t,\n}: Pick<MenuItemFactoryProps, 'active' | 't'>): CollapsibleItemFactory<{}> {\n    return {\n        create: () => getBlogMenuItem({ active, t }),\n    };\n}\n\nexport function getResultsMenuItemFactory({\n    active,\n    t,\n}: Pick<MenuItemFactoryProps, 'active' | 't'>): CollapsibleItemFactory<{}> {\n    return {\n        create: () => getResultsMenuItem({ active, t }),\n    };\n}\n\nexport function getNewsletterMenuItemFactory({\n    active,\n    t,\n}: Pick<MenuItemFactoryProps, 'active' | 't'>): CollapsibleItemFactory<{}> {\n    return {\n        create: () => getNewsletterMenuItem({ active, t }),\n    };\n}\n\nexport function getAccessMenuItemFactory({\n    active,\n    t,\n}: Pick<MenuItemFactoryProps, 'active' | 't'>): CollapsibleItemFactory<{}> {\n    return {\n        create: () => getAccessMenuItem({ active, t }),\n    };\n}\n\nfunction getChildMenuItem({ child, active, t }: ChildMenuItemFactoryProps): MenuItemFactoryResult {\n    const mainItemAvatar = <ChildAvatar sex={child.sex} />;\n\n    const mainItem = {\n        icon: mainItemAvatar,\n        name: child.firstname,\n        active: active.includes(child.firstname),\n    };\n\n    const subItems: SingleItemProps[] = [\n        {\n            icon: <Icon icon={<Assessment />} />,\n            name: t('parent-menu.child.results'),\n            link: `/parent/child/${child._id}/results`,\n            active: active.includes(`/parent/child/${child._id}/results`),\n        },\n        {\n            icon: <Icon icon={<ThumbUp />} />,\n            name: t('parent-menu.child.recommendations'),\n            link: `/parent/child/${child._id}/recommendations`,\n            active: active.includes(`/parent/child/${child._id}/recommendations`),\n        },\n        {\n            icon: <Icon icon={<Notes />} />,\n            name: t('parent-menu.child.tests-information'),\n            link: `/parent/child/${child._id}/tests-information`,\n            active: active.includes(`/parent/child/${child._id}/tests-information`),\n        },\n        {\n            icon: <Icon icon={<Fingerprint />} />,\n            name: t('parent-menu.child.details'),\n            link: `/parent/child/${child._id}/details`,\n            active: active.includes(`/parent/child/${child._id}/details`),\n        },\n    ];\n\n    return { mainItem, subItems };\n}\n\nfunction getBlogMenuItem({ active, t }: CollapsibleMenuItemFactoryProps): MenuItemFactoryResult {\n    const mainItem = {\n        icon: <Icon icon={<LibraryBooks />} />,\n        name: t('parent-menu.blog'),\n        link: '/parent/blog/all',\n        active: active.includes('parent-menu.blog'),\n    };\n\n    const subItems: SingleItemProps[] = [\n        {\n            icon: <Icon icon={<ViewModule />} />,\n            name: t('blog-categories.all'),\n            link: '/parent/blog/all',\n            active: active.includes('blog-categories.all'),\n        },\n        {\n            icon: <Icon icon={<Eco />} />,\n            name: t('blog-categories.food'),\n            link: '/parent/blog/food',\n            active: active.includes('blog-categories.food'),\n        },\n        {\n            icon: <Icon icon={<SportsBasketball />} />,\n            name: t('blog-categories.activity'),\n            link: '/parent/blog/activity',\n            active: active.includes('blog-categories.activity'),\n        },\n        {\n            icon: <Icon icon={<Face />} />,\n            name: t('blog-categories.emotions'),\n            link: '/parent/blog/emotions',\n            active: active.includes('blog-categories.emotions'),\n        },\n        {\n            icon: <Icon icon={<StarBorder />} />,\n            name: t('blog-categories.other'),\n            link: '/parent/blog/other',\n            active: active.includes('blog-categories.other'),\n        },\n    ];\n\n    return { mainItem, subItems };\n}\n\nfunction getParentMenuItem({ name, rightIcon, active, t }: MenuItemFactoryProps): SingleItemProps {\n    const MainPageItem = {\n        name: 'parent-menu.home',\n        link: '/parent',\n        icon: <Icon icon={<Home />} />,\n    };\n\n    const NotificationsItem = {\n        name: 'parent-menu.notifications',\n        link: '/parent/notifications',\n        icon: <Icon icon={<Notifications />} />,\n        rightIcon,\n    };\n\n    const SettingsItem = {\n        name: 'parent-menu.settings',\n        link: '/parent/settings',\n        icon: <Icon icon={<Build />} />,\n    };\n\n    const LogoutItem = {\n        name: 'parent-menu.logout',\n        link: 'logout',\n        icon: <Icon icon={<PowerSettingsNew />} />,\n    };\n\n    const AgreementsItem = {\n        name: 'parent-menu.agreements',\n        link: '/parent/agreements',\n        icon: <Icon icon={<AssignmentTurnedIn />} />,\n    };\n\n    const options: { [index: string]: SingleItemProps } = {\n        'main-page': MainPageItem,\n        notifications: NotificationsItem,\n        settings: SettingsItem,\n        logout: LogoutItem,\n        agreements: AgreementsItem,\n    };\n\n    const item = options[name];\n\n    if (active.includes(item.name)) item.active = true;\n\n    item.name = t(item.name);\n\n    return item;\n}\n\nfunction getResultsMenuItem({ active, t }: CollapsibleMenuItemFactoryProps): MenuItemFactoryResult {\n    const mainItem = {\n        icon: <Icon icon={<Assessment />} />,\n        name: t('admin-menu.results.title'),\n        link: '/admin/tests',\n        active: active.includes('admin-menu.results.title'),\n    };\n\n    const subItems: SingleItemProps[] = [\n        {\n            icon: <Icon icon={<Ballot />} />,\n            name: t('admin-menu.results.table'),\n            link: '/admin/tests',\n            active: active.includes('admin-menu.results.table'),\n        },\n        {\n            icon: <Icon icon={<DynamicFeed />} />,\n            name: t('admin-menu.results.advice-and-recommendations'),\n            link: '/admin/recommendations',\n            active: active.includes('admin-menu.results.advice-and-recommendations'),\n        },\n    ];\n\n    return { mainItem, subItems };\n}\n\nfunction getNewsletterMenuItem({ active, t }: CollapsibleMenuItemFactoryProps): MenuItemFactoryResult {\n    const mainItem = {\n        icon: <Icon icon={<Message />} />,\n        name: t('admin-menu.newsletter.title'),\n        link: '/admin/newsletter',\n        active: active.includes('admin-menu.newsletter.title'),\n    };\n\n    const subItems: SingleItemProps[] = [\n        {\n            icon: <Icon icon={<Email />} />,\n            name: t('admin-menu.newsletter.new-message'),\n            link: '/admin/newsletter',\n            active: active.includes('admin-menu.newsletter.new-message'),\n        },\n        {\n            icon: <Icon icon={<Archive />} />,\n            name: t('admin-menu.newsletter.archive'),\n            link: '/admin/archive',\n            active: active.includes('admin-menu.newsletter.archive'),\n        },\n    ];\n\n    return { mainItem, subItems };\n}\n\nfunction getAccessMenuItem({ active, t }: CollapsibleMenuItemFactoryProps): MenuItemFactoryResult {\n    const mainItem = {\n        icon: <Icon icon={<PeopleAlt />} />,\n        name: t('admin-menu.access.title'),\n        link: '/admin/instructors',\n        active: active.includes('admin-menu.access.title'),\n    };\n\n    const subItems: SingleItemProps[] = [\n        {\n            icon: <Icon icon={<PersonAdd />} />,\n            name: t('admin-menu.access.instructors'),\n            link: '/admin/instructors',\n            active: active.includes('admin-menu.access.instructors'),\n        },\n        {\n            icon: <Icon icon={<Security />} />,\n            name: t('admin-menu.access.keycodes'),\n            link: '/admin/keycodes',\n            active: active.includes('admin-menu.access.keycodes'),\n        },\n    ];\n\n    return { mainItem, subItems };\n}\n\nfunction getAdminMenuItem({ name, rightIcon, active, t }: MenuItemFactoryProps): SingleItemProps {\n    const MainPageItem = {\n        name: 'admin-menu.home',\n        link: '/admin',\n        icon: <Icon icon={<Home />} />,\n    };\n\n    const ResultsItem = {\n        name: 'admin-menu.results',\n        link: '/admin/tests',\n        icon: <Icon icon={<Assessment />} />,\n        rightIcon,\n    };\n\n    const NotificationsItem = {\n        name: 'admin-menu.notifications',\n        link: '/admin/notifications',\n        icon: <Icon icon={<Notifications />} />,\n        rightIcon,\n    };\n\n    const CreateBlogArticleItem = {\n        name: 'admin-menu.create-blog-article',\n        link: '/admin/article/create',\n        icon: <Icon icon={<LibraryBooks />} />,\n    };\n\n    const SettingsItem = {\n        name: 'admin-menu.settings.title',\n        link: '/admin/settings',\n        icon: <Icon icon={<Build />} />,\n    };\n\n    const LogoutItem = {\n        name: 'admin-menu.logout',\n        link: 'logout',\n        icon: <Icon icon={<PowerSettingsNew />} />,\n    };\n\n    const AgreementsItem = {\n        name: 'admin-menu.agreements',\n        link: '/admin/agreements',\n        icon: <Icon icon={<AssignmentTurnedIn />} />,\n    };\n\n    const ArchiveItem = {\n        name: 'admin-menu.archive',\n        link: '/admin/archive',\n        icon: <Icon icon={<Archive />} />,\n    };\n\n    const NewsletterItem = {\n        name: 'admin-menu.newsletter',\n        link: '/admin/newsletter',\n        icon: <Icon icon={<Message />} />,\n    };\n\n    const TestItem = {\n        name: 'admin-menu.test-management',\n        link: '/admin/test-management',\n        icon: <Icon icon={<AccessAlarm />} />,\n    };\n\n    const options: { [index: string]: SingleItemProps } = {\n        'main-page': MainPageItem,\n        notifications: NotificationsItem,\n        settings: SettingsItem,\n        'create-blog-article': CreateBlogArticleItem,\n        archive: ArchiveItem,\n        newsletter: NewsletterItem,\n        tests: TestItem,\n        logout: LogoutItem,\n        agreements: AgreementsItem,\n        results: ResultsItem,\n    };\n\n    const item = options[name];\n\n    if (active.includes(item.name)) item.active = true;\n\n    item.name = t(item.name);\n\n    return item;\n}\n\nfunction getInstructorMenuItem({ name, active, rightIcon, t }: MenuItemFactoryProps): SingleItemProps {\n    const AddResultsItem = {\n        name: 'instructor-menu.add-results',\n        link: '/instructor',\n        icon: <Icon icon={<Assessment />} />,\n    };\n\n    const NotificationsItem = {\n        name: 'instructor-menu.notifications',\n        link: '/instructor/notifications',\n        icon: <Icon icon={<Notifications />} />,\n        rightIcon,\n    };\n\n    const SettingsItem = {\n        name: 'instructor-menu.settings',\n        link: '/instructor/settings',\n        icon: <Icon icon={<Build />} />,\n    };\n\n    const LogoutItem = {\n        name: 'instructor-menu.logout',\n        link: 'logout',\n        icon: <Icon icon={<PowerSettingsNew />} />,\n    };\n\n    const options: { [index: string]: SingleItemProps } = {\n        'add-results': AddResultsItem,\n        settings: SettingsItem,\n        notifications: NotificationsItem,\n        logout: LogoutItem,\n    };\n\n    const item = options[name];\n\n    if (active.includes(item.name)) item.active = true;\n\n    item.name = t(item.name);\n\n    return item;\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentHomePage/HomePageTopSection/HomePageAddChildButton/HomePageAddChildCard.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/agreementRepository.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationCode.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/LanguageSelector.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationFeedback.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationPassword.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationEmail.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/RegistrationAgreement.tsx",["1450"],"import React, { useState } from 'react';\nimport { Checkbox, Accordion, AccordionSummary, AccordionDetails, Typography } from '@material-ui/core/';\nimport { useTranslation } from 'react-i18next';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport { AgreementModal } from './AgreementModal';\nimport { ButtonSecondary } from '../../../components/Button';\nimport { Agreement } from '../../../graphql/types';\n\nconst T_PREFIX = 'registration-page.agreements';\n\nexport interface Props {\n    handleBack(): void;\n    handleNext(): void;\n    classButton: string;\n    classNextBtn: string;\n    agreements: Agreement[];\n    agreementMoreBtn: string;\n    agreementContainer: string;\n    agreementCheckboxHeader: string;\n    agreementCheckboxWrapper: string;\n    agreementText: string;\n    agreementLink: string;\n    agreementHeader: string;\n    agreementModal: string;\n    agreementPanel: string;\n    agreementCheckbox: string;\n    checkboxContent: string;\n}\n\nexport const RegistrationAgreement = ({\n    handleBack,\n    handleNext,\n    classButton,\n    classNextBtn,\n    agreements,\n    agreementMoreBtn,\n    agreementContainer,\n    agreementHeader,\n    agreementCheckboxHeader,\n    agreementCheckboxWrapper,\n    agreementText,\n    agreementLink,\n    agreementModal,\n    agreementPanel,\n    agreementCheckbox,\n    checkboxContent,\n}: Props) => {\n    const { t } = useTranslation();\n    const [isMoreContent, setIsMoreContent] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n\n    const expansionText = isMoreContent ? t(`${T_PREFIX}.show-less`) : t(`${T_PREFIX}.show-more`);\n\n    const handleMoreContent = () => setIsMoreContent(!isMoreContent);\n    const toggleModal = () => setIsOpen(!isOpen);\n\n    return (\n        <>\n            <div className={agreementContainer}>\n                <h3 className={agreementHeader}>{t(`${T_PREFIX}.main-title`)}</h3>\n                <p>\n                    <b>{t(`${T_PREFIX}.clausule-header`)}</b>\n                </p>\n                <span>{t(`${T_PREFIX}.clausule`)}</span>\n                <ButtonSecondary\n                    className={agreementMoreBtn}\n                    onClick={toggleModal}\n                    variant=\"text\"\n                    innerText={t(`${T_PREFIX}.show-more-content-modal`)}\n                />\n                <p className={agreementCheckboxHeader}>{t(`${T_PREFIX}.sub-title`)}</p>\n                <span>{t(`${T_PREFIX}.sub-title-description`)}</span>\n                {agreements.map((agreement, idx) => (\n                    <div\n                        key={agreement._id}\n                        className={clsx({ [agreementCheckboxWrapper]: true, lastAgreement: idx === 2 })}\n                    >\n                        <div className={checkboxContent}>\n                            <Checkbox\n                                color=\"default\"\n                                className={agreementCheckbox}\n                                inputProps={{ 'aria-label': 'checkbox with default color' }}\n                            />\n                            <p className={agreementText}>{(agreement as any).title}</p>\n                        </div>\n                        {idx !== 0 && (\n                            <Accordion className={agreementPanel} onClick={handleMoreContent}>\n                                <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <Typography className={agreementMoreBtn}>{expansionText}</Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>{agreement.text}</Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                        )}\n                    </div>\n                ))}\n                <div className={checkboxContent}>\n                    <Checkbox\n                        className={agreementCheckbox}\n                        color=\"default\"\n                        inputProps={{ 'aria-label': 'checkbox with default color' }}\n                    />\n                    <div>\n                        <p>\n                            {t(`${T_PREFIX}.statement`)}{' '}\n                            <span className={agreementLink}>{t(`${T_PREFIX}.privacy-policy`)} </span>\n                        </p>\n                        <span>{t(`${T_PREFIX}.required-field`)} </span>\n                    </div>\n                </div>\n            </div>\n            <div className={classButton}>\n                <ButtonSecondary onClick={handleBack} variant=\"text\" innerText={t('back')} />\n                <ButtonSecondary\n                    onClick={handleNext}\n                    variant=\"contained\"\n                    className={classNextBtn}\n                    innerText={t('next')}\n                />\n            </div>\n            <AgreementModal\n                open={isOpen}\n                toggleModal={toggleModal}\n                agreementModal={agreementModal}\n                agreementHeader={agreementHeader}\n            />\n        </>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/styles.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/passwordStrengthTest.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/queries/userQueries.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/chunkArray.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/load.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/AlertDialog.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminSettingsPage/AdminSettingsDeleteParentModal.tsx",["1451"],"import React from 'react';\nimport { Typography, makeStyles, Theme } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { BasicModal } from '../../components/Modal/BasicModal';\nimport { openDialog, ActionDialog } from '../../utils/openDialog';\nimport { User } from '../../graphql/types';\n\nexport interface SettingsMessageModalProps {\n    preventClose: boolean;\n    isCancelButtonVisible: boolean;\n    parent: User;\n}\n\nconst AdminSettingsDeleteParent = ({\n    onClose,\n    makeDecision,\n    parent,\n    preventClose,\n    isCancelButtonVisible,\n}: SettingsMessageModalProps & ActionDialog<{ parent: User }>) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <BasicModal\n            closeButtonText={t('parent-settings.modal-delete-account.first-button')}\n            actionName={t('parent-settings.modal-delete-account.second-button')}\n            isOpen={true}\n            onAction={() => makeDecision({ accepted: true, parent })}\n            onClose={onClose}\n            isCancelButtonVisible={isCancelButtonVisible}\n            isActionButtonSecondary\n            dialogProps={{ maxWidth: 'xs' }}\n        >\n            <Typography variant=\"h4\" className={classes.header}>\n                {t('parent-settings.modal-delete-account.header')}\n            </Typography>\n            <Typography variant=\"body1\">{t('parent-settings.modal-delete-account.first-description')}</Typography>\n            <Typography variant=\"body1\">\n                <strong>{parent.mail}</strong> ?\n            </Typography>\n            <Typography variant=\"body1\" className={classes.mail}>\n                {t('parent-settings.modal-delete-account.second-description')}\n            </Typography>\n        </BasicModal>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    header: { marginBottom: theme.spacing(2) },\n    mail: { marginTop: theme.spacing(2) },\n}));\n\nexport const openAdminSettingsDeleteParent = (props: SettingsMessageModalProps) => {\n    return openDialog<SettingsMessageModalProps>(AdminSettingsDeleteParent, props);\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChilModals/EditChildModal.tsx",["1452"],"import React, { useState } from 'react';\nimport { makeStyles, Theme, Typography, Grid } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik } from 'formik';\n\nimport { ChildInput, Child, AddChildResult } from '../../graphql/types';\nimport { BasicModal } from '../Modal/BasicModal';\nimport { ChildCard } from '../ChildCard/ChildCard';\nimport BoyAvatar from '../../assets/boy.png';\nimport GirlAvatar from '../../assets/girl.png';\nimport { openDialog, ActionDialog } from '../../utils/openDialog';\nimport { ChildForm } from '../ChildForm/ChildForm';\nimport { initialValues, validationSchema, normalizeChild } from './utils';\nimport { EditChildModalProps } from './ChildModalTypes';\n\ntype EditChildType = Omit<Child, 'results' | 'currentParams'>;\n\nconst AdminSettingsEditModal = ({\n    onClose,\n    makeDecision,\n    kindergartens,\n    parent,\n    preventClose,\n    isCancelButtonVisible,\n}: EditChildModalProps & ActionDialog<{ child: ChildInput }>) => {\n    const [updateInitialChildValues, setInitialValues] = useState<AddChildResult>(initialValues);\n    const [selectedChild, setSelectedChild] = useState<{ childIndex: number; isSelected: boolean }>({\n        childIndex: 0,\n        isSelected: false,\n    });\n\n    const formik = useFormik({\n        enableReinitialize: true,\n        initialValues: updateInitialChildValues,\n        validationSchema,\n        onSubmit: (values) => {\n            makeDecision({ accepted: true, child: normalizeChild(values) });\n        },\n    });\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <BasicModal\n            actionName={t('parent-settings.modal-edit-account.button')}\n            isOpen={true}\n            onAction={formik.handleSubmit}\n            onClose={onClose}\n            isCancelButtonVisible={isCancelButtonVisible}\n            dialogProps={{ maxWidth: 'sm' }}\n        >\n            <form onSubmit={formik.handleSubmit}>\n                <Typography variant=\"h4\" className={classes.header}>\n                    {t('parent-settings.modal-edit-account.header')}\n                </Typography>\n                <Typography variant=\"body1\" className={classes.header}>\n                    {t('parent-settings.modal-edit-account.subtitle')}\n                </Typography>\n                <Typography variant=\"subtitle2\">{t('parent-settings.modal-edit-account.label')}</Typography>\n                <Typography variant=\"body1\" className={classes.mail}>\n                    {parent.mail}\n                </Typography>\n                <Grid container spacing={3} className={classes.chilCard}>\n                    {parent.children.map(\n                        (\n                            { firstname, lastname, sex, birthYear, birthQuarter, kindergarten }: EditChildType,\n                            index: number,\n                        ) => {\n                            return (\n                                <Grid item key={`${firstname}-${lastname}`} xs={6} sm={4}>\n                                    <ChildCard\n                                        firstName={firstname}\n                                        PictureComponent={\n                                            <img\n                                                className={classes.childAvatar}\n                                                alt=\"mali_wspaniali_child\"\n                                                src={sex === 'male' ? BoyAvatar : GirlAvatar}\n                                            />\n                                        }\n                                        onClick={() => {\n                                            setSelectedChild({\n                                                childIndex: index,\n                                                isSelected: !selectedChild.isSelected,\n                                            });\n                                            setInitialValues({\n                                                firstname,\n                                                lastname,\n                                                sex,\n                                                'birth-date': birthYear.toString(),\n                                                'birth-quarter': birthQuarter.toString(),\n                                                kindergarten: kindergarten._id,\n                                            });\n                                        }}\n                                        isActive={selectedChild.childIndex === index && selectedChild.isSelected}\n                                    />\n                                </Grid>\n                            );\n                        },\n                    )}\n                </Grid>\n                {selectedChild.isSelected && <ChildForm kindergartens={kindergartens} formik={formik} />}\n            </form>\n        </BasicModal>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    header: { marginBottom: theme.spacing(2) },\n    mail: { margin: theme.spacing(0.5, 0, 1.5) },\n    childAvatar: {\n        width: '100%',\n        objectFit: 'contain',\n        margin: '5px',\n    },\n    childrenWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    chilCard: {\n        marginBottom: theme.spacing(2),\n    },\n}));\n\nexport const openAdminSettingsEditModal = (props: EditChildModalProps) => {\n    return openDialog<EditChildModalProps>(AdminSettingsEditModal, props);\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/AppLogo.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/Icon.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Blog/BlogArticleCard.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/emailTest.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/userRepository.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/PasswordStrengthChips.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/RegistrationPage/RegistrationForm/AgreementModal.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChilModals/utils.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Loader.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildCard/ChildCard.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildForm/ChildForm.tsx",["1453"],"import React from 'react';\nimport { makeStyles, Theme, Grid } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { FormikProps } from 'formik';\n\nimport { useSelectOptions } from './useSelectValues';\nimport { Input } from './Input';\nimport { Select } from './Select';\nimport { Kindergarten, AddChildResult } from '../../graphql/types';\nimport { useBreakpoints } from '../../queries/useBreakpoints';\n\ninterface KindergardenProp {\n    kindergartens: Kindergarten[];\n    formik: FormikProps<AddChildResult>;\n}\n\nexport const ChildForm = ({ kindergartens, formik }: KindergardenProp) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const device = useBreakpoints();\n    const { getOptions } = useSelectOptions();\n\n    const kindergartenOptions = kindergartens.map(mapKindergartenToOption);\n\n    function mapKindergartenToOption(kindergarten: Kindergarten) {\n        return { value: kindergarten._id, label: `nr. ${kindergarten.number}, ${kindergarten.name}` };\n    }\n\n    return (\n        <Grid container spacing={2} className={classes.container}>\n            <Grid item xs={12}>\n                <Grid container spacing={2} direction={device !== 'DESKTOP' ? 'column' : 'row'}>\n                    <Grid item classes={{ root: classes.item }}>\n                        <Input\n                            value={formik.values.firstname}\n                            name=\"firstname\"\n                            label={t('add-child-modal.inputs.firstname')}\n                            error={formik.errors.firstname}\n                            touched={formik.touched.firstname}\n                            onChange={(name: string, value: string) => formik.setFieldValue(name, value)}\n                        />\n                    </Grid>\n                    <Grid item classes={{ root: classes.item }}>\n                        <Input\n                            value={formik.values.lastname}\n                            name=\"lastname\"\n                            label={t('add-child-modal.inputs.lastname')}\n                            error={formik.errors.lastname}\n                            touched={formik.touched.lastname}\n                            onChange={(name: string, value: string) => {\n                                formik.setFieldValue(name, value);\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Select\n                    label={t('add-child-modal.select-options.sex.label')}\n                    value={formik.values.sex}\n                    options={getOptions('sex')}\n                    error={formik.errors.sex}\n                    touched={formik.touched.sex}\n                    name=\"sex\"\n                    onChange={(name: string, value: string) => {\n                        formik.setFieldValue(name, value);\n                    }}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={2} direction={device !== 'DESKTOP' ? 'column' : 'row'}>\n                    <Grid item classes={{ root: classes.item }}>\n                        <Select\n                            label={t('add-child-modal.select-options.birth-date.label')}\n                            value={formik.values['birth-date']}\n                            options={getOptions('birth-date')}\n                            error={formik.errors['birth-date']}\n                            touched={formik.touched['birth-date']}\n                            name=\"birth-date\"\n                            onChange={(name: string, value: string) => {\n                                formik.setFieldValue(name, value);\n                            }}\n                        />\n                    </Grid>\n                    <Grid item classes={{ root: classes.item }}>\n                        <Select\n                            label={t('add-child-modal.select-options.birth-quarter.label')}\n                            value={formik.values['birth-quarter']}\n                            options={getOptions('birth-quarter')}\n                            error={formik.errors['birth-quarter']}\n                            touched={formik.touched['birth-quarter']}\n                            name=\"birth-quarter\"\n                            onChange={(name: string, value: string) => formik.setFieldValue(name, value)}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Select\n                    label={t('add-child-modal.select-options.kindergarten.label')}\n                    value={formik.values.kindergarten}\n                    options={kindergartenOptions}\n                    error={formik.errors.kindergarten}\n                    touched={formik.touched.kindergarten}\n                    name=\"kindergarten\"\n                    onChange={(name: string, value: string) => formik.setFieldValue(name, value)}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n    container: {\n        maxWidth: 640,\n    },\n    item: {\n        flex: 1,\n    },\n}));\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildForm/Select.tsx",["1454","1455","1456"],"import React from 'react';\nimport {\n    InputLabel,\n    FormControl,\n    Select as SelectField,\n    MenuItem,\n    FormHelperText,\n    makeStyles,\n    createStyles,\n} from '@material-ui/core';\nimport { Theme } from '../../theme/types';\n\nimport { Option } from './useSelectValues';\n\ninterface Props {\n    label: string;\n    value: string;\n    options: Option[];\n    name: string;\n    disabled?: boolean;\n    error: string | undefined;\n    touched: any;\n    onChange: (name: string, value: string) => void;\n}\n\nexport function Select({ label, value, options, disabled, name, error, touched, onChange }: Props) {\n    const classes = useStyles();\n    const errorText = error && touched ? error : '';\n\n    return (\n        <FormControl variant=\"outlined\" fullWidth className={classes.container}>\n            <InputLabel htmlFor={name} error={!!errorText}>\n                {label}\n            </InputLabel>\n            <SelectField\n                error={!!errorText}\n                id={name}\n                label={label}\n                value={value}\n                name={name}\n                renderValue={() => options.find((o) => o.value === value)?.label}\n                labelId={name}\n                disabled={!!disabled}\n                fullWidth\n                onChange={({ target: { name: selectName, value: selectValue } }) => {\n                    onChange(selectName as string, selectValue as string);\n                }}\n            >\n                {options.map((option: Option) => {\n                    return (\n                        <MenuItem value={option.value} key={option.value}>\n                            <span>{option.label}</span>\n                            <span className={classes.helperLabel}>{option.helperLabel}</span>\n                        </MenuItem>\n                    );\n                })}\n            </SelectField>\n            <FormHelperText error>{errorText}</FormHelperText>\n        </FormControl>\n    );\n}\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        helperLabel: {\n            color: theme.palette.grey['400'],\n            marginLeft: theme.spacing(1),\n        },\n        container: {\n            minWidth: 120,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildForm/Input.tsx",["1457","1458","1459"],"import React from 'react';\nimport { TextField } from '@material-ui/core';\n\ninterface Props {\n    label: string;\n    value: string;\n    name: string;\n    error: string | undefined;\n    touched: any;\n    multiline?: boolean;\n    rows?: number;\n    disabled?: boolean;\n    onChange: (name: string, value: string) => void;\n}\n\nexport function Input({ label, value, name, onChange, error, touched, multiline, rows, disabled }: Props) {\n    const errorText = error && touched ? error : '';\n\n    return (\n        <TextField\n            multiline={multiline}\n            rows={rows}\n            error={!!errorText}\n            helperText={errorText}\n            name={name}\n            value={value}\n            label={label}\n            disabled={disabled}\n            id=\"outlined-helperText\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={({ target: { name: inputName, value: inputValue } }) =>\n                onChange(inputName as string, inputValue as string)\n            }\n        />\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ChildForm/useSelectValues.tsx",["1460"],"import { useTranslation } from 'react-i18next';\nimport { parseBirthQuarter } from '../../utils/parseBirthQuarter';\n\nexport interface Option {\n    value: string;\n    label: string;\n    helperLabel?: string;\n}\n\nexport function useSelectOptions(): { getOptions: (name: string) => Option[] } {\n    const { t } = useTranslation();\n\n    const options: { [index: string]: Option[] } = {\n        sex: [\n            {\n                value: 'male',\n                label: t('add-child-modal.select-options.sex.male'),\n            },\n            {\n                value: 'female',\n                label: t('add-child-modal.select-options.sex.female'),\n            },\n        ],\n        'birth-date': [...generateDates()],\n        'birth-quarter': [\n            {\n                value: '0',\n                label: parseBirthQuarter(0),\n                helperLabel: t('add-child-modal.select-options.birth-quarter.1'),\n            },\n            {\n                value: '1',\n                label: parseBirthQuarter(1),\n                helperLabel: t('add-child-modal.select-options.birth-quarter.2'),\n            },\n            {\n                value: '2',\n                label: parseBirthQuarter(2),\n                helperLabel: t('add-child-modal.select-options.birth-quarter.3'),\n            },\n            {\n                value: '3',\n                label: parseBirthQuarter(3),\n                helperLabel: t('add-child-modal.select-options.birth-quarter.4'),\n            },\n        ],\n    };\n\n    return {\n        getOptions: (name: string) => options[name],\n    };\n}\n\nfunction generateDates() {\n    return new Array(20).fill(null).map((x, i) => {\n        const date = (new Date().getFullYear() - i).toString();\n\n        return {\n            value: date,\n            label: date,\n        };\n    });\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/parseBirthQuarter.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Sidebar/LoggedAsItem.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/useOnClickOutside.tsx",["1461"],"import React from 'react';\n\nexport function useOnClickOutside(ref: React.MutableRefObject<HTMLElement | null>, handler: (event: Event) => void) {\n    React.useEffect(() => {\n        const listener = (event: MouseEvent | TouchEvent) => {\n            if (!ref.current || ref.current!.contains(event.target as Node)) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    }, [ref, handler]);\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/User/editChild.tsx",["1462"],"import { gql, useMutation } from '@apollo/client';\nimport { Child, UpdatedChildInput, Kindergarten } from '../../../graphql/types';\nimport { client } from '../../../apollo_client';\nimport { GET_ME, useGetMe } from './useGetMe';\nimport { useKindergartens } from '../../queries/Kindergartens/getKindergartens';\n\nexport interface EditChildResponse {\n    status: boolean;\n}\n\nconst EDIT_CHILD = gql`\n    mutation editChild($child: UpdatedChildInput!) {\n        editChild(child: $child) {\n            status\n        }\n    }\n`;\n\nexport function useEditChild() {\n    const [editChild] = useMutation<EditChildResponse, { child: UpdatedChildInput }>(EDIT_CHILD);\n    const { user } = useGetMe();\n    const { kindergartenList } = useKindergartens();\n\n    return {\n        editChild: (update: UpdatedChildInput) => {\n            const updatedKindergarten = kindergartenList?.find((k) => k._id === update.kindergartenId);\n\n            if (!updatedKindergarten) return;\n\n            editChild({\n                variables: {\n                    child: update,\n                },\n            }).then(() => {\n                if (!user || !kindergartenList) return;\n\n                client.writeQuery({\n                    query: GET_ME,\n                    data: {\n                        me: {\n                            ...user,\n                            children: user.children.map((c) => updateEditedChild(c, updatedKindergarten, update)),\n                        },\n                    },\n                });\n            });\n        },\n    };\n}\n\nfunction updateEditedChild(cachedChild: Child, kindergarten: Kindergarten, update: UpdatedChildInput) {\n    const { childId, kindergartenId, ...updatedChild } = update;\n\n    if (cachedChild._id === childId) {\n        return { ...cachedChild, ...updatedChild, kindergarten };\n    }\n\n    return cachedChild;\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/LanguageSelector.tsx",["1463"],"import React from 'react';\nimport { IconButton, createStyles, makeStyles } from '@material-ui/core';\n\nimport PlFlag from '../assets/pl.png';\nimport EnFlag from '../assets/en.png';\n\ninterface Props {\n    language: string | null;\n    onClick: (lang: string) => void;\n}\n\nexport const LanguageSelector = ({ language, onClick }: Props) => {\n    const classes = useStyles();\n\n    const languageImage = (flag: string, lang: string) => {\n        return (\n            <IconButton aria-label=\"change language\" onClick={() => onClick(lang)}>\n                <img src={flag} alt={lang} className={classes.flag} />\n            </IconButton>\n        );\n    };\n\n    return <div>{language === 'pl' ? languageImage(EnFlag, 'en') : languageImage(PlFlag, 'pl')}</div>;\n};\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        flag: {\n            borderRadius: '50%',\n            width: 18,\n            height: 18,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAddTestPage/BasicInformationForm/AssessmentInformationItem.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/Details/EditChildPanel.tsx",["1464"],"import React from 'react';\nimport { useFormik } from 'formik';\nimport { makeStyles, createStyles, Grid, Theme } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { useSelectOptions } from '../../../components/ChildForm/useSelectValues';\nimport { Child, Kindergarten } from '../../../graphql/types';\nimport { useBreakpoints } from '../../../queries/useBreakpoints';\nimport { Input } from '../../../components/ChildForm/Input';\nimport { Select } from '../../../components/ChildForm/Select';\nimport { ButtonSecondary } from '../../../components/Button';\n\ninterface ChildFormProps {\n    kindergartens: Kindergarten[];\n    handleSubmit: (value: {\n        firstname: string;\n        lastname: string;\n        sex: string;\n        'birth-date': string;\n        'birth-quarter': string;\n        kindergarten: string;\n    }) => void;\n    child: Child;\n}\n\nconst validationSchema = yup.object({\n    firstname: yup.string().required(),\n    lastname: yup.string().required(),\n    sex: yup.string().required(),\n    'birth-date': yup.string().required(),\n    'birth-quarter': yup.string().required(),\n    kindergarten: yup.string().required(),\n});\n\nexport function EditChildPanel({ handleSubmit, kindergartens, child }: ChildFormProps) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const device = useBreakpoints();\n\n    const initialValues = {\n        id: child._id,\n        firstname: child.firstname,\n        lastname: child.lastname,\n        sex: child.sex,\n        'birth-date': child.birthYear.toString(),\n        'birth-quarter': child.birthQuarter.toString(),\n        kindergarten: child.kindergarten._id,\n    };\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit: handleSubmit,\n    });\n\n    if (formik.values.id !== child._id) {\n        formik.setValues(initialValues);\n    }\n\n    const { getOptions } = useSelectOptions();\n\n    const kindergartenOptions = kindergartens.map(mapKindergartenToOption);\n\n    return (\n        <form onSubmit={formik.handleSubmit} className={classes.formContainer}>\n            <Grid container spacing={2} className={classes.container} direction=\"column\">\n                <Grid item xs={12}>\n                    <Grid container spacing={2} direction={device !== 'DESKTOP' ? 'column' : 'row'}>\n                        <Grid item classes={{ root: classes.item }}>\n                            <Input\n                                value={formik.values.firstname}\n                                name=\"firstname\"\n                                label={t('add-child-modal.inputs.firstname')}\n                                error={formik.errors.firstname}\n                                touched={formik.touched.firstname}\n                                onChange={(name: string, value: string) => formik.setFieldValue(name, value)}\n                            />\n                        </Grid>\n                        <Grid item classes={{ root: classes.item }}>\n                            <Input\n                                value={formik.values.lastname}\n                                name=\"lastname\"\n                                label={t('add-child-modal.inputs.lastname')}\n                                error={formik.errors.lastname}\n                                touched={formik.touched.lastname}\n                                onChange={(name: string, value: string) => formik.setFieldValue(name, value)}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Select\n                        label={t('add-child-modal.select-options.sex.label')}\n                        value={formik.values.sex}\n                        options={getOptions('sex')}\n                        error={formik.errors.sex}\n                        touched={formik.touched.sex}\n                        name=\"sex\"\n                        onChange={(name: string, value: string) => formik.setFieldValue(name, value)}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={2} direction={device !== 'DESKTOP' ? 'column' : 'row'}>\n                        <Grid item classes={{ root: classes.item }}>\n                            <Select\n                                label={t('add-child-modal.select-options.birth-date.label')}\n                                value={formik.values['birth-date']}\n                                options={getOptions('birth-date')}\n                                error={formik.errors['birth-date']}\n                                touched={formik.touched['birth-date']}\n                                name=\"birth-date\"\n                                onChange={(name: string, value: string) => formik.setFieldValue(name, value)}\n                            />\n                        </Grid>\n                        <Grid item classes={{ root: classes.item }}>\n                            <Select\n                                label={t('add-child-modal.select-options.birth-quarter.label')}\n                                value={formik.values['birth-quarter']}\n                                options={getOptions('birth-quarter')}\n                                error={formik.errors['birth-quarter']}\n                                touched={formik.touched['birth-quarter']}\n                                name=\"birth-quarter\"\n                                onChange={(name: string, value: string) => formik.setFieldValue(name, value)}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Select\n                        label={t('add-child-modal.select-options.kindergarten.label')}\n                        value={formik.values.kindergarten}\n                        options={kindergartenOptions}\n                        error={formik.errors.kindergarten}\n                        touched={formik.touched.kindergarten}\n                        name=\"kindergarten\"\n                        onChange={(name: string, value: string) => formik.setFieldValue(name, value)}\n                    />\n                </Grid>\n                <ButtonSecondary\n                    className={classes.saveButton}\n                    type=\"submit\"\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    size=\"large\"\n                >\n                    {t('child-profile.child-details.button')}\n                </ButtonSecondary>\n            </Grid>\n        </form>\n    );\n}\n\nfunction mapKindergartenToOption(kindergarten: Kindergarten) {\n    return { value: kindergarten._id, label: `nr. ${kindergarten.number}, ${kindergarten.name}` };\n}\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formContainer: {\n            marginTop: theme.spacing(3),\n        },\n        title: { marginBottom: theme.spacing(3) },\n        description: { marginBottom: theme.spacing(2) },\n        container: {\n            maxWidth: 640,\n        },\n        item: {\n            flex: 1,\n        },\n        saveButton: {\n            alignSelf: 'flex-end',\n            marginTop: theme.spacing(2),\n            marginRight: theme.spacing(1),\n            margin: theme.spacing(0, 1, 2, 0),\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Navbar/NotificationsPanel.tsx",["1465","1466"],"import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MenuList, Paper, createStyles, makeStyles, Theme, Typography } from '@material-ui/core/';\nimport { Notifications } from '@material-ui/icons/';\n\nimport { NotificationItem } from './NotificationItem';\nimport { Notification } from '../../../graphql/types';\nimport { useNotificationContent } from '../../../pages/NotificationsPage/useNotificationContent';\n\nexport type NotificationListProps = {\n    notifications: Notification[];\n    onClick: (id: string) => void;\n};\n\nexport const NotificationsPanel = ({ notifications, onClick }: NotificationListProps) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <Paper className={classes.notificationsPanel}>\n            <div className={classes.header}>\n                <Typography variant=\"subtitle2\">{t('notification-panel.title')}</Typography>\n            </div>\n            {notifications.length === 0 ? (\n                <EmptyMessage />\n            ) : (\n                <ListComponent notifications={notifications} onClick={onClick} />\n            )}\n        </Paper>\n    );\n};\n\nfunction EmptyMessage() {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <div className={classes.emptyMessageContainer}>\n            <Notifications fontSize=\"large\" classes={{ root: classes.emptyMessageIcon }} />\n            <Typography variant=\"caption\" classes={{ root: classes.emptyMessageDescription }}>\n                {t('notification-panel.empty-content')}\n            </Typography>\n        </div>\n    );\n}\n\nfunction ListComponent({ notifications, onClick }: { notifications: Notification[]; onClick: (id: string) => void }) {\n    const { getNotification } = useNotificationContent();\n    const classes = useStyles();\n\n    return (\n        <MenuList dense={true} classes={{ padding: classes.list }}>\n            {notifications.map((notification) => {\n                const { templateId, date, _id, isRead } = notification;\n\n                return (\n                    <NotificationItem\n                        key={_id}\n                        id={_id}\n                        text={getNotification(templateId, notification.values)}\n                        date={date}\n                        isRead={isRead}\n                        onClick={onClick}\n                    />\n                );\n            })}\n        </MenuList>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        header: {\n            padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n            borderBottom: `1px solid ${theme.palette.background.default}`,\n        },\n        list: {\n            padding: 0,\n            maxHeight: '50vh',\n            minHeight: 167,\n            overflowY: 'auto',\n            outlineWidth: 0,\n        },\n        notificationsPanel: {\n            position: 'absolute',\n            top: theme.spacing(7),\n            right: theme.spacing(3),\n            zIndex: 200,\n            width: 328,\n            boxShadow: '1px 1px 4px 0 rgba(0, 0, 0, 0.25)',\n            [theme.breakpoints.down('sm')]: {\n                position: 'fixed',\n                width: '100%',\n                top: '60px',\n                right: 0,\n            },\n        },\n        emptyMessageContainer: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        emptyMessageIcon: {\n            marginTop: 27,\n            marginBottom: theme.spacing(3),\n            color: theme.palette.text.secondary,\n        },\n        emptyMessageDescription: {\n            marginBottom: 61,\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/GroupedTest.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Navigation/CategoryTabs.tsx",["1467"],"import React from 'react';\n\nimport { CategoryItem } from '../../pages/ArticleListPage/BlogCategories';\nimport { Tabs } from '../Tabs/Tabs';\nimport { theme } from '../../theme/theme';\nimport { ChildProfileCategoryItem } from '../../pages/ChildProfile/ChildProfileCategory';\n\ninterface Props<T extends CategoryItem | ChildProfileCategoryItem> {\n    onClick: (value: string) => void;\n    active: string;\n    values: T[];\n}\n\nexport function CategoryTabs<T extends CategoryItem | ChildProfileCategoryItem>({ onClick, active, values }: Props<T>) {\n    return (\n        <Tabs\n            value={values.find((tab) => tab.key === active)?.key}\n            onTabsChange={(value) => {\n                onClick(value);\n            }}\n            values={values.map((category) => ({\n                label: category.name,\n                value: category.key,\n            }))}\n            indicator={theme.palette!.secondary as string}\n            variant=\"fullWidth\"\n        />\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Navigation/CategoryTabsMobile.tsx",["1468"],"import React from 'react';\n\nimport { CategoryItem } from '../../pages/ArticleListPage/BlogCategories';\nimport { Tabs } from '../Tabs/Tabs';\nimport { ChildProfileCategoryItem } from '../../pages/ChildProfile/ChildProfileCategory';\nimport { theme } from '../../theme/theme';\n\ninterface Props<T extends CategoryItem | ChildProfileCategoryItem> {\n    onClick: (value: string) => void;\n    active: string;\n    values: T[];\n}\n\nexport function CategoryTabsMobile<T extends CategoryItem | ChildProfileCategoryItem>({\n    onClick,\n    active,\n    values,\n}: Props<T>) {\n    return (\n        <Tabs\n            value={values.find((tab) => tab.key === active)?.key}\n            onTabsChange={(value) => {\n                onClick(value);\n            }}\n            values={values.map((category) => ({\n                label: category.name,\n                value: category.key,\n            }))}\n            variant=\"scrollable\"\n            scrollButtons=\"on\"\n            indicator={theme.palette?.text?.primary!}\n        />\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/panels/Conditions.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/panels/Interpretation.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/panels/About.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/panels/Results.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/MeasurementEditor/ChildHeader.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/MeasurementEditor/MeasurementEditor.tsx",["1469","1470","1471"],"import React from 'react';\nimport { createStyles, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { MeasurementPoint } from './MeasurementPoint';\nimport { Child, AssessmentResult } from '../../../graphql/types';\nimport dayjs from '../../../localizedMoment';\n\ninterface MeasurementValues {\n    run: number;\n    pendelumRun: number;\n    throw: number;\n    jump: number;\n}\n\ninterface Props {\n    values: MeasurementValues;\n    points: MeasurementValues;\n    child: Child;\n    edited: string;\n    measurement: string;\n    result?: AssessmentResult;\n    onChange: (value: MeasurementValues) => void;\n    onEditClick: (name: string) => void;\n}\n\nexport function MeasurementEditor({\n    child,\n    points,\n    measurement,\n    values,\n    edited,\n    result,\n    onChange,\n    onEditClick,\n}: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const { run, pendelumRun, jump, throw: throwBall } = child.currentParams!;\n\n    if (!child.currentParams || !run || !pendelumRun || !jump || !throwBall) {\n        return <Typography variant=\"body1\">The child doesnt suit to the test</Typography>;\n    }\n\n    return (\n        <Grid container justify=\"space-between\" direction=\"column\" spacing={1} className={classes.container}>\n            <Grid item>\n                <MeasurementPoint\n                    isEmpty={values.pendelumRun === 0}\n                    step={0.1}\n                    maxValue={pendelumRun.lowerLimitPoints}\n                    lowerLimit={pendelumRun.lowerLimit}\n                    upperLimit={pendelumRun.upperLimit}\n                    points={points.pendelumRun}\n                    value={values.pendelumRun}\n                    changeDate={getPendelumRunMeasurementDate()}\n                    unit=\"s\"\n                    name={t('add-result-page.dexterity')}\n                    disabled={edited === 'pendelumRun'}\n                    onChange={(value) => onChange({ ...values, pendelumRun: value })}\n                    onClick={() => onEditClick('pendelumRun')}\n                />\n            </Grid>\n            <Grid item>\n                <MeasurementPoint\n                    isEmpty={values.jump === 0}\n                    step={1}\n                    maxValue={jump.upperLimitPoints}\n                    lowerLimit={jump.lowerLimit}\n                    upperLimit={jump.upperLimit}\n                    points={points.jump}\n                    value={values.jump}\n                    changeDate={getRunMeasurementDate()}\n                    unit=\"cm\"\n                    name={t('add-result-page.power')}\n                    disabled={edited === 'jump'}\n                    onChange={(value) => onChange({ ...values, jump: value })}\n                    onClick={() => onEditClick('jump')}\n                />\n            </Grid>\n            <Grid item>\n                <MeasurementPoint\n                    isEmpty={values.throw === 0}\n                    step={10}\n                    maxValue={throwBall.upperLimitPoints}\n                    lowerLimit={throwBall.lowerLimit}\n                    upperLimit={throwBall.upperLimit}\n                    points={points.throw}\n                    value={values.throw}\n                    changeDate={getThrowMeasurementDate()}\n                    unit=\"cm\"\n                    name={t('add-result-page.strength')}\n                    disabled={edited === 'throwBall'}\n                    onChange={(value) => onChange({ ...values, throw: value })}\n                    onClick={() => onEditClick('throwBall')}\n                />\n            </Grid>\n            <Grid item>\n                <MeasurementPoint\n                    isEmpty={values.run === 0}\n                    step={0.1}\n                    maxValue={run.lowerLimitPoints}\n                    lowerLimit={run.lowerLimit}\n                    upperLimit={run.upperLimit}\n                    points={points.run}\n                    value={values.run}\n                    changeDate={getJumpMeasurementDate()}\n                    unit=\"s\"\n                    name={t('add-result-page.velocity')}\n                    disabled={edited === 'run'}\n                    onChange={(value) => onChange({ ...values, run: value })}\n                    onClick={() => onEditClick('run')}\n                />\n            </Grid>\n        </Grid>\n    );\n\n    function getPendelumRunMeasurementDate() {\n        let date: Date | undefined;\n\n        if (measurement === 'first') {\n            date = result?.firstMeasurementPendelumRunDate;\n        } else {\n            date = result?.lastMeasurementPendelumRunDate;\n        }\n\n        if (!date) return;\n\n        return dayjs(date).fromNow();\n    }\n\n    function getRunMeasurementDate() {\n        let date: Date | undefined;\n\n        if (measurement === 'first') {\n            date = result?.firstMeasurementRunDate;\n        } else {\n            date = result?.lastMeasurementRunDate;\n        }\n\n        if (!date) return;\n\n        return dayjs(date).fromNow();\n    }\n\n    function getThrowMeasurementDate() {\n        let date: Date | undefined;\n\n        if (measurement === 'first') {\n            date = result?.firstMeasurementThrowDate;\n        } else {\n            date = result?.lastMeasurementThrowDate;\n        }\n\n        if (!date) return;\n\n        return dayjs(date).fromNow();\n    }\n\n    function getJumpMeasurementDate() {\n        let date: Date | undefined;\n\n        if (measurement === 'first') {\n            date = result?.firstMeasurementJumpDate;\n        } else {\n            date = result?.lastMeasurementJumpDate;\n        }\n\n        if (!date) return;\n\n        return dayjs(date).fromNow();\n    }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            padding: '10px 24px',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/ChildPicker/ChildPicker.tsx",["1472","1473"],"import React, { useState } from 'react';\nimport { List, MenuItem, Divider, createStyles, makeStyles, Theme, Grid } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { CustomContainer } from '../../../components/CustomContainer';\nimport { Child, Kindergarten } from '../../../graphql/types';\nimport { ChildItem } from './ChildItem';\nimport { SelectList } from '../../../components/SelectList';\nimport { SearchChildField } from '../../../components/SearchChildField';\n\ninterface Props {\n    childList: Child[];\n    kindergartens: Kindergarten[];\n    selectedKindergarten: string;\n    measurement: string;\n    header: React.ReactNode;\n    onClick: (type: string, value: string) => void;\n    selected?: string;\n}\n\nexport function ChildPicker({\n    childList,\n    kindergartens,\n    selectedKindergarten,\n    selected,\n    measurement,\n    header,\n    onClick,\n}: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const [searchTerm, setSearchTerm] = useState('');\n\n    return (\n        <CustomContainer\n            header={header}\n            container={\n                <>\n                    <Grid container className={classes.container} spacing={2} direction=\"column\">\n                        <Grid item>\n                            <SelectList\n                                value={selectedKindergarten}\n                                label={t('add-results-page.test-name')}\n                                items={kindergartens.map((k) => (\n                                    <MenuItem value={k._id} key={k._id}>\n                                        {k.name}\n                                    </MenuItem>\n                                ))}\n                                onSelect={(value) => onClick('kindergarten', value)}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <SelectList\n                                value={measurement}\n                                label={t('add-result-page.select-measurement')}\n                                items={[\n                                    <MenuItem key=\"first\" value=\"first\">\n                                        {t('add-result-page.first')}\n                                    </MenuItem>,\n                                    <MenuItem key=\"last\" value=\"last\">\n                                        {t('add-result-page.last')}\n                                    </MenuItem>,\n                                ]}\n                                onSelect={(value) => onClick('measurement', value)}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <SearchChildField\n                                isCompact\n                                onChange={(value) => setSearchTerm(value)}\n                                searchTerm={searchTerm}\n                            />\n                        </Grid>\n                    </Grid>\n                    <List disablePadding>\n                        <Divider />\n                        {getFilteredChildrenByName().map((c) => {\n                            return (\n                                <ChildItem\n                                    key={c._id}\n                                    child={c}\n                                    selected={c._id === selected}\n                                    onClick={() => onClick('child', c._id)}\n                                />\n                            );\n                        })}\n                    </List>\n                </>\n            }\n            disableShadow\n        />\n    );\n\n    function getFilteredChildrenByName() {\n        return childList.filter((c) => c.firstname.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            padding: theme.spacing(2, 2, 0, 2),\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/ChildPicker/ChildPickerDrawer.tsx",["1474","1475","1476"],"import React from 'react';\nimport { Box, createStyles, Grid, makeStyles, SwipeableDrawer, Theme, Typography } from '@material-ui/core';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\nimport { useTranslation } from 'react-i18next';\nimport { Child, Kindergarten } from '../../../graphql/types';\nimport { ChildPicker } from './ChildPicker';\nimport { ButtonSecondary } from '../../../components/Button';\n\ninterface Props {\n    childList: Child[];\n    kindergartens: Kindergarten[];\n    selectedKindergarten: string;\n    measurement: string;\n    onClick: (type: string, value: string) => void;\n    selected?: string;\n}\n\nexport function ChildPickerDrawer(props: Props) {\n    const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <>\n            <SwipeableDrawer\n                anchor=\"right\"\n                open={isDrawerOpen}\n                onClose={() => setIsDrawerOpen(false)}\n                onOpen={() => setIsDrawerOpen(true)}\n                disableBackdropTransition={true}\n                disableDiscovery={true}\n                classes={{ root: classes.drawer, paper: classes.paper }}\n            >\n                <ChildPicker\n                    header={\n                        <span className={classes.header} onClick={() => setIsDrawerOpen(false)}>\n                            <Box mr={1}>\n                                <ArrowBack className={classes.icon} />\n                            </Box>\n                            <Typography variant=\"body2\">{t('add-result-page.back-to-results')}</Typography>\n                        </span>\n                    }\n                    selectedKindergarten={props.selectedKindergarten}\n                    kindergartens={props.kindergartens}\n                    selected={props.selected}\n                    measurement={props.measurement}\n                    childList={props.childList}\n                    onClick={(type, value) => {\n                        setIsDrawerOpen(false);\n\n                        props.onClick(type, value);\n                    }}\n                />\n            </SwipeableDrawer>\n            <Grid container justify=\"flex-end\" className={classes.backButtonContainer}>\n                <Grid item>\n                    <ButtonSecondary onClick={() => setIsDrawerOpen(true)}>\n                        <Box mr={1}>{t('add-result-page.select-child')}</Box> <ArrowForward />\n                    </ButtonSecondary>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        drawer: {\n            zIndex: '2000 !important' as any,\n        },\n        paper: {\n            width: '90%',\n        },\n        header: {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        icon: {\n            color: theme.palette.text.secondary,\n        },\n        backButtonContainer: {\n            marginTop: -35,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/countSumOfPoints.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/StatusChip.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/ProgressBar.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Menu/Navbar/NotificationItem.tsx",["1477"],"import React from 'react';\nimport clsx from 'clsx';\nimport { ListItem, IconButton, Typography, createStyles, makeStyles, MenuItem, Theme } from '@material-ui/core/';\nimport { Notifications } from '@material-ui/icons/';\nimport { darkGrey, notificationCaptionColor } from '../../../colors';\nimport dayjs from '../../../localizedMoment';\n\ntype notificationItemProps = {\n    text: string;\n    date: string;\n    isRead: boolean;\n    id: string;\n    onClick: (id: string) => void;\n};\n\nexport const NotificationItem = ({ text, date, isRead, id, onClick }: notificationItemProps) => {\n    const classes = useStyles();\n\n    return (\n        <MenuItem classes={{ dense: classes.item }} onClick={() => !isRead && onClick(id)}>\n            <ListItem classes={{ root: clsx({ [classes.visited]: isRead, [classes.item]: true }) }}>\n                <IconButton\n                    size=\"small\"\n                    onClick={() => !isRead && onClick(id)}\n                    classes={{ root: classes.iconButton }}\n                    disabled={isRead}\n                    color=\"secondary\"\n                >\n                    <Notifications />\n                </IconButton>\n                <div className={classes.notificationText}>\n                    <div>\n                        <Typography gutterBottom variant=\"caption\">\n                            {text}\n                        </Typography>\n                    </div>\n                    <div>\n                        <Typography className={classes.notificationCaption} gutterBottom variant=\"caption\">\n                            {dayjs(date).fromNow()}\n                        </Typography>\n                    </div>\n                </div>\n            </ListItem>\n        </MenuItem>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        item: {\n            padding: 0,\n        },\n        notificationItem: {\n            borderBottom: '1px solid notificationReadColor',\n            paddingRight: theme.spacing(2),\n            '&.read': {\n                backgroundColor: darkGrey,\n                transition: 'backgroundColor .3s',\n            },\n        },\n        visited: {\n            background: theme.palette.background.default,\n            transition: 'backgroundColor .3s',\n            cursor: 'default',\n        },\n        notificationCaption: {\n            width: '39px',\n            height: '7px',\n            color: notificationCaptionColor,\n        },\n\n        notificationText: {\n            whiteSpace: 'pre-wrap',\n        },\n        iconButton: {\n            margin: theme.spacing(1, 2),\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Tabs/Tabs.tsx",["1478"],"import React from 'react';\nimport { Tabs as MuiTabs, makeStyles, createStyles, TabsProps } from '@material-ui/core';\nimport { Tab } from './Tab';\n\ntype ContentType = {\n    label: string;\n    value?: string;\n};\n\ninterface Props extends TabsProps {\n    values: ContentType[];\n    onTabsChange: (value: string) => void;\n    value?: string;\n    indicator: string;\n}\n\nexport const Tabs = ({ value, onTabsChange, values, indicator, ...props }: Props) => {\n    const classes = useStyles({ indicator });\n\n    return (\n        <MuiTabs\n            classes={{\n                flexContainer: classes.flexContainer,\n                indicator: classes.indicator,\n            }}\n            value={value}\n            onChange={(_e: React.ChangeEvent<{}>, v: string) => {\n                onTabsChange(v);\n            }}\n            {...props}\n        >\n            {values.map(({ label, value: v }) => (\n                <Tab key={label} value={v} label={label} />\n            ))}\n        </MuiTabs>\n    );\n};\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        flexContainer: {\n            alignItems: 'flex-end',\n            backgroundColor: 'theme.palette.primary.contrastText',\n        },\n        indicator: {\n            backgroundColor: ({ indicator }: { indicator: string }) => indicator,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/SearchChildField.tsx",["1479","1480"],"import React, { useState } from 'react';\nimport { Box, Grid, IconButton, Typography } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { Search as SearchIcon } from '@material-ui/icons';\nimport { OutlinedTextField } from './OutlinedTextField';\n\ninterface SearchChildFieldProps {\n    searchTerm: string;\n    isCompact?: boolean;\n    onChange: (value: string) => void;\n}\n\nexport function SearchChildField(props: SearchChildFieldProps) {\n    const { t } = useTranslation();\n    const [isSearchFieldOpen, setIsSearchFieldOpen] = useState(false);\n\n    if (props.isCompact && !isSearchFieldOpen) {\n        return <SearchFieldLabel onClick={() => setIsSearchFieldOpen((prev) => !prev)} />;\n    }\n\n    if (!props.isCompact) {\n        const placeholder = t('add-results-page.search-by-child-firstname');\n\n        return (\n            <OutlinedTextField\n                label={placeholder}\n                input={props.searchTerm}\n                options={{ autoFocus: true }}\n                onChange={props.onChange}\n            />\n        );\n    }\n\n    return (\n        <ExtendedSearchField\n            searchTerm={props.searchTerm}\n            onClick={() => setIsSearchFieldOpen((prev) => !prev)}\n            onChange={props.onChange}\n        />\n    );\n}\n\ninterface SearchFieldLabelProps {\n    onClick: () => void;\n}\n\nfunction SearchFieldLabel(props: SearchFieldLabelProps) {\n    const { t } = useTranslation();\n    const label = t('add-results-page.child-list');\n\n    return (\n        <Grid container justify=\"space-between\" alignItems=\"center\">\n            <Grid item>\n                <Typography>{label}</Typography>\n            </Grid>\n            <Grid item>\n                <IconButton size=\"small\" aria-label=\"notifications\" onClick={props.onClick}>\n                    <SearchIcon />\n                </IconButton>\n            </Grid>\n        </Grid>\n    );\n}\n\ninterface ExtendedSearchFieldProps {\n    searchTerm: string;\n    onClick: () => void;\n    onChange: (value: string) => void;\n}\n\nfunction ExtendedSearchField(props: ExtendedSearchFieldProps) {\n    const { t } = useTranslation();\n    const placeholder = t('add-results-page.search-by-child-firstname');\n\n    return (\n        <Grid container direction=\"column\">\n            <Grid item>\n                <SearchFieldLabel\n                    onClick={() => {\n                        props.onChange('');\n                        props.onClick();\n                    }}\n                />\n            </Grid>\n            <Grid item>\n                <Box mb={1}>\n                    <OutlinedTextField\n                        label={placeholder}\n                        input={props.searchTerm}\n                        options={{ autoFocus: true }}\n                        onChange={props.onChange}\n                    />\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/Panel.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/ChildPicker/ChildItem.tsx",["1481"],"import React from 'react';\nimport { createStyles, fade, ListItem, makeStyles, Theme, Typography } from '@material-ui/core';\nimport { BarChart, KeyboardArrowRight } from '@material-ui/icons';\nimport { Child } from '../../../graphql/types';\n\ninterface Props {\n    child: Child;\n    selected: boolean;\n    onClick: (value: string) => void;\n}\n\nexport function ChildItem({ child, selected, onClick }: Props) {\n    const classes = useStyles();\n\n    return (\n        <ListItem\n            button\n            divider\n            classes={{\n                root: classes.listItemRoot,\n                selected: classes.listItemSelected,\n            }}\n            onClick={() => onClick(child._id)}\n            selected={selected}\n        >\n            <BarChart className={classes.chartIcon} />{' '}\n            <span className={classes.childButton}>\n                <Typography variant=\"body2\">\n                    {child.firstname} {child.lastname}\n                </Typography>\n            </span>\n            <KeyboardArrowRight className={classes.arrowIcon} />\n        </ListItem>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        chartIcon: {\n            marginRight: theme.spacing(3),\n            color: theme.palette.text.secondary,\n        },\n        arrowIcon: {\n            color: theme.palette.text.secondary,\n        },\n        childButton: {\n            flex: 1,\n        },\n        listItemRoot: {\n            '&:hover': {\n                backgroundColor: `${fade(theme.palette.primary.main, 0.08)} !important`,\n            },\n        },\n        listItemSelected: {\n            backgroundColor: `${fade(theme.palette.primary.main, 0.08)} !important`,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorResultCreatorPage/MeasurementEditor/MeasurementPoint.tsx",["1482"],"import React from 'react';\nimport {\n    createStyles,\n    Grid,\n    Input,\n    makeStyles,\n    Slider,\n    Theme,\n    Checkbox,\n    Typography,\n    FormControlLabel,\n    SimplePaletteColorOptions,\n} from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\nimport { useTranslation } from 'react-i18next';\nimport { theme } from '../../../theme/theme';\nimport { CircleChart } from '../../../components/CircleChart';\nimport { ButtonSecondary } from '../../../components/Button/ButtonSecondary';\nimport { useIsDevice } from '../../../queries/useBreakpoints';\n\ninterface Props {\n    name: string;\n    value: number;\n    unit: string;\n    step: number;\n    maxValue: number;\n    lowerLimit: number;\n    upperLimit: number;\n    points: number;\n    isEmpty: boolean;\n    disabled: boolean;\n    changeDate?: string;\n    onChange: (value: number) => void;\n    onClick: () => void;\n}\n\nexport function MeasurementPoint(props: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const device = useIsDevice();\n\n    return (\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item>\n                <Grid container spacing={1} justify={device.isSmallMobile ? 'space-between' : 'flex-start'}>\n                    <Grid item className={classes.editMeasurementButton}>\n                        <Typography variant=\"subtitle1\">{props.name}</Typography>&nbsp;\n                        {props.changeDate && <Typography variant=\"overline\">({props.changeDate})</Typography>}\n                    </Grid>\n                    <Grid item>\n                        {!props.disabled && (\n                            <ButtonSecondary variant=\"text\" onClick={props.onClick}>\n                                <Edit className={classes.editIcon} />\n                                {t('add-results-page.edit')}\n                            </ButtonSecondary>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid container spacing={2}>\n                    <Grid item xs={9} sm={6}>\n                        <Slider\n                            disabled={!props.disabled}\n                            aria-labelledby=\"discrete-slider-restrict\"\n                            step={props.step}\n                            valueLabelDisplay=\"auto\"\n                            min={Math.floor(props.lowerLimit - 0.25 * props.lowerLimit)}\n                            value={props.value}\n                            max={Math.floor(props.upperLimit + 0.25 * props.upperLimit)}\n                            onChange={(_, v) => props.onChange(v as number)}\n                            marks={getMarks()}\n                            classes={{\n                                mark: classes.mark,\n                                track: classes.sliderRoot,\n                                rail: classes.sliderRoot,\n                                thumb: classes.thumb,\n                                valueLabel: classes.valueLabel,\n                                disabled: classes.sliderDisabled,\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={3} sm={2}>\n                        <Grid container>\n                            <Grid item xs={8}>\n                                <Input\n                                    disabled={!props.disabled}\n                                    value={props.value}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    onChange={({ target: { value: v } }) => props.onChange(parseFloat(v))}\n                                    inputProps={{\n                                        step: props.step,\n                                        min: 0,\n                                        max: props.maxValue,\n                                        type: 'number',\n                                        'aria-labelledby': 'input-slider',\n                                    }}\n                                    classes={{ input: classes.input }}\n                                />\n                            </Grid>\n                            <Grid item xs={4} className={classes.unit}>\n                                <span>{props.unit}</span>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={4} className={classes.pieContainer}>\n                        <Grid container alignItems=\"center\" spacing={2}>\n                            {!device.isSmallMobile && (\n                                <Grid item xs={3}>\n                                    <CircleChart\n                                        color={(theme.palette!.success as SimplePaletteColorOptions).main}\n                                        maxValue={props.maxValue}\n                                        value={props.points}\n                                        disable={props.isEmpty}\n                                    />\n                                </Grid>\n                            )}\n                            <Grid item xs={device.isSmallMobile ? 12 : 9}>\n                                <Typography variant=\"body2\">\n                                    {t('add-result-page.received-points')}{' '}\n                                    <strong className={classes.points}>\n                                        {props.isEmpty ? '-' : Math.ceil(props.points)} {t('add-result-page.points')}\n                                    </strong>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <FormControlLabel\n                    checked={props.isEmpty}\n                    disabled={props.isEmpty}\n                    control={<Checkbox color=\"default\" />}\n                    label={<Typography variant=\"body1\">{t('add-result-page.no-result')}</Typography>}\n                    labelPlacement=\"end\"\n                    onChange={() => props.onChange(0)}\n                />\n            </Grid>\n        </Grid>\n    );\n\n    function getMarks() {\n        const marks = [\n            {\n                value: Math.floor(props.lowerLimit - 0.25 * props.lowerLimit),\n                label: Math.floor(props.lowerLimit - 0.25 * props.lowerLimit),\n            },\n            {\n                value: props.lowerLimit,\n                label: props.lowerLimit,\n            },\n            {\n                value: props.upperLimit,\n                label: props.upperLimit,\n            },\n            {\n                value: Math.floor(props.upperLimit + 0.25 * props.upperLimit),\n                label: Math.floor(props.upperLimit + 0.25 * props.upperLimit),\n            },\n        ];\n\n        return marks;\n    }\n}\n\nconst useStyles = makeStyles((_theme: Theme) =>\n    createStyles({\n        pieContainer: {\n            width: _theme.spacing(8),\n            height: _theme.spacing(8),\n        },\n        points: {\n            color: _theme.palette.success.main,\n        },\n        input: {\n            fontSize: 20,\n        },\n        mark: {\n            backgroundColor: _theme.palette.divider,\n            height: 16,\n            width: 1,\n            marginTop: -3,\n        },\n        sliderRoot: {\n            height: 8,\n        },\n        thumb: {\n            height: 24,\n            width: 24,\n            marginTop: -8,\n            marginLeft: -8,\n        },\n        sliderDisabled: {\n            '& span[role=slider]': {\n                width: 16,\n                height: 16,\n                marginTop: -4,\n                marginLeft: -8,\n            },\n        },\n        valueLabel: {\n            left: 'calc(-50% + 8px)',\n            top: -32,\n        },\n        editMeasurementButton: {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        editIcon: {\n            width: 18,\n            height: 18,\n            marginRight: _theme.spacing(1),\n        },\n        unit: {\n            display: 'flex',\n            alignItems: 'flex-end',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/CircleChart.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/ResultComparison.tsx",["1483"],"import React, { useState } from 'react';\nimport { Card, Typography } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/styles';\nimport { getResultColorAndLabel } from './calculateResult';\nimport { MAX_OVERALL_POINTS } from './constants';\nimport { gray } from '../../../../colors';\nimport { ButtonSecondary } from '../../../../components/Button';\nimport { BasicModal } from '../../../../components/Modal/BasicModal';\n\ninterface Props {\n    firstResultPoints: number;\n    lastResultPoints: number;\n    childAge: number;\n}\n\nexport const ResultComparison = ({ firstResultPoints, lastResultPoints, childAge }: Props) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const { t } = useTranslation();\n    const { color } = getResultColorAndLabel(lastResultPoints, MAX_OVERALL_POINTS);\n    const classes = useStyles({ color });\n    const key = getDifferenceKey(firstResultPoints, lastResultPoints);\n\n    return (\n        <>\n            <div className={classes.wrapper}>\n                <Card className={classes.card}>\n                    <div className={classes.cardTop}>\n                        <Typography variant=\"subtitle1\">{t('child-profile.summary-info')}</Typography>\n                        <Typography variant=\"h3\">{t('child-profile.test-result')}</Typography>\n                    </div>\n                    <div className={classes.cardBottom}>\n                        <Typography className={classes.cardBottomText} variant=\"body2\">\n                            {t('child-profile.comparison-label')}\n                        </Typography>\n                        <div className={classes.difference}>{t(`child-profile.difference.${key}`)}</div>\n                        <ButtonSecondary\n                            variant=\"contained\"\n                            onClick={() => setIsModalOpen((prev) => !prev)}\n                            innerText={t('child-profile.comparison-button')}\n                        />\n                    </div>\n                </Card>\n                <div className={classes.rightWrapper}>\n                    <Typography variant=\"body2\" className={classes.title}>\n                        {t('child-profile.comparison-right-title')}\n                    </Typography>\n                </div>\n            </div>\n            <BasicModal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen((prev) => !prev)}\n                onAction={() => setIsModalOpen((prev) => !prev)}\n                actionName={t('close')}\n            >\n                {t(`child-profile.difference.${key}`)}\n            </BasicModal>\n        </>\n    );\n};\n\nfunction getDifferenceKey(firstValue: number, lastValue: number) {\n    if (firstValue > lastValue) return 'regress';\n    if (firstValue < lastValue) return 'progress';\n\n    return 'constant';\n}\n\nconst useStyles = makeStyles({\n    wrapper: {\n        width: '100%',\n        display: 'flex',\n        padding: '10px 0',\n    },\n    card: {\n        width: '25%',\n        display: 'flex',\n        padding: '16px',\n        flexDirection: 'column',\n    },\n    cardTop: {\n        borderBottom: `1px solid ${gray}`,\n        paddingBottom: '10px',\n    },\n    cardBottom: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingTop: '15px',\n    },\n    cardBottomText: {\n        textAlign: 'center',\n    },\n    difference: {\n        fontFamily: 'Montserrat',\n        fontSize: '14px',\n        textTransform: 'uppercase',\n        marginBottom: '20px',\n        marginTop: '20px',\n        fontWeight: 'bold',\n        color: ({ color }: { color: string }) => color,\n    },\n    rightWrapper: {\n        width: '100%',\n        margin: '0 30px',\n    },\n    title: {\n        paddingTop: '10px',\n    },\n});\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/SingleTest.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/SummarisedGroupedTest/SummarisedGroupedTest.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticleListPage/BlogCategories.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/articleRepository.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Tabs/Tab.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Blog/Pagination.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/OutlinedTextField.tsx",["1484"],"import React from 'react';\nimport { TextField, TextFieldProps } from '@material-ui/core';\n\ninterface Props {\n    label: string;\n    input: string;\n    options?: Partial<TextFieldProps>;\n    onChange: (value: string) => void;\n}\n\nexport function OutlinedTextField({ label, input, options = {}, onChange }: Props) {\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            value={input}\n            onChange={({ target: { value } }) => onChange(value)}\n            fullWidth\n            {...options}\n        />\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileAboutTests/PanelSummary.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/constants.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/calculateResult.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/parseDateToAge.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAssessmentManagementPage/AssessmentHistoryList/AssessmentHistoryList.tsx",["1485","1486"],"import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { AssessmentItem } from './AssessmentItem';\nimport { Assessment } from '../../../graphql/types';\n\ninterface Props {\n    assessments: Assessment[];\n    onTestClick: (type: string, id: string) => void;\n}\n\nexport function AssessmentHistoryList({ assessments, onTestClick }: Props) {\n    const { t } = useTranslation();\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{t('manage-test-view.test-list.name')}</TableCell>\n                        <TableCell />\n                        <TableCell>{t('manage-test-view.test-list.first-assessment')}</TableCell>\n                        <TableCell />\n                        <TableCell>{t('manage-test-view.test-list.last-assessment')}</TableCell>\n                        <TableCell align=\"center\">{t('manage-test-view.test-list.status')}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {assessments.map((assessment) => {\n                        return <AssessmentItem key={assessment.title} value={assessment} onClick={onTestClick} />;\n                    })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/TestDetails.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/TestSummary.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Agreements/getAgreementsKindergartenFilter.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Agreements/getAgreementsSortStatus.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Agreements/getAgreementsTypeFilter.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/NoAssessmentsView.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/SecondaryFab.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/ChildListCompactContainer.tsx",["1487","1488"],"import React, { useState } from 'react';\nimport {\n    Box,\n    Grid,\n    List,\n    ListItem,\n    Typography,\n    TableBody,\n    TableRow,\n    Table,\n    TableCell,\n    makeStyles,\n    IconButton,\n} from '@material-ui/core';\nimport { Assessment as AssessmentIcon, BarChart, EventNote, ExpandLess, ExpandMore } from '@material-ui/icons';\nimport { useTranslation } from 'react-i18next';\nimport { Assessment, Child } from '../../graphql/types';\nimport { parseDateToAge } from '../../utils/parseDateToAge';\nimport { Clickable } from '../../components/Clickable';\n\ninterface Props {\n    childList: Child[];\n    assessment: Assessment;\n    onClick: (type: string, value: string) => void;\n}\n\nexport function ChildListCompactContainer({ childList, assessment, onClick }: Props) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const [selectedChild, setSelectedChild] = useState(childList[0]?._id);\n    const isFirstMeasurementDisabled = assessment.firstMeasurementStatus !== 'active';\n    const isLastMeasurementDisabled = assessment.lastMeasurementStatus !== 'active';\n    const isResultDisabled = isFirstMeasurementDisabled && isLastMeasurementDisabled;\n\n    return (\n        <List>\n            {childList.map((c) => {\n                const isOpen = selectedChild === c._id;\n\n                return (\n                    <>\n                        <ListItem divider key={c._id}>\n                            <Grid container direction=\"column\">\n                                <Grid item onClick={() => setSelectedChild((prev) => (prev !== c._id ? c._id : ''))}>\n                                    <Clickable>\n                                        <Grid container>\n                                            <Grid item>\n                                                <Box mr={2}>{isOpen ? <ExpandLess /> : <ExpandMore />}</Box>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\">\n                                                    {c.firstname} {c.lastname}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </Clickable>\n                                </Grid>\n                                {isOpen && (\n                                    <Grid container>\n                                        <Grid item>\n                                            <Box ml={3}>\n                                                <Table>\n                                                    <TableBody>\n                                                        <TableRow>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <Typography variant=\"subtitle2\">\n                                                                    {t('add-results-page.age')}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <Typography variant=\"body2\">\n                                                                    {parseDateToAge(c.birthYear, c.birthQuarter)}\n                                                                </Typography>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                        <TableRow>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <Typography variant=\"subtitle2\">\n                                                                    {t('add-results-page.first-assessment')}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <IconButton\n                                                                    disabled={isFirstMeasurementDisabled}\n                                                                    classes={{ root: classes.iconButton }}\n                                                                    onClick={() =>\n                                                                        onClick('add-first-assessment-result', c._id)\n                                                                    }\n                                                                >\n                                                                    <BarChart\n                                                                        titleAccess={t(\n                                                                            'add-results-page.add-first-assessment-result',\n                                                                        )}\n                                                                    />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <IconButton\n                                                                    disabled={isFirstMeasurementDisabled}\n                                                                    classes={{ root: classes.iconButton }}\n                                                                    onClick={() =>\n                                                                        onClick('add-first-assessment-note', c._id)\n                                                                    }\n                                                                >\n                                                                    <EventNote\n                                                                        titleAccess={t('add-results-page.add-note')}\n                                                                    />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                        <TableRow>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <Typography variant=\"subtitle2\">\n                                                                    {t('add-results-page.last-assessment')}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <IconButton\n                                                                    disabled={isLastMeasurementDisabled}\n                                                                    classes={{ root: classes.iconButton }}\n                                                                    onClick={() =>\n                                                                        onClick('add-last-assessment-result', c._id)\n                                                                    }\n                                                                >\n                                                                    <BarChart\n                                                                        titleAccess={t(\n                                                                            'add-results-page.add-last-assessment-result',\n                                                                        )}\n                                                                    />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <IconButton\n                                                                    disabled={isLastMeasurementDisabled}\n                                                                    classes={{ root: classes.iconButton }}\n                                                                    onClick={() =>\n                                                                        onClick('add-last-assessment-note', c._id)\n                                                                    }\n                                                                >\n                                                                    <EventNote\n                                                                        titleAccess={t('add-results-page.add-note')}\n                                                                    />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                        <TableRow>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <Typography variant=\"subtitle2\">\n                                                                    {t('add-results-page.see-results')}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell classes={{ root: classes.cell }}>\n                                                                <IconButton\n                                                                    disabled={isResultDisabled}\n                                                                    classes={{ root: classes.iconButton }}\n                                                                    onClick={() => onClick('see-results', c._id)}\n                                                                >\n                                                                    <AssessmentIcon\n                                                                        titleAccess={t('add-results-page.see-results')}\n                                                                    />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    </TableBody>\n                                                </Table>\n                                            </Box>\n                                        </Grid>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </ListItem>\n                    </>\n                );\n            })}\n        </List>\n    );\n}\n\nconst useStyles = makeStyles({\n    cell: {\n        border: 'none',\n    },\n    iconButton: {\n        padding: 0,\n    },\n});\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/AssessmentSubheader.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/AddNoteDialog.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/ChildListHeader.tsx",["1489","1490"],"import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Grid, MenuItem, TextField } from '@material-ui/core';\nimport { Assessment } from '../../graphql/types';\nimport { SearchChildField } from '../../components/SearchChildField';\n\ninterface Props {\n    assessments: Assessment[];\n    selectedAssessment: string;\n    selectedKindergarten: string;\n    searchTerm: string;\n    compact?: boolean;\n    onChange: (type: string, value: string) => void;\n}\n\nexport function ChildListHeader({\n    assessments,\n    selectedAssessment,\n    selectedKindergarten,\n    searchTerm,\n    compact,\n    onChange,\n}: Props) {\n    const { t } = useTranslation();\n    const kindergartens = assessments.find((a) => a._id === selectedAssessment)?.kindergartens || [];\n\n    return (\n        <div>\n            <Grid container direction={compact ? 'column' : 'row'} spacing={3}>\n                <Grid item xs={compact ? 12 : 4}>\n                    <TextField\n                        select\n                        label={t('add-results-page.test-name')}\n                        onChange={({ target: { value } }) => onChange('assessment', value as string)}\n                        variant=\"outlined\"\n                        value={selectedAssessment}\n                        fullWidth\n                        SelectProps={{\n                            MenuProps: {\n                                getContentAnchorEl: null,\n                                anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n                            },\n                        }}\n                    >\n                        {assessments.map((a) => (\n                            <MenuItem value={a._id} key={a.title}>\n                                {a.title}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </Grid>\n                <Grid item xs={compact ? 12 : 4}>\n                    <TextField\n                        select\n                        label={t('add-results-page.kindergarten-name')}\n                        onChange={({ target: { value } }) => onChange('kindergarten', value as string)}\n                        variant=\"outlined\"\n                        value={selectedKindergarten}\n                        fullWidth\n                        SelectProps={{\n                            MenuProps: {\n                                getContentAnchorEl: null,\n                                anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n                            },\n                        }}\n                    >\n                        {kindergartens.map((k) => (\n                            <MenuItem value={k.kindergarten._id} key={k.kindergarten._id}>\n                                {k.kindergarten.number}/{k.kindergarten.name}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </Grid>\n                <Grid item xs={compact ? 12 : 4}>\n                    <SearchChildField\n                        isCompact={!!compact}\n                        searchTerm={searchTerm}\n                        onChange={(value) => onChange('searchTerm', value)}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/InstructorAddResultsPage/ChildListContainer.tsx",["1491","1492"],"import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { IconButton, Table, TableBody, TableCell, TableHead, TableRow, Box } from '@material-ui/core';\nimport { ArrowUpward, ArrowDownward, Assessment as AssessmentIcon, BarChart, EventNote } from '@material-ui/icons';\nimport { Assessment, Child, AssessmentResult } from '../../graphql/types';\nimport { parseDateToAge } from '../../utils/parseDateToAge';\nimport { Clickable } from '../../components/Clickable';\n\ninterface Props {\n    childList: Child[];\n    results: AssessmentResult[];\n    assessment: Assessment;\n    fullNameSortType: string;\n    ageSortType: string;\n    onClick: (type: string, value: string) => void;\n}\n\nexport function ChildListContainer(props: Props) {\n    const { t } = useTranslation();\n    const isFirstMeasurementDisabled = props.assessment.firstMeasurementStatus !== 'active';\n    const isLastMeasurementDisabled = props.assessment.lastMeasurementStatus !== 'active';\n    const isResultDisabled = isFirstMeasurementDisabled && isLastMeasurementDisabled;\n\n    return (\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                    <TableCell onClick={() => props.onClick('full-name', '')}>\n                        <SortableHeaderItem label={t('add-results-page.full-name')} type={props.fullNameSortType} />\n                    </TableCell>\n                    <TableCell onClick={() => props.onClick('age', '')} align=\"right\">\n                        <SortableHeaderItem label={t('add-results-page.age')} type={props.ageSortType} />\n                    </TableCell>\n                    <TableCell align=\"center\">{t('add-results-page.first-assessment')}</TableCell>\n                    <TableCell align=\"center\">{t('add-results-page.last-assessment')}</TableCell>\n                    <TableCell align=\"center\">{t('add-results-page.see-results')}</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {props.childList.map((c) => {\n                    const lastNote = getLastNote(c._id);\n\n                    return (\n                        <TableRow key={c._id} hover>\n                            <TableCell>\n                                {c.firstname} {c.lastname}\n                            </TableCell>\n                            <TableCell align=\"right\">{parseDateToAge(c.birthYear, c.birthQuarter)}</TableCell>\n                            <TableCell align=\"center\">\n                                <IconButton\n                                    onClick={() => props.onClick('add-first-assessment-result', c._id)}\n                                    disabled={isFirstMeasurementDisabled}\n                                >\n                                    <BarChart titleAccess={t('add-results-page.add-first-assessment-result')} />\n                                </IconButton>\n                                <IconButton\n                                    onClick={() => props.onClick('add-first-assessment-note', c._id)}\n                                    disabled={isFirstMeasurementDisabled}\n                                >\n                                    <EventNote titleAccess={t('add-results-page.add-note')} />\n                                </IconButton>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                <IconButton\n                                    onClick={() => props.onClick('add-last-assessment-result', c._id)}\n                                    disabled={isLastMeasurementDisabled}\n                                >\n                                    <BarChart titleAccess={t('add-results-page.add-last-assessment-result')} />\n                                </IconButton>\n                                <IconButton\n                                    color={lastNote ? 'primary' : 'default'}\n                                    onClick={() => props.onClick('add-last-assessment-note', c._id)}\n                                    disabled={isLastMeasurementDisabled}\n                                >\n                                    <EventNote titleAccess={t('add-results-page.add-note')} />\n                                </IconButton>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                <IconButton\n                                    onClick={() => props.onClick('see-results', c._id)}\n                                    disabled={isResultDisabled}\n                                >\n                                    <AssessmentIcon titleAccess={t('add-results-page.see-results')} />\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    );\n                })}\n            </TableBody>\n        </Table>\n    );\n\n    function getLastNote(childId: string) {\n        return props.results.find((r) => r.childId === childId)?.lastMeasurementNote;\n    }\n}\n\nfunction SortableHeaderItem({ type, label }: { type: string; label: string }) {\n    return (\n        <Clickable>\n            <Box display=\"flex\" justifyItems=\"center\">\n                <Box mr={1}>{label}</Box>\n                <ArrowItem type={type} />\n            </Box>\n        </Clickable>\n    );\n}\n\nfunction ArrowItem({ type }: { type: string }) {\n    if (type === '') return <>-</>;\n\n    if (type === 'asc') return <ArrowUpward />;\n\n    return <ArrowDownward />;\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Agreements/getAgreementsStatusFilter.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/graphql/kindergartensRepository.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/agreementsTypeFilterMutations.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/utils/calculateReadingTime.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AdminAgreementsPage.tsx",["1493","1494","1495"],"import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Typography,\n    Paper,\n    IconButton,\n    Grid,\n    Divider,\n    Collapse,\n    makeStyles,\n    Theme,\n    createStyles,\n} from '@material-ui/core';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nimport { KindergartenWithUsers } from '../../graphql/types';\nimport { activePage } from '../../apollo_client';\nimport { AgreementsList } from './AgreementsList/AgreementsList';\nimport { AgreementsFilter } from './AgreementsFilter/AgreementsFilter';\nimport { AgreementStatusFilter } from '../../models/AgreementStatusFilter';\nimport { AgreementTypeFilter } from '../../models/AgreementTypeFilters';\nimport { AgreementKindergartenFilter } from '../../models/AgreementKindergartenFilters';\nimport { AgreementSortType } from '../../models/AgreementSortStatus';\nimport { PageContainer } from '../../components/PageContainer';\n\ninterface Props {\n    kindergartens: KindergartenWithUsers[];\n    agreementsStatusFilter: AgreementStatusFilter;\n    agreementsTypeFilter: AgreementTypeFilter;\n    agreementsKindergartenFilter: AgreementKindergartenFilter[];\n    agreementsSortStatus: AgreementSortType;\n    isKindergartenLoading: boolean;\n    actions: {\n        setSortStatus: (value: string) => void;\n        setAgreementFilter: (type: string, value: string | string[]) => void;\n        sendFilterChanges: () => void;\n    };\n}\n\nexport const AdminAgreementsPage = ({\n    kindergartens,\n    agreementsStatusFilter,\n    agreementsTypeFilter,\n    agreementsKindergartenFilter,\n    agreementsSortStatus,\n    isKindergartenLoading,\n    actions: { setSortStatus, setAgreementFilter, sendFilterChanges },\n}: Props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const [isFiltersListOpen, setIsFilterListOpen] = useState(false);\n\n    useEffect(() => {\n        activePage(['admin-menu.agreements']);\n    }, []);\n\n    return (\n        <PageContainer>\n            <Paper elevation={0}>\n                <div className={classes.filterContainer}>\n                    <Grid\n                        container\n                        justify=\"space-between\"\n                        alignItems=\"center\"\n                        classes={{ root: classes.filterHeader }}\n                    >\n                        <Typography variant=\"h4\">{t('admin-agreements-page.agreements-list')}</Typography>\n                        <IconButton onClick={() => setIsFilterListOpen((prev) => !prev)}>\n                            <FilterListIcon />\n                        </IconButton>\n                    </Grid>\n                    <Collapse in={isFiltersListOpen} unmountOnExit>\n                        <AgreementsFilter\n                            agreementType={agreementsTypeFilter}\n                            agreementStatus={agreementsStatusFilter}\n                            agreementKindergarten={agreementsKindergartenFilter}\n                            onChange={setAgreementFilter}\n                            onSubmit={sendFilterChanges}\n                        />\n                    </Collapse>\n                </div>\n                <Divider />\n                <AgreementsList\n                    isLoading={isKindergartenLoading}\n                    kindergartens={kindergartens}\n                    activeSortType={agreementsSortStatus.id}\n                    onSortChange={setSortStatus}\n                />\n            </Paper>\n        </PageContainer>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        paper: {\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        filterContainer: {\n            margin: `0 ${theme.spacing(2)}px ${theme.spacing(2)}px`,\n        },\n        filterHeader: {\n            paddingTop: 14,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/AssignInstructorModal/AssignInstructorModal.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/InstructorsTable/InstructorsTableRow.tsx",["1496"],"import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    TableRow,\n    TableCell,\n    IconButton,\n    Fade,\n    Box,\n    Collapse,\n    Tooltip,\n    makeStyles,\n    createStyles,\n    Theme,\n} from '@material-ui/core';\nimport {\n    KeyboardArrowDown as KeyboardArrowDownIcon,\n    KeyboardArrowUp as KeyboardArrowUpIcon,\n    AddCircle as AddIcon,\n} from '@material-ui/icons';\nimport { InstructorWithKindergartens } from '../types';\nimport { Assessment } from '../../../graphql/types';\n\ninterface Props {\n    instructor: InstructorWithKindergartens;\n    onAssignInstructorClick: (instructor: InstructorWithKindergartens) => void;\n    assessment: Assessment | null;\n}\n\nexport const InstructorsTableRow = ({ instructor, onAssignInstructorClick, assessment }: Props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const [open, setOpen] = useState(false);\n    const [showAddButton, setShowAddButton] = useState(false);\n\n    const { mail } = instructor;\n\n    return (\n        <>\n            <TableRow\n                className={classes.root}\n                onMouseEnter={() => setShowAddButton(true)}\n                onMouseLeave={() => setShowAddButton(false)}\n                data-testid=\"instructor-item\"\n            >\n                <TableCell>\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell>{mail}</TableCell>\n                <TableCell>{mail}</TableCell>\n                <TableCell data-testid=\"instructor-mail\">{mail}</TableCell>\n                <TableCell align=\"right\" className={classes.kindergartenCell}>\n                    {assessment && (\n                        <Fade in={showAddButton} mountOnEnter unmountOnExit timeout={500}>\n                            <div className={classes.iconButtonContainer}>\n                                <Tooltip\n                                    title={t('admin-instructors-page.table.tooltip') as string}\n                                    aria-label={t('admin-instructors-page.table.tooltip')}\n                                    placement=\"top\"\n                                    arrow\n                                >\n                                    <IconButton\n                                        onClick={() => onAssignInstructorClick(instructor)}\n                                        aria-label=\"assign instructor\"\n                                    >\n                                        <AddIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </div>\n                        </Fade>\n                    )}\n                    {instructor.kindergartens?.length}\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell className={classes.collapseCell} colSpan={5}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box margin={1}>Some content</Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& > *': {\n                borderBottom: 'unset',\n            },\n        },\n        collapseCell: {\n            padding: 0,\n        },\n        kindergartenCell: {\n            position: 'relative',\n            paddingRight: theme.spacing(10),\n        },\n        iconButtonContainer: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            background: theme.palette.background.paper,\n            top: 0,\n            left: 0,\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n            paddingRight: theme.spacing(8),\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/AssessmentsSelect.tsx",["1497"],"import React from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { Assessment } from '../../graphql/types';\n\ninterface Props {\n    label: string;\n    options: Assessment[];\n    value: Assessment;\n    onChange: (assessmentId: string) => void;\n}\n\nexport const AssessmentsSelect = ({ label, options, onChange, value }: Props) => {\n    return (\n        <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel id=\"test-select-label\">{label}</InputLabel>\n            <Select\n                labelId=\"test-select-label\"\n                id=\"test-select\"\n                label={label}\n                value={value._id}\n                onChange={(e) => onChange(e.target.value as string)}\n                MenuProps={{\n                    getContentAnchorEl: null,\n                    anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n                }}\n            >\n                {options.map((assessment) => (\n                    <MenuItem key={assessment._id} value={assessment._id}>\n                        {assessment.title}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/TagList.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/InstructorsTable/InstructorsTableContainer.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/InstructorsSelect.tsx",["1498"],"import React from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { PrivilegedUser } from '../../graphql/types';\n\ninterface Props {\n    label: string;\n    options: PrivilegedUser[];\n    value: PrivilegedUser | null;\n    onChange: (value: string) => void;\n}\n\nexport const InstructorsSelect = ({ label, options, value, onChange }: Props) => {\n    return (\n        <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel id=\"instructor-select-label\">{label}</InputLabel>\n            <Select\n                labelId=\"instructor-select-label\"\n                id=\"instructor-select\"\n                label={label}\n                value={value?._id || ''}\n                onChange={(e) => onChange(e.target.value as string)}\n                MenuProps={{\n                    getContentAnchorEl: null,\n                    anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n                }}\n            >\n                {options.map((instructor) => (\n                    <MenuItem key={instructor._id} value={instructor._id}>\n                        {instructor.mail}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/Articles/getArticleById.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ParentSettingsExpansionPanel.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/Toolbar.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentAgreementsPage/Agreements.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ReadingTime.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/KeyCodes.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticleListPage/ArticleNavigationMobile.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ArticleRedactor.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ArticleContent.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/NewsletterRecipient.tsx",["1499","1500","1501"],"import React, { FocusEvent } from 'react';\nimport { FormikErrors, FormikTouched } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, Divider, CardContent, Grid } from '@material-ui/core';\nimport { SingleSelect } from './SingleSelect';\nimport { MultipleSelect } from './MultipleSelect';\nimport { recipientType, parentsRecipients, kindergartensRecipients } from './data';\nimport { Kindergarten } from '../../graphql/types';\nimport { GeneralRecipient, SpecificRecipient, NewsletterFormValues } from './types';\nimport { useKindergartens } from '../../operations/queries/Kindergartens/getKindergartens';\n\nconst setLabel = (\n    generalType: GeneralRecipient | '',\n    specificType: SpecificRecipient | '',\n    recipients: string[],\n): string => {\n    if (generalType === 'PARENTS' && specificType === 'KINDERGARTEN') {\n        if (recipients.length) {\n            return 'newsletter.recipient-select-kindergarten-label-filled';\n        }\n\n        return 'newsletter.recipient-select-kindergarten-label';\n    }\n\n    if (recipients.length) {\n        return 'newsletter.recipient-single-kindergarten-label-filled';\n    }\n\n    return 'newsletter.recipient-single-kindergarten-label';\n};\n\nconst generateKindergardenOptions = (kindergardens: Kindergarten[]): { value: string; label: string }[] => {\n    const values = kindergardens.map((kindergarden) => {\n        const { _id, number, name } = kindergarden;\n\n        return {\n            value: _id,\n            label: `${number}, ${name}`,\n        };\n    });\n\n    return values;\n};\n\ninterface Props {\n    generalRecipientType: GeneralRecipient | '';\n    specificRecipientType: SpecificRecipient | '';\n    recipients: string[];\n    onChange: (name: string, value: string | string[]) => void;\n    onBlur: (e: FocusEvent<HTMLInputElement>) => void;\n    errors: FormikErrors<NewsletterFormValues>;\n    touched: FormikTouched<NewsletterFormValues>;\n}\n\nexport const NewsletterRecipent = ({\n    generalRecipientType,\n    specificRecipientType,\n    recipients,\n    onChange,\n    onBlur,\n    errors,\n    touched,\n}: Props) => {\n    const { t } = useTranslation();\n    const { kindergartenList } = useKindergartens();\n\n    const specificTypeOptionsValues = generalRecipientType === 'PARENTS' ? parentsRecipients : kindergartensRecipients;\n\n    const kidergartenInputValues = (selected: unknown) => {\n        if (Array.isArray(selected)) {\n            return selected\n                .map((id) => {\n                    const obj = kindergardenOptionsValues.find((kindergarden) => kindergarden.value === id);\n\n                    return obj ? obj.label : 'unknown label';\n                })\n                .join(', ');\n        }\n\n        return '';\n    };\n\n    if (!kindergartenList) return null;\n\n    const kindergardenOptionsValues = generateKindergardenOptions(kindergartenList);\n\n    return (\n        <Card>\n            <CardHeader title={t('newsletter.recipient-heading')} titleTypographyProps={{ variant: 'h4' }} />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <SingleSelect\n                            stateData={generalRecipientType}\n                            optionsValues={recipientType}\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            id=\"generalRecipientType\"\n                            label={t('newsletter.general-recipient-label')}\n                            name=\"generalRecipientType\"\n                            error={errors.generalRecipientType}\n                            touched={touched.generalRecipientType}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <SingleSelect\n                            stateData={specificRecipientType}\n                            optionsValues={specificTypeOptionsValues}\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            id=\"specificRecipientType\"\n                            label={t('newsletter.specific-recipient-label')}\n                            name=\"specificRecipientType\"\n                            disabled={!generalRecipientType}\n                            error={errors.specificRecipientType}\n                            touched={touched.specificRecipientType}\n                        />\n                    </Grid>\n                    {(specificRecipientType === 'KINDERGARTEN' || specificRecipientType === 'SINGLE') && (\n                        <Grid item xs={12}>\n                            <MultipleSelect\n                                stateData={recipients}\n                                optionsValues={kindergardenOptionsValues}\n                                onChange={onChange}\n                                onBlur={onBlur}\n                                id=\"recipients\"\n                                label={t(setLabel(generalRecipientType, specificRecipientType, recipients))}\n                                name=\"recipients\"\n                                renderValue={kidergartenInputValues}\n                                error={errors.recipients}\n                                touched={touched.recipients}\n                            />\n                        </Grid>\n                    )}\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/NewsletterContent.tsx",["1502","1503","1504"],"import React, { FocusEvent } from 'react';\nimport { FormikErrors, FormikTouched } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { TextField, IconButton, Card, CardHeader, CardContent, Divider, Grid } from '@material-ui/core';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { openDialog } from '../../utils/openDialog';\nimport { HelpModal } from './HelpModal';\nimport { Workspace } from './Workspace';\nimport { SingleSelect } from './SingleSelect';\nimport { newsletterTypes } from './data';\nimport { NewsletterType, NewsletterFormValues } from './types';\n\ninterface Props {\n    onChange: (name: string, value: string) => void;\n    onBlur: (e: FocusEvent<HTMLInputElement>) => void;\n    type: NewsletterType | '';\n    topic: string;\n    message: string;\n    errors: FormikErrors<NewsletterFormValues>;\n    touched: FormikTouched<NewsletterFormValues>;\n}\n\nexport const NewsletterContent = ({ onChange, onBlur, type, topic, message, errors, touched }: Props) => {\n    const { t } = useTranslation();\n\n    const handleModalOpen = () => {\n        openDialog(HelpModal, null);\n    };\n\n    return (\n        <Card>\n            <CardHeader\n                title={t('newsletter.content-heading')}\n                titleTypographyProps={{ variant: 'h4' }}\n                action={\n                    <IconButton aria-label=\"info\" onClick={handleModalOpen} color=\"primary\">\n                        <InfoOutlinedIcon />\n                    </IconButton>\n                }\n            />\n            <Divider />\n            <CardContent>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <SingleSelect\n                            stateData={type}\n                            optionsValues={newsletterTypes}\n                            onChange={onChange}\n                            onBlur={onBlur}\n                            id=\"newsletter-type\"\n                            label={t('newsletter.help-modal.type')}\n                            name=\"type\"\n                            error={errors.type}\n                            touched={touched.type}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            value={topic}\n                            name=\"topic\"\n                            variant=\"outlined\"\n                            label={topic ? t('newsletter.topic-input-label-filled') : t('newsletter.topic-input-label')}\n                            onChange={({ target: { name, value } }) => onChange(name, value)}\n                            onBlur={onBlur}\n                            fullWidth\n                            error={touched.topic && !!errors.topic}\n                            helperText={touched.topic && !!errors.topic && t(errors.topic)}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Workspace value={message} onChange={onChange} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/UsersPage/NoResults.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ArticlePage/ArticleVideo.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/UsersPage/UserPagePagination.tsx",["1505"],"import React from 'react';\nimport { IconButton } from '@material-ui/core/';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\ntype Props = {\n    page: number;\n    pageChangeHandler: (direction: string) => void;\n    documentsCount: number;\n    rowsPerPage: number;\n};\n\nexport const UserPagePagination = ({ page, pageChangeHandler, documentsCount, rowsPerPage }: Props) => {\n    return (\n        <div>\n            <IconButton disabled={page === 0} onClick={() => pageChangeHandler('PREV')}>\n                <ArrowBackIosIcon />\n            </IconButton>\n            <IconButton disabled={documentsCount < rowsPerPage} onClick={() => pageChangeHandler('NEXT')}>\n                <ArrowForwardIosIcon />\n            </IconButton>\n        </div>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/UsersPage/UsersTableRow.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAssessmentManagementPage/AssessmentHistoryList/AssessmentItem.tsx",["1506","1507","1508"],"import React from 'react';\nimport { createStyles, IconButton, makeStyles, TableCell, TableRow, Theme } from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\nimport { useTranslation } from 'react-i18next';\n\nimport { StatusChip } from '../../../components/StatusChip';\nimport { Assessment } from '../../../graphql/types';\n\ninterface Props {\n    value: Assessment;\n    onClick: (type: string, id: string) => void;\n}\n\nexport function AssessmentItem({ value, onClick }: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <TableRow key={value.title} hover onClick={handleRowClick} className={classes.row}>\n            <TableCell component=\"th\" scope=\"row\">\n                {value.title}\n            </TableCell>\n            <TableCell align=\"left\">{value.status === 'done' && <StatusChip value={value.status} />}</TableCell>\n            <TableCell>\n                {value.firstMeasurementStartDate} - {value.firstMeasurementEndDate}\n            </TableCell>\n            <TableCell align=\"left\">\n                {value.status !== 'done' && <StatusChip value={value.firstMeasurementStatus} />}\n            </TableCell>\n            <TableCell>\n                {value.lastMeasurementStartDate} - {value.lastMeasurementEndDate}\n            </TableCell>\n            <TableCell classes={{ root: classes.statusCell }} align=\"center\">\n                <div className={classes.itemRoot}>\n                    <div className=\"actionButtons\">\n                        <IconButton size=\"small\" onClick={handleEditClick}>\n                            <Edit classes={{ root: classes.icon }} titleAccess={t('manage-test-view.test-list.edit')} />\n                        </IconButton>\n                    </div>\n                    <div className=\"status\">\n                        {value.status !== 'done' && <StatusChip value={value.lastMeasurementStatus} />}\n                    </div>\n                </div>\n            </TableCell>\n        </TableRow>\n    );\n\n    function handleRowClick(e: React.MouseEvent<HTMLTableRowElement, MouseEvent>) {\n        onClick('details', value._id);\n    }\n\n    function handleEditClick(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n        e.stopPropagation();\n\n        onClick('edit', value._id);\n    }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        row: {\n            cursor: 'pointer',\n        },\n        icon: {\n            color: theme.palette.text.secondary,\n        },\n        statusCell: {\n            '& .actionButtons': {\n                display: 'none',\n            },\n            '&:hover .status': {\n                display: 'none',\n            },\n            '&:hover .actionButtons': {\n                display: 'block',\n            },\n        },\n        itemRoot: {\n            minWidth: 100,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/Measurement.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ChildProfile/ChildProfileResults/ExtendedGroupedTest/emptyViews/NoResultsBlock.tsx",[],["1509","1510","1511","1512","1513","1514","1515","1516","1517","1518"],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Clickable.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/setAgreementTypeFilter.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/addAgreementKindergartenFilters.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/setAgreementKindergartenFilter.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/setAgreementSortStatus.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/setAgreementStatusFilter.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/AssignInstructorModal/KindergartenTable.tsx",["1519"],"import React, { useEffect, useState } from 'react';\nimport {\n    TextField,\n    InputAdornment,\n    Checkbox,\n    createStyles,\n    makeStyles,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Theme,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from '@material-ui/icons';\nimport { useTranslation } from 'react-i18next';\nimport { Kindergarten } from '../../../graphql/types';\n\ninterface Props {\n    kindergartens: Kindergarten[];\n    onSelect: (id: string[]) => void;\n}\n\nexport const KindergartenTable = ({ kindergartens, onSelect }: Props) => {\n    const { t } = useTranslation();\n    const [searchPhrase, setSearchPhrase] = useState('');\n    const [selected, setSelected] = useState<string[]>([]);\n    const [selectedAll, setSelectedAll] = useState(false);\n\n    useEffect(() => {\n        onSelect(selected);\n    }, [onSelect, selected]);\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <TextField\n                id=\"search\"\n                label={t('add-test-view.basic-information-form.search')}\n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"off\"\n                value={searchPhrase}\n                onChange={({ target: { value } }) => setSearchPhrase(value)}\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <SearchIcon color=\"disabled\" />\n                        </InputAdornment>\n                    ),\n                }}\n            />\n            <TableContainer classes={{ root: classes.table }}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                    checked={selectedAll}\n                                    onClick={() => {\n                                        if (selectedAll) {\n                                            setSelected([]);\n                                        } else {\n                                            setSelected(kindergartens.map((kindergarten) => kindergarten._id));\n                                        }\n\n                                        setSelectedAll((prev) => !prev);\n                                    }}\n                                    data-testid=\"select-all\"\n                                    color=\"default\"\n                                />\n                            </TableCell>\n                            <TableCell>{t('add-test-view.kindergartens.kindergarten-name')}</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {kindergartens\n                            .filter((kindergarten) => {\n                                if (searchPhrase.length === 0) return true;\n\n                                return kindergarten.name.toLowerCase().includes(searchPhrase);\n                            })\n                            .map((kindergarten) => (\n                                <TableRow\n                                    key={kindergarten._id}\n                                    hover\n                                    role=\"row\"\n                                    onClick={() => {\n                                        setSelected((prev) => {\n                                            if (prev.includes(kindergarten._id)) {\n                                                return prev.filter((selectedId) => selectedId !== kindergarten._id);\n                                            }\n\n                                            return [...prev, kindergarten._id];\n                                        });\n                                    }}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox checked={selected.includes(kindergarten._id)} color=\"default\" />\n                                    </TableCell>\n                                    <TableCell classes={{ root: classes.kindergartenItem }}>\n                                        {kindergarten.number}/{kindergarten.name}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        table: {\n            height: 295,\n        },\n        searchFieldContainer: {\n            margin: theme.spacing(3, 0, 2),\n        },\n        kindergartenItem: {\n            cursor: 'pointer',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/data.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/AgreementsList.tsx",["1520","1521"],"import React from 'react';\nimport { TableContainer, Paper, Table, TableHead, TableBody, makeStyles, createStyles, Theme } from '@material-ui/core';\nimport { ChildrenFromKindergartenList } from './ChildrenFromKindergartenList';\nimport { KindergartenWithUsers } from '../../../graphql/types';\nimport { SortableHeader } from './SortableHeader';\nimport { ChildrenFromKindergartenListLoading } from './ChildrenFromKindergartenListLoading';\n\ninterface Props {\n    kindergartens: KindergartenWithUsers[];\n    activeSortType: string;\n    isLoading: boolean;\n    onSortChange: (value: string) => void;\n}\n\nexport function AgreementsList({ kindergartens, activeSortType, isLoading, onSortChange }: Props) {\n    const classes = useStyles();\n\n    if (isLoading)\n        return (\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <SortableHeader activeSortType={activeSortType} onSortChange={onSortChange} />\n                    </TableHead>\n                    <TableBody>\n                        <ChildrenFromKindergartenListLoading />\n                        <ChildrenFromKindergartenListLoading />\n                        <ChildrenFromKindergartenListLoading />\n                        <ChildrenFromKindergartenListLoading />\n                        <ChildrenFromKindergartenListLoading />\n                        <ChildrenFromKindergartenListLoading />\n                        <ChildrenFromKindergartenListLoading />\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        );\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <SortableHeader activeSortType={activeSortType} onSortChange={onSortChange} />\n                </TableHead>\n                <TableBody>\n                    {kindergartens.map((kindergarten) => (\n                        <ChildrenFromKindergartenList\n                            key={kindergarten._id}\n                            kindergarten={kindergarten}\n                            marketingAgreement={countAgreements(kindergarten, 'Marketing')}\n                            viewAgreement={countAgreements(kindergarten, 'Image')}\n                        />\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nfunction countAgreements(kindergarten: KindergartenWithUsers, name: string) {\n    return kindergarten.users.reduce(\n        (acc, user) => {\n            return {\n                value: acc.value + user.agreements.filter((a) => a.text === name && a.isSigned).length,\n                total: acc.total + user.agreements.filter((a) => a.text === name).length,\n            };\n        },\n        { value: 0, total: 0 },\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        table: {\n            minWidth: 650,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/AgreementsFilter.tsx",["1522","1523"],"import React from 'react';\nimport { makeStyles, Theme, createStyles, Grid } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nimport { AgreementTypeFilter, AgreementTypeFilters } from '../../../models/AgreementTypeFilters';\nimport { AgreementStatusFilter, AgreementStatusFilters } from '../../../models/AgreementStatusFilter';\nimport {\n    AgreementKindergartenFilter,\n    AgreementKindergartenFilters,\n} from '../../../models/AgreementKindergartenFilters';\nimport { ButtonSecondary } from '../../../components/Button';\n\nimport { AgreementTypeInput } from './AgreementTypeInput';\nimport { AgreementStatusInput } from './AgreementStatusInput';\nimport { AgreementKindergartenInput } from './AgreementKindergartenInput';\n\ninterface Props {\n    agreementType: AgreementTypeFilter;\n    agreementStatus: AgreementStatusFilter;\n    agreementKindergarten: AgreementKindergartenFilter[];\n    onChange: (type: string, value: string | string[]) => void;\n    onSubmit: () => void;\n}\n\nexport function AgreementsFilter({ agreementType, agreementStatus, agreementKindergarten, onChange, onSubmit }: Props) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Grid container direction=\"row\" spacing={2}>\n                <Grid item xs={6}>\n                    <AgreementTypeInput value={agreementType.id} onChange={onChange} />\n                </Grid>\n                <Grid item xs={6}>\n                    <AgreementStatusInput value={agreementStatus.id} onChange={onChange} />\n                </Grid>\n            </Grid>\n            <Grid container>\n                <AgreementKindergartenInput values={agreementKindergarten} onChange={onChange} />\n            </Grid>\n            <Grid container justify=\"flex-end\">\n                <ButtonSecondary\n                    variant=\"outlined\"\n                    onClick={() => {\n                        onChange('TYPE', AgreementTypeFilters.SHOW_ALL.id);\n                        onChange('STATUS', AgreementStatusFilters.SHOW_ALL.id);\n                        onChange('KINDERGARTEN', [AgreementKindergartenFilters.SHOW_ALL.id]);\n                    }}\n                >\n                    Wyczyść\n                </ButtonSecondary>\n                <ButtonSecondary variant=\"contained\" className={classes.filterButton} onClick={onSubmit}>\n                    <CheckCircleOutlineIcon />\n                </ButtonSecondary>\n            </Grid>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            display: 'flex',\n            marginBottom: theme.spacing(2),\n            minWidth: 160,\n            flex: 1,\n        },\n        filterButton: {\n            marginLeft: theme.spacing(2),\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminInstructorsPage/InstructorsTable/InstructorsTableHead.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/Agreements/useUpdateAgreements.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ExpansionPanelItem.tsx",["1524"],"import React, { FC } from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useTranslation } from 'react-i18next';\nimport { Me } from '../../graphql/types';\n\nexport interface Props {\n    user: Me;\n    name: string;\n    onTogglePanelExpansion: (name: string) => void;\n    expanded: boolean;\n    title: string;\n    panel: FC<{ user: Me; onToggle: (name: string) => void; name: string }>;\n}\n\nexport function ExpansionPanelItem({ user, name, onTogglePanelExpansion, expanded, title, panel }: Props) {\n    const { t } = useTranslation();\n\n    const Panel = panel;\n\n    return (\n        <Accordion expanded={expanded} onChange={() => onTogglePanelExpansion(name)}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls={`${name}\"-content\"`}\n                id={`${name}\"-title\"`}\n            >\n                <Typography variant={'subtitle2'}>{t(title)}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <Panel user={user} onToggle={onTogglePanelExpansion} name={name} />\n            </AccordionDetails>\n        </Accordion>\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/LegalNotesPanel/LegalNotesPanel.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/LoadingButton.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangePasswordPanel.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/RoleToggleButton.tsx",["1525"],"import React from 'react';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props {\n    value: string;\n    onChange: (value: string) => void;\n}\n\nexport function RoleToggleButton({ value, onChange }: Props) {\n    const { t } = useTranslation();\n\n    return (\n        <ToggleButtonGroup\n            exclusive\n            aria-label=\"text alignment\"\n            size=\"small\"\n            value={value}\n            onChange={(e, toggleValue) => {\n                if (toggleValue) {\n                    onChange(toggleValue);\n                }\n            }}\n        >\n            <ToggleButton value=\"parent\" aria-label=\"left aligned\">\n                {t('admin-setting-page.keycode-generation.role-parent')}\n            </ToggleButton>\n            <ToggleButton value=\"instructor\" aria-label=\"right aligned\">\n                {t('admin-setting-page.keycode-generation.role-instructor')}\n            </ToggleButton>\n        </ToggleButtonGroup>\n    );\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/ActiveKeysList.tsx",["1526"],"import React from 'react';\nimport {\n    createStyles,\n    Divider,\n    Grid,\n    makeStyles,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Theme,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport clsx from 'clsx';\n\nimport { KeyCodeSeries } from '../../../graphql/types';\nimport { FilenameButton } from './FilenameButton';\nimport dayjs from '../../../localizedMoment';\n\ninterface Props {\n    keyCodeSeries: KeyCodeSeries[];\n    onKeyCodeClick: (series: string) => void;\n}\n\nexport function ActiveKeysList({ keyCodeSeries, onKeyCodeClick }: Props) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <Grid container direction=\"column\" spacing={2}>\n            <Grid item data-testid=\"total-keycodes\">\n                {t('admin-setting-page.keycode-generation.keycode-amount-total', {\n                    total: countTotalKeys(keyCodeSeries),\n                })}\n            </Grid>\n            <Grid item>\n                <Divider variant=\"fullWidth\" />\n            </Grid>\n            <Grid item>\n                <TableContainer>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell classes={{ root: classes.cell }}>\n                                    {t('admin-setting-page.keycode-generation.filename')}\n                                </TableCell>\n                                <TableCell classes={{ root: classes.cell }}>\n                                    {t('admin-setting-page.keycode-generation.target')}\n                                </TableCell>\n                                <TableCell classes={{ root: classes.cell }}>\n                                    {t('admin-setting-page.keycode-generation.keycode-amount')}\n                                </TableCell>\n                                <TableCell classes={{ root: classes.cell }}>\n                                    {t('admin-setting-page.keycode-generation.expires-at')}\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {[...keyCodeSeries]\n                                .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n                                .map(({ series, count, target, date }) => {\n                                    const expirationDate = dayjs(date).add(7, 'days');\n\n                                    return (\n                                        <TableRow key={series} data-testid=\"keycode-item\">\n                                            <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cell }}>\n                                                <span>\n                                                    <FilenameButton\n                                                        text={`mw-keycodes-${series}.clsx`}\n                                                        tooltip={t('admin-setting-page.keycode-generation.download')}\n                                                        onClick={() => onKeyCodeClick(series)}\n                                                    />\n                                                </span>\n                                            </TableCell>\n                                            <TableCell\n                                                classes={{ root: clsx(classes.targetCell, classes.cell) }}\n                                                data-testid=\"keycode-item-target\"\n                                            >\n                                                {target}\n                                            </TableCell>\n                                            <TableCell\n                                                classes={{ root: classes.cell }}\n                                                data-testid=\"keycode-item-count\"\n                                            >\n                                                {count}\n                                            </TableCell>\n                                            <TableCell classes={{ root: classes.cell }}>\n                                                {expirationDate.toDate().toLocaleDateString()}&nbsp;(\n                                                {expirationDate.fromNow()})\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </Grid>\n    );\n}\n\nfunction countTotalKeys(keyCodeSeries: KeyCodeSeries[]) {\n    return keyCodeSeries.reduce((acc, keyCode) => {\n        return acc + keyCode.count;\n    }, 0);\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        downloadIcon: {\n            color: theme.palette.success.main,\n        },\n        targetCell: {\n            textTransform: 'uppercase',\n        },\n        cell: {\n            borderBottom: 'none',\n        },\n        button: {\n            textTransform: 'none',\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/AccountDeletionPanel/AccountDeletionPanel.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/KeyCodesToGenerateTextfield.tsx",["1527","1528"],"import React from 'react';\nimport { createStyles, makeStyles, TextField, Theme } from '@material-ui/core/';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props {\n    value: number;\n    onChange: (amount: number) => void;\n}\n\nexport function KeyCodesToGenerateTextfield({ value, onChange }: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <TextField\n            data-testid=\"keycodes-count-input\"\n            type=\"number\"\n            value={value}\n            onChange={({ target: { value: amount } }) =>\n                !Number.isNaN(parseInt(amount, 10)) && onChange(parseInt(amount, 10))\n            }\n            variant=\"outlined\"\n            classes={{ root: classes.keyCodeTextfield }}\n            label={t('admin-setting-page.keycode-generation.keycode-amount')}\n            InputLabelProps={{\n                shrink: true,\n            }}\n            InputProps={{ inputProps: { min: 1, max: 1000 } }}\n        />\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        keyCodeTextfield: {\n            width: 200,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/FilenameButton.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/useGenerateExcel.tsx",["1529"],"import { writeFile } from 'xlsx';\n\nimport { getKeyCodesWorkbook } from './getKeyCodesWorkbook';\nimport { useKeyCodes } from '../../../operations/queries/KeyCodes/getKeyCodes';\n\nexport function useGenerateExcel(onCreate: (filename: string) => void) {\n    const { getKeyCodes, keyCodes } = useKeyCodes();\n\n    return {\n        generateExcel(series: string) {\n            getKeyCodes(series);\n\n            if (keyCodes.length > 0) {\n                const filename = `mw-keycodes-${series}.xlsx`;\n                const workbook = getKeyCodesWorkbook(keyCodes);\n\n                writeFile(workbook, filename);\n\n                onCreate(filename);\n            }\n        },\n    };\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/MultipleSelect.tsx",["1530","1531","1532","1533"],"import React, { FocusEvent, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MenuItem, FormControl, InputLabel, Select, Checkbox, ListItemText, FormHelperText } from '@material-ui/core';\n\ninterface Props {\n    stateData: string[];\n    optionsValues: {\n        value: string;\n        label: string;\n    }[];\n    onChange: (name: string, value: string[]) => void;\n    onBlur: (e: FocusEvent<HTMLInputElement>) => void;\n    id: string;\n    label: string;\n    name: string;\n    disabled?: boolean;\n    renderValue: (value: unknown) => ReactNode;\n    error?: string | string[];\n    touched?: boolean;\n}\n\nexport const MultipleSelect = ({\n    stateData,\n    optionsValues,\n    onChange,\n    onBlur,\n    id,\n    label,\n    name,\n    disabled,\n    renderValue,\n    error,\n    touched,\n}: Props) => {\n    const { t } = useTranslation();\n\n    return (\n        <FormControl variant=\"outlined\" fullWidth error={touched && !!error}>\n            <InputLabel id={id}>{label}</InputLabel>\n            <Select\n                labelId={id}\n                label={label}\n                name={name}\n                disabled={disabled}\n                value={stateData || ''}\n                onChange={({ target: { name: selectName, value } }) => {\n                    onChange(selectName as string, value as string[]);\n                }}\n                onBlur={onBlur}\n                multiple\n                renderValue={renderValue}\n                MenuProps={{\n                    anchorOrigin: {\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    },\n                    transformOrigin: {\n                        vertical: 'top',\n                        horizontal: 'left',\n                    },\n                    getContentAnchorEl: null,\n                }}\n                error={touched && !!error}\n            >\n                {optionsValues.map((item) => {\n                    const { value, label: selectLabel } = item;\n\n                    return (\n                        <MenuItem key={value} value={value}>\n                            <Checkbox checked={stateData.includes(value)} color=\"primary\" />\n                            <ListItemText primary={selectLabel} />\n                        </MenuItem>\n                    );\n                })}\n            </Select>\n            {touched && error && <FormHelperText>{t(error)}</FormHelperText>}\n        </FormControl>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/Workspace.tsx",["1534","1535"],"import ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles, createStyles } from '@material-ui/core';\nimport { modules, formats } from './workspaceConfig';\nimport { Theme } from '../../theme';\n\ninterface Props {\n    value: string;\n    onChange: (name: string, value: string) => void;\n}\n\nexport const Workspace = ({ value, onChange }: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <ReactQuill\n            className={classes.workspace}\n            value={value}\n            onChange={(content) => onChange('message', content)}\n            theme=\"snow\"\n            modules={modules}\n            formats={formats}\n            placeholder={t('newsletter.placeholder')}\n        />\n    );\n};\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        workspace: {\n            borderRadius: '4',\n            '& .ql-container': {\n                minHeight: 170,\n                borderRadius: '0 0 4px 4px',\n            },\n            '& .ql-toolbar': {\n                borderRadius: '4px 4px 0 0',\n                background: theme.palette.background.default,\n            },\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/SingleSelect.tsx",["1536","1537","1538"],"import React, { FocusEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MenuItem, FormControl, InputLabel, Select, FormHelperText } from '@material-ui/core';\n\ninterface Props {\n    stateData: string;\n    optionsValues: {\n        value: string;\n        label: string;\n    }[];\n    onChange: (name: string, value: string) => void;\n    onBlur: (e: FocusEvent<HTMLInputElement>) => void;\n    id: string;\n    label: string;\n    name: string;\n    disabled?: boolean;\n    error?: string;\n    touched?: boolean;\n}\n\nexport const SingleSelect = ({\n    stateData,\n    optionsValues,\n    onChange,\n    onBlur,\n    id,\n    label,\n    name,\n    disabled,\n    error,\n    touched,\n}: Props) => {\n    const { t } = useTranslation();\n\n    return (\n        <FormControl variant=\"outlined\" fullWidth error={touched && !!error}>\n            <InputLabel id={id}>{label}</InputLabel>\n            <Select\n                labelId={id}\n                label={`${label} ${error}`}\n                name={name}\n                disabled={disabled}\n                value={stateData || ''}\n                onChange={({ target: { name: selectName, value } }) => {\n                    onChange(selectName as string, value as string);\n                }}\n                onBlur={onBlur}\n                MenuProps={{\n                    anchorOrigin: {\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    },\n                    transformOrigin: {\n                        vertical: 'top',\n                        horizontal: 'left',\n                    },\n                    getContentAnchorEl: null,\n                }}\n                error={touched && !!error}\n            >\n                {optionsValues.map((item) => {\n                    const { value, label: selectLabel } = item;\n\n                    return (\n                        <MenuItem key={value} value={value}>\n                            {t(selectLabel)}\n                        </MenuItem>\n                    );\n                })}\n            </Select>\n            {touched && error && <FormHelperText>{t(error)}</FormHelperText>}\n        </FormControl>\n    );\n};\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/HelpModal.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/KeyCodes/getKeyCodesSeries.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/mutations/KeyCodes/createKeyCodes.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangePasswordPanelReducer.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminCodesPage/KeyCodes/getKeyCodesWorkbook.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/ChildrenFromKindergartenList.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/NewsletterPage/workspaceConfig.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/SortableHeader.tsx",["1539"],"import React from 'react';\nimport { TableCell, TableRow, Theme, makeStyles, createStyles, IconButton } from '@material-ui/core';\nimport clsx from 'clsx';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { AgreementSortStatus } from '../../../models/AgreementSortStatus';\n\ninterface Props {\n    activeSortType: string;\n    onSortChange: (value: string) => void;\n}\n\nexport function SortableHeader({ activeSortType, onSortChange }: Props) {\n    const classes = useStyles();\n\n    return (\n        <TableRow>\n            <TableCell />\n            <ArrowedCell\n                isUpward={isUpwardSort(activeSortType, AgreementSortStatus.BY_NAME_RISING.id)}\n                isActive={isActiveSort(activeSortType, [\n                    AgreementSortStatus.BY_NAME_RISING.id,\n                    AgreementSortStatus.BY_NAME_FALLING.id,\n                ])}\n                text=\"Nazwa przedszkola\"\n                onClick={() =>\n                    onSortChange(\n                        omitActiveStatus(\n                            activeSortType,\n                            AgreementSortStatus.BY_NAME_RISING.id,\n                            AgreementSortStatus.BY_NAME_FALLING.id,\n                        ),\n                    )\n                }\n            />\n            <ArrowedCell\n                isUpward={isUpwardSort(activeSortType, AgreementSortStatus.BY_IMAGE_RISING.id)}\n                isActive={isActiveSort(activeSortType, [\n                    AgreementSortStatus.BY_IMAGE_RISING.id,\n                    AgreementSortStatus.BY_IMAGE_FALLING.id,\n                ])}\n                text=\"Ilość zgód wizerunkowych\"\n                onClick={() =>\n                    onSortChange(\n                        omitActiveStatus(\n                            activeSortType,\n                            AgreementSortStatus.BY_IMAGE_RISING.id,\n                            AgreementSortStatus.BY_IMAGE_FALLING.id,\n                        ),\n                    )\n                }\n            />\n            <ArrowedCell\n                isUpward={isUpwardSort(activeSortType, AgreementSortStatus.BY_MARKETING_RISING.id)}\n                isActive={isActiveSort(activeSortType, [\n                    AgreementSortStatus.BY_MARKETING_RISING.id,\n                    AgreementSortStatus.BY_MARKETING_FALLING.id,\n                ])}\n                text=\"Ilość zgód margetingowych\"\n                onClick={() =>\n                    onSortChange(\n                        omitActiveStatus(\n                            activeSortType,\n                            AgreementSortStatus.BY_MARKETING_RISING.id,\n                            AgreementSortStatus.BY_MARKETING_FALLING.id,\n                        ),\n                    )\n                }\n            />\n            <TableCell component=\"th\" scope=\"row\">\n                <span className={classes.cellContainer}>Statusy</span>\n            </TableCell>\n        </TableRow>\n    );\n}\n\ninterface ArrowedCellProps {\n    text: string;\n    isUpward: boolean;\n    isActive: boolean;\n    onClick: () => void;\n}\n\nfunction ArrowedCell({ text, isUpward, isActive, onClick }: ArrowedCellProps) {\n    const classes = useStyles();\n\n    return (\n        <TableCell component=\"th\" scope=\"row\">\n            <span className={classes.cellContainer} onClick={onClick}>\n                <IconButton>\n                    {isUpward ? (\n                        <ArrowUpwardIcon\n                            classes={{ root: clsx({ [classes.arrow]: true, [classes.isActive]: isActive }) }}\n                        />\n                    ) : (\n                        <ArrowDownwardIcon\n                            classes={{ root: clsx({ [classes.arrow]: true, [classes.isActive]: isActive }) }}\n                        />\n                    )}\n                </IconButton>\n                <span>{text}</span>\n            </span>\n        </TableCell>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        cellContainer: {\n            display: 'flex',\n            alignItems: 'center',\n            userSelect: 'none',\n        },\n        arrow: {\n            color: theme.palette.text.hint,\n            cursor: 'pointer',\n        },\n        isActive: {\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n\nfunction isUpwardSort(activeSort: string, sortType: string) {\n    return activeSort === sortType;\n}\n\nfunction isActiveSort(activeSort: string, sortTypes: string[]) {\n    return sortTypes.includes(activeSort);\n}\n\nfunction omitActiveStatus(activeStatus: string, aStatus: string, bStatus: string) {\n    if (activeStatus === aStatus) return bStatus;\n\n    return aStatus;\n}\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/AgreementTypeInput.tsx",["1540","1541"],"import React from 'react';\nimport { createStyles, FormControl, InputLabel, makeStyles, MenuItem, Select, Theme } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { FilterMenuProps } from './FilterMenuProps';\nimport { AgreementTypeFilters } from '../../../models/AgreementTypeFilters';\n\ninterface Props {\n    value: string;\n    onChange: (type: string, value: string) => void;\n}\n\nexport function AgreementTypeInput({ value: currentValue, onChange }: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">{t('agreements-filter.by-agreement-type')}</InputLabel>\n            <Select\n                label={t('agreements-filter.by-agreement-type')}\n                value={currentValue}\n                onChange={({ target: { name, value } }) => onChange(name as string, value as string)}\n                fullWidth\n                inputProps={{\n                    name: 'TYPE',\n                    id: 'outlined-age-native-simple',\n                }}\n                MenuProps={FilterMenuProps}\n            >\n                <MenuItem value={AgreementTypeFilters.SHOW_ALL.id}>\n                    {t(AgreementTypeFilters.SHOW_ALL.displayNameKey)}\n                </MenuItem>\n                <MenuItem value={AgreementTypeFilters.MARKETING_AGREEMENT.id}>\n                    {t(AgreementTypeFilters.MARKETING_AGREEMENT.displayNameKey)}\n                </MenuItem>\n                <MenuItem value={AgreementTypeFilters.IMAGE_AGREEMENT.id}>\n                    {t(AgreementTypeFilters.IMAGE_AGREEMENT.displayNameKey)}\n                </MenuItem>\n            </Select>\n        </FormControl>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            display: 'flex',\n            marginBottom: theme.spacing(2),\n            minWidth: 160,\n            flex: 1,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/ChildrenFromKindergartenListLoading.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/AgreementStatusInput.tsx",["1542","1543"],"import React from 'react';\nimport { createStyles, FormControl, InputLabel, makeStyles, MenuItem, Select, Theme } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { FilterMenuProps } from './FilterMenuProps';\nimport { AgreementStatusFilters } from '../../../models/AgreementStatusFilter';\n\ninterface Props {\n    value: string;\n    onChange: (type: string, value: string) => void;\n}\n\nexport function AgreementStatusInput({ value: currentValue, onChange }: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">{t('agreements-filter.by-agreement-status')}</InputLabel>\n            <Select\n                label={t('agreements-filter.by-agreement-status')}\n                value={currentValue}\n                onChange={({ target: { name, value } }) => onChange(name as string, value as string)}\n                fullWidth\n                inputProps={{\n                    name: 'STATUS',\n                    id: 'age-native-simple',\n                }}\n                MenuProps={FilterMenuProps}\n            >\n                <MenuItem value={AgreementStatusFilters.SHOW_ALL.id}>\n                    {t(AgreementStatusFilters.SHOW_ALL.displayNameKey)}\n                </MenuItem>\n                <MenuItem value={AgreementStatusFilters.GIVEN_AGREEMENT.id}>\n                    {t(AgreementStatusFilters.GIVEN_AGREEMENT.displayNameKey)}\n                </MenuItem>\n                <MenuItem value={AgreementStatusFilters.NOT_GIVEN_AGREEMENT.id}>\n                    {t(AgreementStatusFilters.NOT_GIVEN_AGREEMENT.displayNameKey)}\n                </MenuItem>\n            </Select>\n        </FormControl>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            display: 'flex',\n            marginBottom: theme.spacing(2),\n            minWidth: 160,\n            flex: 1,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/AgreementKindergartenInput.tsx",["1544","1545"],"import React from 'react';\nimport {\n    Checkbox,\n    createStyles,\n    FormControl,\n    InputLabel,\n    ListItemText,\n    makeStyles,\n    MenuItem,\n    Select,\n    Theme,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { FilterMenuProps } from './FilterMenuProps';\nimport { AgreementKindergartenFilter } from '../../../models/AgreementKindergartenFilters';\n\ninterface Props {\n    values: AgreementKindergartenFilter[];\n    onChange: (type: string, value: string[]) => void;\n}\n\nexport function AgreementKindergartenInput({ values: currentValues, onChange }: Props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"outlined-age-native-simple\">{t('agreements-filter.by-kindergarten')}</InputLabel>\n            <Select\n                multiple\n                label={t('agreements-filter.by-agreement-status')}\n                renderValue={(selected) => {\n                    return (selected as string[])\n                        .map((e) => {\n                            const option = currentValues.find((k) => k.id === e);\n\n                            if (!option) return e;\n\n                            return option.displayNameKey ? t(option.displayNameKey) : option.displayName;\n                        })\n                        .join(', ');\n                }}\n                value={currentValues.filter((e) => e.selected).map((e) => e.id)}\n                onChange={({ target: { name, value } }) => onChange(name as string, value as string[])}\n                fullWidth\n                inputProps={{\n                    name: 'KINDERGARTEN',\n                    id: 'age-native-simple',\n                }}\n                MenuProps={FilterMenuProps}\n            >\n                {currentValues.map((kindergarten) => {\n                    return (\n                        <MenuItem key={kindergarten.id} value={kindergarten.id}>\n                            <Checkbox checked={kindergarten.selected} />\n                            <ListItemText\n                                primary={\n                                    kindergarten.displayNameKey\n                                        ? t(kindergarten.displayNameKey)\n                                        : kindergarten.displayName\n                                }\n                            />\n                        </MenuItem>\n                    );\n                })}\n            </Select>\n        </FormControl>\n    );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            display: 'flex',\n            marginBottom: theme.spacing(2),\n            minWidth: 160,\n            flex: 1,\n        },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/operations/queries/KeyCodes/getKeyCodes.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangepasswordPanelFormControls/ButtonResetOldPassword.tsx",["1546"],"import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { ButtonSecondary } from '../../../../components/Button';\nimport { Me } from '../../../../graphql/types';\nimport { useAuthorizeMe } from '../../../../operations/mutations/User/authorizeMe';\nimport {\n    ChangePasswordPanelComponentsProps,\n    EMAIL_IS_CORRECT,\n    UPDATE_HELPER_TEXT,\n    PASSWORD_RESET_EMAIL_SENT,\n} from '../ChangePasswordPanelReducer';\nimport { openSnackbar } from '../../../../components/Snackbar/openSnackbar';\nimport { useResetPassword } from '../../../../operations/mutations/User/resetPassword';\n\ninterface Props extends ChangePasswordPanelComponentsProps {\n    user: Me | null;\n}\n\nexport const ButtonResetOldPassword = (props: Props) => {\n    const classes = useStyles();\n    const { state, dispatch, user } = props;\n    const { resetPasswordButtonDisabled } = state;\n    const { resetPassword } = useResetPassword(\n        () =>\n            resetPasswordOnSuccess(\n                `${t('forgot-password-page.email-sent')} ${t('forgot-password-page.when-received')}`,\n            ),\n        () => resetPasswordOnError,\n    );\n    const { t } = useTranslation();\n\n    const resetPasswordOnSuccess = (text: string) => {\n        openSnackbar({\n            text,\n        })\n            .then((result) => {\n                if (result.close) {\n                    dispatch({ type: PASSWORD_RESET_EMAIL_SENT });\n                    // TODO: Snackbar closed. Maybe Accordion should close automaticaly, aswell??;\n                }\n            })\n            .catch((reason) => {\n                dispatch({ type: PASSWORD_RESET_EMAIL_SENT });\n                console.log(reason.message);\n            });\n    };\n\n    const resetPasswordOnError = () => {\n        openSnackbar({ text: t('settings-page.something-went-wrong'), severity: 'error' });\n    };\n\n    const checkOldPassword = useAuthorizeMe(\n        () => {\n            dispatch({ type: EMAIL_IS_CORRECT });\n            if (user) resetPassword(user.mail);\n        },\n        () => {\n            const helperText = t('settings-page.wrong-old-password');\n            dispatch({ type: UPDATE_HELPER_TEXT, payload: { value: helperText } });\n        },\n    );\n\n    const handleClick = () => {\n        const { oldPassword } = state;\n        if (user) {\n            checkOldPassword.authorizeMe(user.mail, oldPassword);\n        }\n    };\n\n    return (\n        <div className={classes.wrapper}>\n            <ButtonSecondary\n                type=\"submit\"\n                variant=\"contained\"\n                onClick={handleClick}\n                disabled={resetPasswordButtonDisabled}\n            >\n                {t('settings-page.reset-old-password')}\n            </ButtonSecondary>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        wrapper: { display: 'flex', justifyContent: 'flex-end', marginBottom: theme.spacing(2) },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangepasswordPanelFormControls/FormControlOldPassword.tsx",["1547"],"import React from 'react';\nimport {\n    FormControl,\n    FormHelperText,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    createStyles,\n    makeStyles,\n    Theme,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport {\n    ChangePasswordPanelComponentsProps,\n    CHANGE_OLD_PASSWORD,\n    TOGGLE_OLD_PASSWORD_VISIBILITY,\n} from '../ChangePasswordPanelReducer';\n\n// TODO: Should ENTER pressed during typing the password do the same action as BUTTON click? - invoke password reset process\nexport const FormControlOldPassword = (props: ChangePasswordPanelComponentsProps) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const { state, dispatch } = props;\n    const { oldPassword, oldPasswordDisabled, oldPasswordError, oldPasswordHelperText, showOldPassword } = state;\n\n    return (\n        <FormControl variant=\"outlined\" className={classes.form}>\n            <InputLabel htmlFor=\"old-password\">{t('settings-page.old-password')}</InputLabel>\n            <OutlinedInput\n                required\n                fullWidth\n                id=\"old-password\"\n                label={t('settings-page.old-password')}\n                type={showOldPassword ? 'text' : 'password'}\n                value={oldPassword}\n                error={oldPasswordError}\n                disabled={oldPasswordDisabled}\n                onChange={(event) => dispatch({ type: CHANGE_OLD_PASSWORD, payload: { value: event.target.value } })}\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <IconButton\n                            aria-label=\"toggle password visibility\"\n                            edge=\"end\"\n                            onClick={() => dispatch({ type: TOGGLE_OLD_PASSWORD_VISIBILITY })}\n                        >\n                            {showOldPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                    </InputAdornment>\n                }\n                inputProps={{\n                    tabIndex: 1,\n                }}\n            />\n            <FormHelperText error={oldPasswordError}>{oldPasswordHelperText || ''}</FormHelperText>\n        </FormControl>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        form: { display: 'block', marginBottom: '15px', width: '100%' },\n    }),\n);\n","/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/ParentSettingsPage/ChangePasswordPanel/ChangepasswordPanelFormControls/ButtonSendMessage.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/AccountDeletionPanel/ModalSettings.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsFilter/FilterMenuProps.ts",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/pages/AdminAgreementsPage/AgreementsList/KindergartenAgreementsList.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/Icons/Status.tsx",[],"/Users/ppietruszka/Documents/projects/mali-wspaniali-client/client/src/components/AccountDeletionPanel/useParentsSelectOption.tsx",["1548"],"import { useTranslation } from 'react-i18next';\n\nexport interface Option {\n    value: string;\n    label: string;\n    helperLabel?: string;\n}\n\nexport function useParentsSelectOptions(): { getOptions: (name: string) => Option[] } {\n    const { t } = useTranslation();\n\n    const options: { [index: string]: Option[] } = {\n        'settings-message': [\n            {\n                value: 'changePassword',\n                label: t('settings-modal.select-options.1'),\n            },\n            {\n                value: 'testResult',\n                label: t('settings-modal.select-options.2'),\n            },\n            {\n                value: 'classesInKindergarden',\n                label: t('settings-modal.select-options.3'),\n            },\n            {\n                value: 'deleteAccount',\n                label: t('settings-modal.select-options.4'),\n            },\n            {\n                value: 'others',\n                label: t('settings-modal.select-options.5'),\n            },\n        ],\n    };\n\n    return {\n        getOptions: (name: string) => options[name],\n    };\n}\n",{"ruleId":"1549","replacedBy":"1550"},{"ruleId":"1551","replacedBy":"1552"},{"ruleId":"1553","replacedBy":"1554"},{"ruleId":"1555","replacedBy":"1556"},{"ruleId":"1557","replacedBy":"1558"},{"ruleId":"1559","replacedBy":"1560"},{"ruleId":"1561","replacedBy":"1562"},{"ruleId":"1563","replacedBy":"1564"},{"ruleId":"1565","replacedBy":"1566"},{"ruleId":"1567","replacedBy":"1568"},{"ruleId":"1569","severity":1,"message":"1570","line":29,"column":29,"nodeType":"1571","messageId":"1572","endLine":29,"endColumn":40},{"ruleId":"1569","severity":1,"message":"1570","line":42,"column":29,"nodeType":"1571","messageId":"1572","endLine":42,"endColumn":40},{"ruleId":"1569","severity":1,"message":"1570","line":54,"column":13,"nodeType":"1571","messageId":"1572","endLine":54,"endColumn":26},{"ruleId":"1569","severity":1,"message":"1570","line":79,"column":13,"nodeType":"1571","messageId":"1572","endLine":79,"endColumn":24},{"ruleId":"1573","severity":1,"message":"1574","line":92,"column":18,"nodeType":"1575","messageId":"1576","endLine":92,"endColumn":57},{"ruleId":"1573","severity":1,"message":"1574","line":93,"column":17,"nodeType":"1575","messageId":"1576","endLine":93,"endColumn":56},{"ruleId":"1569","severity":1,"message":"1570","line":117,"column":21,"nodeType":"1571","messageId":"1572","endLine":117,"endColumn":32},{"ruleId":"1577","severity":1,"message":"1578","line":14,"column":19,"nodeType":"1579","messageId":"1580","endLine":14,"endColumn":22,"suggestions":"1581"},{"ruleId":"1577","severity":1,"message":"1578","line":14,"column":31,"nodeType":"1579","messageId":"1580","endLine":14,"endColumn":34,"suggestions":"1582"},{"ruleId":"1569","severity":1,"message":"1570","line":34,"column":13,"nodeType":"1571","messageId":"1572","endLine":34,"endColumn":24},{"ruleId":"1573","severity":1,"message":"1583","line":15,"column":60,"nodeType":"1575","messageId":"1576","endLine":15,"endColumn":61},{"ruleId":"1569","severity":1,"message":"1570","line":107,"column":5,"nodeType":"1571","messageId":"1572","endLine":107,"endColumn":16},{"ruleId":"1577","severity":1,"message":"1578","line":168,"column":66,"nodeType":"1579","messageId":"1580","endLine":168,"endColumn":69,"suggestions":"1584"},{"ruleId":"1577","severity":1,"message":"1578","line":184,"column":65,"nodeType":"1579","messageId":"1580","endLine":184,"endColumn":68,"suggestions":"1585"},{"ruleId":"1569","severity":1,"message":"1570","line":91,"column":60,"nodeType":"1571","messageId":"1572","endLine":91,"endColumn":71},{"ruleId":"1577","severity":1,"message":"1578","line":113,"column":20,"nodeType":"1579","messageId":"1580","endLine":113,"endColumn":23,"suggestions":"1586"},{"ruleId":"1577","severity":1,"message":"1578","line":117,"column":20,"nodeType":"1579","messageId":"1580","endLine":117,"endColumn":23,"suggestions":"1587"},{"ruleId":"1573","severity":1,"message":"1588","line":27,"column":16,"nodeType":"1575","messageId":"1576","endLine":27,"endColumn":39},{"ruleId":"1573","severity":1,"message":"1589","line":31,"column":12,"nodeType":"1575","messageId":"1576","endLine":31,"endColumn":24},{"ruleId":"1577","severity":1,"message":"1578","line":143,"column":27,"nodeType":"1579","messageId":"1580","endLine":143,"endColumn":30,"suggestions":"1590"},{"ruleId":"1573","severity":1,"message":"1588","line":11,"column":16,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":29},{"ruleId":"1573","severity":1,"message":"1591","line":14,"column":15,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":27},{"ruleId":"1573","severity":1,"message":"1588","line":14,"column":29,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":42},{"ruleId":"1592","severity":1,"message":"1593","line":76,"column":46,"nodeType":"1594","messageId":"1595","endLine":76,"endColumn":77,"fix":"1596"},{"ruleId":"1573","severity":1,"message":"1591","line":14,"column":15,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":27},{"ruleId":"1573","severity":1,"message":"1588","line":14,"column":29,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":42},{"ruleId":"1592","severity":1,"message":"1593","line":84,"column":50,"nodeType":"1594","messageId":"1595","endLine":84,"endColumn":81,"fix":"1597"},{"ruleId":"1573","severity":1,"message":"1598","line":67,"column":31,"nodeType":"1575","messageId":"1576","endLine":67,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1588","line":13,"column":16,"nodeType":"1575","messageId":"1576","endLine":13,"endColumn":45},{"ruleId":"1573","severity":1,"message":"1588","line":14,"column":19,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":32},{"ruleId":"1573","severity":1,"message":"1599","line":7,"column":16,"nodeType":"1575","messageId":"1576","endLine":7,"endColumn":33},{"ruleId":"1573","severity":1,"message":"1600","line":11,"column":67,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":79},{"ruleId":"1573","severity":1,"message":"1601","line":18,"column":47,"nodeType":"1575","messageId":"1576","endLine":18,"endColumn":55},{"ruleId":"1573","severity":1,"message":"1600","line":18,"column":76,"nodeType":"1575","messageId":"1576","endLine":18,"endColumn":88},{"ruleId":"1573","severity":1,"message":"1602","line":21,"column":24,"nodeType":"1575","messageId":"1576","endLine":21,"endColumn":40},{"ruleId":"1573","severity":1,"message":"1603","line":12,"column":15,"nodeType":"1575","messageId":"1576","endLine":12,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1604","line":60,"column":16,"nodeType":"1575","messageId":"1576","endLine":60,"endColumn":48},{"ruleId":"1573","severity":1,"message":"1605","line":124,"column":25,"nodeType":"1575","messageId":"1576","endLine":124,"endColumn":40},{"ruleId":"1573","severity":1,"message":"1606","line":24,"column":16,"nodeType":"1575","messageId":"1576","endLine":24,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1607","line":24,"column":30,"nodeType":"1575","messageId":"1576","endLine":24,"endColumn":65},{"ruleId":"1573","severity":1,"message":"1606","line":9,"column":16,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":26},{"ruleId":"1573","severity":1,"message":"1608","line":13,"column":16,"nodeType":"1575","messageId":"1576","endLine":13,"endColumn":44},{"ruleId":"1573","severity":1,"message":"1609","line":14,"column":16,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":42},{"ruleId":"1573","severity":1,"message":"1588","line":9,"column":19,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":38},{"ruleId":"1610","severity":1,"message":"1611","line":14,"column":23,"nodeType":"1612","messageId":"1613","endLine":14,"endColumn":32},{"ruleId":"1573","severity":1,"message":"1614","line":9,"column":20,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":47},{"ruleId":"1573","severity":1,"message":"1606","line":22,"column":15,"nodeType":"1575","messageId":"1576","endLine":22,"endColumn":25},{"ruleId":"1573","severity":1,"message":"1615","line":16,"column":25,"nodeType":"1575","messageId":"1576","endLine":16,"endColumn":42},{"ruleId":"1573","severity":1,"message":"1606","line":17,"column":20,"nodeType":"1575","messageId":"1576","endLine":17,"endColumn":30},{"ruleId":"1573","severity":1,"message":"1606","line":81,"column":20,"nodeType":"1575","messageId":"1576","endLine":81,"endColumn":30},{"ruleId":"1573","severity":1,"message":"1589","line":4,"column":63,"nodeType":"1575","messageId":"1576","endLine":4,"endColumn":75},{"ruleId":"1573","severity":1,"message":"1608","line":4,"column":77,"nodeType":"1575","messageId":"1576","endLine":4,"endColumn":93},{"ruleId":"1573","severity":1,"message":"1608","line":7,"column":40,"nodeType":"1575","messageId":"1576","endLine":7,"endColumn":56},{"ruleId":"1573","severity":1,"message":"1588","line":7,"column":16,"nodeType":"1575","messageId":"1576","endLine":7,"endColumn":29},{"ruleId":"1573","severity":1,"message":"1588","line":9,"column":16,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":29},{"ruleId":"1573","severity":1,"message":"1588","line":14,"column":19,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":38},{"ruleId":"1573","severity":1,"message":"1616","line":11,"column":20,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":41},{"ruleId":"1573","severity":1,"message":"1606","line":12,"column":15,"nodeType":"1575","messageId":"1576","endLine":12,"endColumn":25},{"ruleId":"1573","severity":1,"message":"1603","line":21,"column":15,"nodeType":"1575","messageId":"1576","endLine":21,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1603","line":17,"column":15,"nodeType":"1575","messageId":"1576","endLine":17,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1603","line":17,"column":15,"nodeType":"1575","messageId":"1576","endLine":17,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1617","line":9,"column":26,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":36},{"ruleId":"1577","severity":1,"message":"1578","line":9,"column":33,"nodeType":"1579","messageId":"1580","endLine":9,"endColumn":36,"suggestions":"1618"},{"ruleId":"1573","severity":1,"message":"1617","line":11,"column":26,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":36},{"ruleId":"1577","severity":1,"message":"1578","line":11,"column":33,"nodeType":"1579","messageId":"1580","endLine":11,"endColumn":36,"suggestions":"1619"},{"ruleId":"1573","severity":1,"message":"1620","line":11,"column":16,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":22},{"ruleId":"1577","severity":1,"message":"1578","line":11,"column":19,"nodeType":"1579","messageId":"1580","endLine":11,"endColumn":22,"suggestions":"1621"},{"ruleId":"1573","severity":1,"message":"1598","line":51,"column":31,"nodeType":"1575","messageId":"1576","endLine":51,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1606","line":16,"column":9,"nodeType":"1575","messageId":"1576","endLine":16,"endColumn":19},{"ruleId":"1573","severity":1,"message":"1622","line":17,"column":9,"nodeType":"1575","messageId":"1576","endLine":17,"endColumn":52},{"ruleId":"1623","severity":1,"message":"1624","line":50,"column":1,"nodeType":"1625","messageId":"1626","endLine":50,"endColumn":13,"fix":"1627"},{"ruleId":"1623","severity":1,"message":"1628","line":51,"column":1,"nodeType":"1625","messageId":"1626","endLine":51,"endColumn":17,"fix":"1629"},{"ruleId":"1623","severity":1,"message":"1630","line":52,"column":1,"nodeType":"1631","messageId":"1626","endLine":52,"endColumn":21,"fix":"1632"},{"ruleId":"1623","severity":1,"message":"1633","line":53,"column":1,"nodeType":"1634","messageId":"1626","endLine":53,"endColumn":25,"fix":"1635"},{"ruleId":"1623","severity":1,"message":"1633","line":54,"column":1,"nodeType":"1634","messageId":"1626","endLine":54,"endColumn":25,"fix":"1636"},{"ruleId":"1623","severity":1,"message":"1633","line":55,"column":1,"nodeType":"1634","messageId":"1626","endLine":55,"endColumn":25,"fix":"1637"},{"ruleId":"1623","severity":1,"message":"1633","line":56,"column":1,"nodeType":"1634","messageId":"1626","endLine":56,"endColumn":25,"fix":"1638"},{"ruleId":"1623","severity":1,"message":"1633","line":57,"column":1,"nodeType":"1634","messageId":"1626","endLine":57,"endColumn":25,"fix":"1639"},{"ruleId":"1623","severity":1,"message":"1633","line":58,"column":1,"nodeType":"1634","messageId":"1626","endLine":58,"endColumn":25,"fix":"1640"},{"ruleId":"1623","severity":1,"message":"1630","line":59,"column":1,"nodeType":"1631","messageId":"1626","endLine":59,"endColumn":21,"fix":"1641"},{"ruleId":"1623","severity":1,"message":"1628","line":60,"column":1,"nodeType":"1631","messageId":"1626","endLine":60,"endColumn":17,"fix":"1642"},{"ruleId":"1623","severity":1,"message":"1624","line":61,"column":1,"nodeType":"1625","messageId":"1626","endLine":61,"endColumn":13,"fix":"1643"},{"ruleId":"1623","severity":1,"message":"1628","line":62,"column":1,"nodeType":"1625","messageId":"1626","endLine":62,"endColumn":17,"fix":"1644"},{"ruleId":"1623","severity":1,"message":"1630","line":63,"column":1,"nodeType":"1631","messageId":"1626","endLine":63,"endColumn":21,"fix":"1645"},{"ruleId":"1623","severity":1,"message":"1633","line":64,"column":1,"nodeType":"1634","messageId":"1626","endLine":64,"endColumn":25,"fix":"1646"},{"ruleId":"1623","severity":1,"message":"1633","line":65,"column":1,"nodeType":"1634","messageId":"1626","endLine":65,"endColumn":25,"fix":"1647"},{"ruleId":"1623","severity":1,"message":"1633","line":66,"column":1,"nodeType":"1634","messageId":"1626","endLine":66,"endColumn":25,"fix":"1648"},{"ruleId":"1623","severity":1,"message":"1633","line":67,"column":1,"nodeType":"1634","messageId":"1626","endLine":67,"endColumn":25,"fix":"1649"},{"ruleId":"1623","severity":1,"message":"1633","line":68,"column":1,"nodeType":"1634","messageId":"1626","endLine":68,"endColumn":25,"fix":"1650"},{"ruleId":"1623","severity":1,"message":"1633","line":69,"column":1,"nodeType":"1634","messageId":"1626","endLine":69,"endColumn":25,"fix":"1651"},{"ruleId":"1623","severity":1,"message":"1633","line":70,"column":1,"nodeType":"1634","messageId":"1626","endLine":70,"endColumn":25,"fix":"1652"},{"ruleId":"1623","severity":1,"message":"1633","line":71,"column":1,"nodeType":"1634","messageId":"1626","endLine":71,"endColumn":25,"fix":"1653"},{"ruleId":"1623","severity":1,"message":"1630","line":72,"column":1,"nodeType":"1631","messageId":"1626","endLine":72,"endColumn":21,"fix":"1654"},{"ruleId":"1623","severity":1,"message":"1628","line":73,"column":1,"nodeType":"1631","messageId":"1626","endLine":73,"endColumn":17,"fix":"1655"},{"ruleId":"1623","severity":1,"message":"1624","line":74,"column":1,"nodeType":"1625","messageId":"1626","endLine":74,"endColumn":13,"fix":"1656"},{"ruleId":"1623","severity":1,"message":"1628","line":75,"column":1,"nodeType":"1625","messageId":"1626","endLine":75,"endColumn":17,"fix":"1657"},{"ruleId":"1623","severity":1,"message":"1630","line":76,"column":1,"nodeType":"1631","messageId":"1626","endLine":76,"endColumn":21,"fix":"1658"},{"ruleId":"1623","severity":1,"message":"1633","line":77,"column":1,"nodeType":"1634","messageId":"1626","endLine":77,"endColumn":25,"fix":"1659"},{"ruleId":"1623","severity":1,"message":"1633","line":78,"column":1,"nodeType":"1634","messageId":"1626","endLine":78,"endColumn":25,"fix":"1660"},{"ruleId":"1623","severity":1,"message":"1633","line":79,"column":1,"nodeType":"1634","messageId":"1626","endLine":79,"endColumn":25,"fix":"1661"},{"ruleId":"1623","severity":1,"message":"1633","line":80,"column":1,"nodeType":"1634","messageId":"1626","endLine":80,"endColumn":25,"fix":"1662"},{"ruleId":"1623","severity":1,"message":"1633","line":81,"column":1,"nodeType":"1634","messageId":"1626","endLine":81,"endColumn":25,"fix":"1663"},{"ruleId":"1623","severity":1,"message":"1633","line":82,"column":1,"nodeType":"1634","messageId":"1626","endLine":82,"endColumn":25,"fix":"1664"},{"ruleId":"1623","severity":1,"message":"1633","line":83,"column":1,"nodeType":"1634","messageId":"1626","endLine":83,"endColumn":25,"fix":"1665"},{"ruleId":"1623","severity":1,"message":"1633","line":84,"column":1,"nodeType":"1634","messageId":"1626","endLine":84,"endColumn":25,"fix":"1666"},{"ruleId":"1623","severity":1,"message":"1633","line":85,"column":1,"nodeType":"1634","messageId":"1626","endLine":85,"endColumn":25,"fix":"1667"},{"ruleId":"1623","severity":1,"message":"1633","line":86,"column":1,"nodeType":"1634","messageId":"1626","endLine":86,"endColumn":25,"fix":"1668"},{"ruleId":"1623","severity":1,"message":"1633","line":87,"column":1,"nodeType":"1634","messageId":"1626","endLine":87,"endColumn":25,"fix":"1669"},{"ruleId":"1623","severity":1,"message":"1633","line":88,"column":1,"nodeType":"1634","messageId":"1626","endLine":88,"endColumn":25,"fix":"1670"},{"ruleId":"1623","severity":1,"message":"1633","line":89,"column":1,"nodeType":"1634","messageId":"1626","endLine":89,"endColumn":25,"fix":"1671"},{"ruleId":"1623","severity":1,"message":"1633","line":90,"column":1,"nodeType":"1634","messageId":"1626","endLine":90,"endColumn":25,"fix":"1672"},{"ruleId":"1623","severity":1,"message":"1633","line":91,"column":1,"nodeType":"1634","messageId":"1626","endLine":91,"endColumn":25,"fix":"1673"},{"ruleId":"1623","severity":1,"message":"1633","line":92,"column":1,"nodeType":"1634","messageId":"1626","endLine":92,"endColumn":25,"fix":"1674"},{"ruleId":"1623","severity":1,"message":"1630","line":93,"column":1,"nodeType":"1631","messageId":"1626","endLine":93,"endColumn":21,"fix":"1675"},{"ruleId":"1623","severity":1,"message":"1628","line":94,"column":1,"nodeType":"1631","messageId":"1626","endLine":94,"endColumn":17,"fix":"1676"},{"ruleId":"1623","severity":1,"message":"1624","line":95,"column":1,"nodeType":"1625","messageId":"1626","endLine":95,"endColumn":13,"fix":"1677"},{"ruleId":"1623","severity":1,"message":"1628","line":96,"column":1,"nodeType":"1625","messageId":"1626","endLine":96,"endColumn":17,"fix":"1678"},{"ruleId":"1623","severity":1,"message":"1630","line":97,"column":1,"nodeType":"1631","messageId":"1626","endLine":97,"endColumn":21,"fix":"1679"},{"ruleId":"1623","severity":1,"message":"1633","line":98,"column":1,"nodeType":"1634","messageId":"1626","endLine":98,"endColumn":25,"fix":"1680"},{"ruleId":"1623","severity":1,"message":"1633","line":99,"column":1,"nodeType":"1634","messageId":"1626","endLine":99,"endColumn":25,"fix":"1681"},{"ruleId":"1623","severity":1,"message":"1633","line":100,"column":1,"nodeType":"1634","messageId":"1626","endLine":100,"endColumn":25,"fix":"1682"},{"ruleId":"1623","severity":1,"message":"1633","line":101,"column":1,"nodeType":"1634","messageId":"1626","endLine":101,"endColumn":25,"fix":"1683"},{"ruleId":"1623","severity":1,"message":"1633","line":102,"column":1,"nodeType":"1634","messageId":"1626","endLine":102,"endColumn":25,"fix":"1684"},{"ruleId":"1623","severity":1,"message":"1633","line":103,"column":1,"nodeType":"1634","messageId":"1626","endLine":103,"endColumn":25,"fix":"1685"},{"ruleId":"1623","severity":1,"message":"1633","line":104,"column":1,"nodeType":"1634","messageId":"1626","endLine":104,"endColumn":25,"fix":"1686"},{"ruleId":"1623","severity":1,"message":"1633","line":105,"column":1,"nodeType":"1634","messageId":"1626","endLine":105,"endColumn":25,"fix":"1687"},{"ruleId":"1623","severity":1,"message":"1633","line":106,"column":1,"nodeType":"1634","messageId":"1626","endLine":106,"endColumn":25,"fix":"1688"},{"ruleId":"1623","severity":1,"message":"1630","line":107,"column":1,"nodeType":"1631","messageId":"1626","endLine":107,"endColumn":21,"fix":"1689"},{"ruleId":"1623","severity":1,"message":"1628","line":108,"column":1,"nodeType":"1631","messageId":"1626","endLine":108,"endColumn":17,"fix":"1690"},{"ruleId":"1623","severity":1,"message":"1624","line":109,"column":1,"nodeType":"1625","messageId":"1626","endLine":109,"endColumn":13,"fix":"1691"},{"ruleId":"1623","severity":1,"message":"1628","line":110,"column":1,"nodeType":"1625","messageId":"1626","endLine":110,"endColumn":17,"fix":"1692"},{"ruleId":"1623","severity":1,"message":"1630","line":111,"column":1,"nodeType":"1631","messageId":"1626","endLine":111,"endColumn":21,"fix":"1693"},{"ruleId":"1623","severity":1,"message":"1633","line":112,"column":1,"nodeType":"1634","messageId":"1626","endLine":112,"endColumn":25,"fix":"1694"},{"ruleId":"1623","severity":1,"message":"1633","line":113,"column":1,"nodeType":"1634","messageId":"1626","endLine":113,"endColumn":25,"fix":"1695"},{"ruleId":"1623","severity":1,"message":"1633","line":114,"column":1,"nodeType":"1634","messageId":"1626","endLine":114,"endColumn":25,"fix":"1696"},{"ruleId":"1623","severity":1,"message":"1630","line":115,"column":1,"nodeType":"1631","messageId":"1626","endLine":115,"endColumn":21,"fix":"1697"},{"ruleId":"1623","severity":1,"message":"1628","line":116,"column":1,"nodeType":"1631","messageId":"1626","endLine":116,"endColumn":17,"fix":"1698"},{"ruleId":"1623","severity":1,"message":"1624","line":117,"column":1,"nodeType":"1625","messageId":"1626","endLine":117,"endColumn":13,"fix":"1699"},{"ruleId":"1623","severity":1,"message":"1628","line":118,"column":1,"nodeType":"1625","messageId":"1626","endLine":118,"endColumn":17,"fix":"1700"},{"ruleId":"1569","severity":1,"message":"1570","line":63,"column":33,"nodeType":"1571","messageId":"1572","endLine":63,"endColumn":44},{"ruleId":"1573","severity":1,"message":"1603","line":9,"column":15,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":27},{"ruleId":"1573","severity":1,"message":"1603","line":15,"column":15,"nodeType":"1575","messageId":"1576","endLine":15,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1607","line":60,"column":14,"nodeType":"1575","messageId":"1576","endLine":60,"endColumn":71},{"ruleId":"1573","severity":1,"message":"1607","line":64,"column":14,"nodeType":"1575","messageId":"1576","endLine":64,"endColumn":24},{"ruleId":"1577","severity":1,"message":"1578","line":85,"column":73,"nodeType":"1579","messageId":"1580","endLine":85,"endColumn":76,"suggestions":"1701"},{"ruleId":"1573","severity":1,"message":"1702","line":19,"column":5,"nodeType":"1575","messageId":"1576","endLine":19,"endColumn":17},{"ruleId":"1573","severity":1,"message":"1702","line":23,"column":5,"nodeType":"1575","messageId":"1576","endLine":23,"endColumn":17},{"ruleId":"1573","severity":1,"message":"1598","line":113,"column":38,"nodeType":"1575","messageId":"1576","endLine":113,"endColumn":50},{"ruleId":"1577","severity":1,"message":"1578","line":22,"column":14,"nodeType":"1579","messageId":"1580","endLine":22,"endColumn":17,"suggestions":"1703"},{"ruleId":"1573","severity":1,"message":"1589","line":23,"column":16,"nodeType":"1575","messageId":"1576","endLine":23,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":23,"column":30,"nodeType":"1575","messageId":"1576","endLine":23,"endColumn":43},{"ruleId":"1577","severity":1,"message":"1578","line":9,"column":14,"nodeType":"1579","messageId":"1580","endLine":9,"endColumn":17,"suggestions":"1704"},{"ruleId":"1573","severity":1,"message":"1589","line":13,"column":16,"nodeType":"1575","messageId":"1576","endLine":13,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":13,"column":30,"nodeType":"1575","messageId":"1576","endLine":13,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1589","line":10,"column":52,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":64},{"ruleId":"1573","severity":1,"message":"1617","line":3,"column":94,"nodeType":"1575","messageId":"1576","endLine":3,"endColumn":106},{"ruleId":"1573","severity":1,"message":"1705","line":52,"column":22,"nodeType":"1575","messageId":"1576","endLine":52,"endColumn":36},{"ruleId":"1573","severity":1,"message":"1706","line":9,"column":15,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":27},{"ruleId":"1573","severity":1,"message":"1588","line":15,"column":20,"nodeType":"1575","messageId":"1576","endLine":22,"endColumn":6},{"ruleId":"1573","severity":1,"message":"1606","line":12,"column":15,"nodeType":"1575","messageId":"1576","endLine":12,"endColumn":25},{"ruleId":"1573","severity":1,"message":"1606","line":47,"column":95,"nodeType":"1575","messageId":"1576","endLine":47,"endColumn":105},{"ruleId":"1573","severity":1,"message":"1588","line":9,"column":15,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":9,"column":15,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":22,"column":16,"nodeType":"1575","messageId":"1576","endLine":22,"endColumn":40},{"ruleId":"1573","severity":1,"message":"1589","line":23,"column":19,"nodeType":"1575","messageId":"1576","endLine":23,"endColumn":31},{"ruleId":"1573","severity":1,"message":"1598","line":175,"column":31,"nodeType":"1575","messageId":"1576","endLine":175,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1591","line":16,"column":15,"nodeType":"1575","messageId":"1576","endLine":16,"endColumn":27},{"ruleId":"1573","severity":1,"message":"1588","line":16,"column":29,"nodeType":"1575","messageId":"1576","endLine":16,"endColumn":42},{"ruleId":"1573","severity":1,"message":"1591","line":14,"column":15,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":27},{"ruleId":"1573","severity":1,"message":"1588","line":14,"column":29,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":42},{"ruleId":"1577","severity":1,"message":"1578","line":69,"column":42,"nodeType":"1579","messageId":"1580","endLine":69,"endColumn":45,"suggestions":"1707"},{"ruleId":"1573","severity":1,"message":"1606","line":13,"column":15,"nodeType":"1575","messageId":"1576","endLine":13,"endColumn":25},{"ruleId":"1573","severity":1,"message":"1588","line":12,"column":20,"nodeType":"1575","messageId":"1576","endLine":12,"endColumn":33},{"ruleId":"1573","severity":1,"message":"1588","line":10,"column":16,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":29},{"ruleId":"1573","severity":1,"message":"1588","line":68,"column":16,"nodeType":"1575","messageId":"1576","endLine":68,"endColumn":29},{"ruleId":"1573","severity":1,"message":"1588","line":9,"column":15,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":33,"column":16,"nodeType":"1575","messageId":"1576","endLine":33,"endColumn":29},{"ruleId":"1573","severity":1,"message":"1708","line":17,"column":73,"nodeType":"1575","messageId":"1576","endLine":17,"endColumn":81},{"ruleId":"1573","severity":1,"message":"1588","line":8,"column":16,"nodeType":"1575","messageId":"1576","endLine":8,"endColumn":29},{"ruleId":"1573","severity":1,"message":"1591","line":10,"column":19,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":31},{"ruleId":"1573","severity":1,"message":"1606","line":10,"column":33,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1591","line":24,"column":15,"nodeType":"1575","messageId":"1576","endLine":24,"endColumn":27},{"ruleId":"1573","severity":1,"message":"1588","line":24,"column":29,"nodeType":"1575","messageId":"1576","endLine":24,"endColumn":42},{"ruleId":"1573","severity":1,"message":"1591","line":13,"column":16,"nodeType":"1575","messageId":"1576","endLine":13,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":13,"column":30,"nodeType":"1575","messageId":"1576","endLine":13,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1591","line":15,"column":15,"nodeType":"1575","messageId":"1576","endLine":15,"endColumn":27},{"ruleId":"1573","severity":1,"message":"1588","line":15,"column":29,"nodeType":"1575","messageId":"1576","endLine":15,"endColumn":42},{"ruleId":"1573","severity":1,"message":"1588","line":34,"column":25,"nodeType":"1575","messageId":"1576","endLine":34,"endColumn":38},{"ruleId":"1573","severity":1,"message":"1591","line":35,"column":30,"nodeType":"1575","messageId":"1576","endLine":35,"endColumn":42},{"ruleId":"1573","severity":1,"message":"1588","line":35,"column":44,"nodeType":"1575","messageId":"1576","endLine":35,"endColumn":68},{"ruleId":"1573","severity":1,"message":"1709","line":25,"column":31,"nodeType":"1575","messageId":"1576","endLine":25,"endColumn":70},{"ruleId":"1573","severity":1,"message":"1710","line":9,"column":16,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":36},{"ruleId":"1573","severity":1,"message":"1588","line":9,"column":16,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":29},{"ruleId":"1573","severity":1,"message":"1589","line":49,"column":16,"nodeType":"1575","messageId":"1576","endLine":49,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":49,"column":30,"nodeType":"1575","messageId":"1576","endLine":49,"endColumn":54},{"ruleId":"1573","severity":1,"message":"1620","line":50,"column":14,"nodeType":"1575","messageId":"1576","endLine":50,"endColumn":45},{"ruleId":"1573","severity":1,"message":"1589","line":14,"column":16,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":14,"column":30,"nodeType":"1575","messageId":"1576","endLine":14,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1620","line":15,"column":14,"nodeType":"1575","messageId":"1576","endLine":15,"endColumn":45},{"ruleId":"1573","severity":1,"message":"1711","line":8,"column":25,"nodeType":"1575","messageId":"1576","endLine":8,"endColumn":42},{"ruleId":"1573","severity":1,"message":"1591","line":11,"column":15,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":27},{"ruleId":"1573","severity":1,"message":"1606","line":11,"column":29,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":39},{"ruleId":"1573","severity":1,"message":"1620","line":48,"column":29,"nodeType":"1575","messageId":"1576","endLine":48,"endColumn":81},{"ruleId":"1549","replacedBy":"1712"},{"ruleId":"1551","replacedBy":"1713"},{"ruleId":"1553","replacedBy":"1714"},{"ruleId":"1555","replacedBy":"1715"},{"ruleId":"1557","replacedBy":"1716"},{"ruleId":"1559","replacedBy":"1717"},{"ruleId":"1561","replacedBy":"1718"},{"ruleId":"1563","replacedBy":"1719"},{"ruleId":"1565","replacedBy":"1720"},{"ruleId":"1567","replacedBy":"1721"},{"ruleId":"1573","severity":1,"message":"1606","line":22,"column":16,"nodeType":"1575","messageId":"1576","endLine":22,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":12,"column":20,"nodeType":"1575","messageId":"1576","endLine":12,"endColumn":33},{"ruleId":"1573","severity":1,"message":"1598","line":71,"column":31,"nodeType":"1575","messageId":"1576","endLine":71,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1591","line":21,"column":16,"nodeType":"1575","messageId":"1576","endLine":21,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":21,"column":30,"nodeType":"1575","messageId":"1576","endLine":21,"endColumn":54},{"ruleId":"1573","severity":1,"message":"1589","line":10,"column":30,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":42},{"ruleId":"1573","severity":1,"message":"1588","line":7,"column":16,"nodeType":"1575","messageId":"1576","endLine":7,"endColumn":29},{"ruleId":"1573","severity":1,"message":"1722","line":24,"column":22,"nodeType":"1575","messageId":"1576","endLine":24,"endColumn":36},{"ruleId":"1573","severity":1,"message":"1723","line":7,"column":16,"nodeType":"1575","messageId":"1576","endLine":7,"endColumn":30},{"ruleId":"1573","severity":1,"message":"1598","line":33,"column":31,"nodeType":"1575","messageId":"1576","endLine":33,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1724","line":6,"column":45,"nodeType":"1575","messageId":"1576","endLine":6,"endColumn":61},{"ruleId":"1573","severity":1,"message":"1589","line":11,"column":16,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":11,"column":30,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":45},{"ruleId":"1573","severity":1,"message":"1620","line":12,"column":14,"nodeType":"1575","messageId":"1576","endLine":12,"endColumn":45},{"ruleId":"1573","severity":1,"message":"1588","line":17,"column":19,"nodeType":"1575","messageId":"1576","endLine":17,"endColumn":33},{"ruleId":"1573","severity":1,"message":"1589","line":10,"column":16,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":10,"column":30,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1589","line":11,"column":16,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":11,"column":30,"nodeType":"1575","messageId":"1576","endLine":11,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1620","line":12,"column":14,"nodeType":"1575","messageId":"1576","endLine":12,"endColumn":45},{"ruleId":"1573","severity":1,"message":"1588","line":10,"column":20,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":33},{"ruleId":"1573","severity":1,"message":"1591","line":10,"column":16,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":10,"column":30,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1591","line":10,"column":16,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":10,"column":30,"nodeType":"1575","messageId":"1576","endLine":10,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1591","line":20,"column":16,"nodeType":"1575","messageId":"1576","endLine":20,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1588","line":20,"column":30,"nodeType":"1575","messageId":"1576","endLine":20,"endColumn":45},{"ruleId":"1569","severity":1,"message":"1570","line":45,"column":17,"nodeType":"1571","messageId":"1572","endLine":45,"endColumn":28},{"ruleId":"1573","severity":1,"message":"1598","line":61,"column":31,"nodeType":"1575","messageId":"1576","endLine":61,"endColumn":43},{"ruleId":"1573","severity":1,"message":"1589","line":9,"column":59,"nodeType":"1575","messageId":"1576","endLine":9,"endColumn":71},"newline-before-return",["1725"],"@typescript-eslint/ban-ts-ignore",["1726"],"@typescript-eslint/camelcase",["1727"],"@typescript-eslint/class-name-casing",["1727"],"@typescript-eslint/interface-name-prefix",["1727"],"lines-around-directive",["1725"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'registration' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["1728","1729"],["1730","1731"],"'b' is defined but never used.",["1732","1733"],["1734","1735"],["1736","1737"],["1738","1739"],"'value' is defined but never used.","'name' is defined but never used.",["1740","1741"],"'type' is defined but never used.","quotes","Strings must use singlequote.","TemplateLiteral","wrongQuotes",{"range":"1742","text":"1743"},{"range":"1744","text":"1743"},"'theme' is defined but never used.","'props' is defined but never used.","'error' is defined but never used.","'user' is defined but never used.","'language' is defined but never used.","'link' is defined but never used.","'state' is defined but never used.","'kindergartenIds' is assigned a value but never used.","'id' is defined but never used.","'options' is defined but never used.","'values' is defined but never used.","'kindergarten' is defined but never used.","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","'paginationDirection' is defined but never used.","'child' is defined but never used.","'decision' is defined but never used.","'event' is defined but never used.",["1745","1746"],["1747","1748"],"'e' is defined but never used.",["1749","1750"],"'assessment' is defined but never used.","indent","Expected indentation of 8 spaces but found 12.","Keyword","wrongIndentation",{"range":"1751","text":"1752"},"Expected indentation of 12 spaces but found 16.",{"range":"1753","text":"1754"},"Expected indentation of 16 spaces but found 20.","Punctuator",{"range":"1755","text":"1756"},"Expected indentation of 20 spaces but found 24.","JSXIdentifier",{"range":"1757","text":"1758"},{"range":"1759","text":"1758"},{"range":"1760","text":"1758"},{"range":"1761","text":"1758"},{"range":"1762","text":"1758"},{"range":"1763","text":"1758"},{"range":"1764","text":"1756"},{"range":"1765","text":"1754"},{"range":"1766","text":"1752"},{"range":"1767","text":"1754"},{"range":"1768","text":"1756"},{"range":"1769","text":"1758"},{"range":"1770","text":"1758"},{"range":"1771","text":"1758"},{"range":"1772","text":"1758"},{"range":"1773","text":"1758"},{"range":"1774","text":"1758"},{"range":"1775","text":"1758"},{"range":"1776","text":"1758"},{"range":"1777","text":"1756"},{"range":"1778","text":"1754"},{"range":"1779","text":"1752"},{"range":"1780","text":"1754"},{"range":"1781","text":"1756"},{"range":"1782","text":"1758"},{"range":"1783","text":"1758"},{"range":"1784","text":"1758"},{"range":"1785","text":"1758"},{"range":"1786","text":"1758"},{"range":"1787","text":"1758"},{"range":"1788","text":"1758"},{"range":"1789","text":"1758"},{"range":"1790","text":"1758"},{"range":"1791","text":"1758"},{"range":"1792","text":"1758"},{"range":"1793","text":"1758"},{"range":"1794","text":"1758"},{"range":"1795","text":"1758"},{"range":"1796","text":"1758"},{"range":"1797","text":"1758"},{"range":"1798","text":"1756"},{"range":"1799","text":"1754"},{"range":"1800","text":"1752"},{"range":"1801","text":"1754"},{"range":"1802","text":"1756"},{"range":"1803","text":"1758"},{"range":"1804","text":"1758"},{"range":"1805","text":"1758"},{"range":"1806","text":"1758"},{"range":"1807","text":"1758"},{"range":"1808","text":"1758"},{"range":"1809","text":"1758"},{"range":"1810","text":"1758"},{"range":"1811","text":"1758"},{"range":"1812","text":"1756"},{"range":"1813","text":"1754"},{"range":"1814","text":"1752"},{"range":"1815","text":"1754"},{"range":"1816","text":"1756"},{"range":"1817","text":"1758"},{"range":"1818","text":"1758"},{"range":"1819","text":"1758"},{"range":"1820","text":"1756"},{"range":"1821","text":"1754"},{"range":"1822","text":"1752"},{"range":"1823","text":"1754"},["1824","1825"],"'preventClose' is defined but never used.",["1826","1827"],["1828","1829"],"'kindergartenId' is assigned a value but never used.","'lang' is defined but never used.",["1830","1831"],"'childAge' is defined but never used.","'instructor' is defined but never used.","'assessmentId' is defined but never used.","'direction' is defined but never used.",["1725"],["1726"],["1727"],["1727"],["1727"],["1725"],[],[],[],[],"'series' is defined but never used.","'amount' is defined but never used.","'filename' is defined but never used.","padding-line-between-statements","ban-ts-comment","naming-convention",{"messageId":"1832","fix":"1833","desc":"1834"},{"messageId":"1835","fix":"1836","desc":"1837"},{"messageId":"1832","fix":"1838","desc":"1834"},{"messageId":"1835","fix":"1839","desc":"1837"},{"messageId":"1832","fix":"1840","desc":"1834"},{"messageId":"1835","fix":"1841","desc":"1837"},{"messageId":"1832","fix":"1842","desc":"1834"},{"messageId":"1835","fix":"1843","desc":"1837"},{"messageId":"1832","fix":"1844","desc":"1834"},{"messageId":"1835","fix":"1845","desc":"1837"},{"messageId":"1832","fix":"1846","desc":"1834"},{"messageId":"1835","fix":"1847","desc":"1837"},{"messageId":"1832","fix":"1848","desc":"1834"},{"messageId":"1835","fix":"1849","desc":"1837"},[3626,3657],"'add-result-page.save-and-next'",[4365,4396],{"messageId":"1832","fix":"1850","desc":"1834"},{"messageId":"1835","fix":"1851","desc":"1837"},{"messageId":"1832","fix":"1852","desc":"1834"},{"messageId":"1835","fix":"1853","desc":"1837"},{"messageId":"1832","fix":"1854","desc":"1834"},{"messageId":"1835","fix":"1855","desc":"1837"},[1925,1937],"        ",[1945,1961],"            ",[1970,1990],"                ",[2008,2032],"                    ",[2060,2084],[2108,2132],[2144,2168],[2197,2221],[2257,2281],[2315,2335],[2338,2354],[2357,2369],[2377,2393],[2402,2422],[2441,2465],[2493,2517],[2541,2565],[2589,2613],[2627,2651],[2663,2687],[2716,2740],[2826,2850],[2884,2904],[2907,2923],[2926,2938],[2946,2962],[2971,2991],[3014,3038],[3062,3086],[3110,3134],[3170,3194],[3228,3252],[3300,3324],[3366,3390],[3434,3458],[3516,3540],[3600,3624],[3662,3686],[3724,3748],[3788,3812],[3852,3876],[3922,3946],[3988,4012],[4036,4056],[4059,4075],[4078,4090],[4098,4114],[4123,4143],[4165,4189],[4217,4241],[4265,4289],[4313,4337],[4357,4381],[4415,4439],[4468,4492],[4528,4552],[4586,4610],[4643,4663],[4666,4682],[4685,4697],[4705,4721],[4730,4750],[4772,4796],[4833,4857],[4941,4965],[5003,5023],[5026,5042],[5045,5057],[5066,5082],{"messageId":"1832","fix":"1856","desc":"1834"},{"messageId":"1835","fix":"1857","desc":"1837"},{"messageId":"1832","fix":"1858","desc":"1834"},{"messageId":"1835","fix":"1859","desc":"1837"},{"messageId":"1832","fix":"1860","desc":"1834"},{"messageId":"1835","fix":"1861","desc":"1837"},{"messageId":"1832","fix":"1862","desc":"1834"},{"messageId":"1835","fix":"1863","desc":"1837"},"suggestUnknown",{"range":"1864","text":"1865"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"1864","text":"1866"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"1867","text":"1865"},{"range":"1867","text":"1866"},{"range":"1868","text":"1865"},{"range":"1868","text":"1866"},{"range":"1869","text":"1865"},{"range":"1869","text":"1866"},{"range":"1870","text":"1865"},{"range":"1870","text":"1866"},{"range":"1871","text":"1865"},{"range":"1871","text":"1866"},{"range":"1872","text":"1865"},{"range":"1872","text":"1866"},{"range":"1873","text":"1865"},{"range":"1873","text":"1866"},{"range":"1874","text":"1865"},{"range":"1874","text":"1866"},{"range":"1875","text":"1865"},{"range":"1875","text":"1866"},{"range":"1876","text":"1865"},{"range":"1876","text":"1866"},{"range":"1877","text":"1865"},{"range":"1877","text":"1866"},{"range":"1878","text":"1865"},{"range":"1878","text":"1866"},{"range":"1879","text":"1865"},{"range":"1879","text":"1866"},[628,631],"unknown","never",[640,643],[6952,6955],[7548,7551],[3892,3895],[4104,4107],[4460,4463],[346,349],[421,424],[373,376],[3121,3124],[446,449],[193,196],[2696,2699]]